
Timer_Interrupt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000054  00800100  00000b1a  00000bae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b1a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000004b  00800154  00800154  00000c02  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c02  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c60  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  00000ca0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010b9  00000000  00000000  00000d00  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000913  00000000  00000000  00001db9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000691  00000000  00000000  000026cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000014c  00000000  00000000  00002d60  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000533  00000000  00000000  00002eac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000617  00000000  00000000  000033df  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000039f6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	99 c0       	rjmp	.+306    	; 0x174 <__vector_16>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ea e1       	ldi	r30, 0x1A	; 26
  a0:	fb e0       	ldi	r31, 0x0B	; 11
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 35       	cpi	r26, 0x54	; 84
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e5       	ldi	r26, 0x54	; 84
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	af 39       	cpi	r26, 0x9F	; 159
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	d8 d0       	rcall	.+432    	; 0x274 <main>
  c4:	28 c5       	rjmp	.+2640   	; 0xb16 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <LCD_pulse_enable>:
	row %= 2;
	
	uint8_t address = (0x40 * row) + col;
	uint8_t command = 0x80 + address;
	
	LCD_write_command(command);
  c8:	c7 9a       	sbi	0x18, 7	; 24
  ca:	89 ef       	ldi	r24, 0xF9	; 249
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	01 97       	sbiw	r24, 0x01	; 1
  d0:	f1 f7       	brne	.-4      	; 0xce <LCD_pulse_enable+0x6>
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <LCD_pulse_enable+0xc>
  d4:	00 00       	nop
  d6:	c7 98       	cbi	0x18, 7	; 24
  d8:	89 ef       	ldi	r24, 0xF9	; 249
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	01 97       	sbiw	r24, 0x01	; 1
  de:	f1 f7       	brne	.-4      	; 0xdc <LCD_pulse_enable+0x14>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <LCD_pulse_enable+0x1a>
  e2:	00 00       	nop
  e4:	08 95       	ret

000000e6 <LCD_write_data>:
  e6:	c5 9a       	sbi	0x18, 5	; 24
  e8:	85 bb       	out	0x15, r24	; 21
  ea:	ee df       	rcall	.-36     	; 0xc8 <LCD_pulse_enable>
  ec:	83 ef       	ldi	r24, 0xF3	; 243
  ee:	91 e0       	ldi	r25, 0x01	; 1
  f0:	01 97       	sbiw	r24, 0x01	; 1
  f2:	f1 f7       	brne	.-4      	; 0xf0 <LCD_write_data+0xa>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <LCD_write_data+0x10>
  f6:	00 00       	nop
  f8:	08 95       	ret

000000fa <LCD_write_command>:
  fa:	c5 98       	cbi	0x18, 5	; 24
  fc:	85 bb       	out	0x15, r24	; 21
  fe:	e4 df       	rcall	.-56     	; 0xc8 <LCD_pulse_enable>
 100:	83 ef       	ldi	r24, 0xF3	; 243
 102:	91 e0       	ldi	r25, 0x01	; 1
 104:	01 97       	sbiw	r24, 0x01	; 1
 106:	f1 f7       	brne	.-4      	; 0x104 <LCD_write_command+0xa>
 108:	00 c0       	rjmp	.+0      	; 0x10a <LCD_write_command+0x10>
 10a:	00 00       	nop
 10c:	08 95       	ret

0000010e <LCD_clear>:
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	f4 df       	rcall	.-24     	; 0xfa <LCD_write_command>
 112:	83 ef       	ldi	r24, 0xF3	; 243
 114:	91 e0       	ldi	r25, 0x01	; 1
 116:	01 97       	sbiw	r24, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <LCD_clear+0x8>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <LCD_clear+0xe>
 11c:	00 00       	nop
 11e:	08 95       	ret

00000120 <LCD_init>:
 120:	83 ed       	ldi	r24, 0xD3	; 211
 122:	90 e3       	ldi	r25, 0x30	; 48
 124:	01 97       	sbiw	r24, 0x01	; 1
 126:	f1 f7       	brne	.-4      	; 0x124 <LCD_init+0x4>
 128:	00 c0       	rjmp	.+0      	; 0x12a <LCD_init+0xa>
 12a:	00 00       	nop
 12c:	8f ef       	ldi	r24, 0xFF	; 255
 12e:	84 bb       	out	0x14, r24	; 20
 130:	15 ba       	out	0x15, r1	; 21
 132:	87 b3       	in	r24, 0x17	; 23
 134:	80 6e       	ori	r24, 0xE0	; 224
 136:	87 bb       	out	0x17, r24	; 23
 138:	c6 98       	cbi	0x18, 6	; 24
 13a:	88 e3       	ldi	r24, 0x38	; 56
 13c:	de df       	rcall	.-68     	; 0xfa <LCD_write_command>
 13e:	8c e0       	ldi	r24, 0x0C	; 12
 140:	dc df       	rcall	.-72     	; 0xfa <LCD_write_command>
 142:	e5 df       	rcall	.-54     	; 0x10e <LCD_clear>
 144:	86 e0       	ldi	r24, 0x06	; 6
 146:	d9 cf       	rjmp	.-78     	; 0xfa <LCD_write_command>
 148:	08 95       	ret

0000014a <LCD_write_string>:
 14a:	0f 93       	push	r16
 14c:	1f 93       	push	r17
 14e:	cf 93       	push	r28
 150:	fc 01       	movw	r30, r24
 152:	80 81       	ld	r24, Z
 154:	88 23       	and	r24, r24
 156:	51 f0       	breq	.+20     	; 0x16c <LCD_write_string+0x22>
 158:	8f 01       	movw	r16, r30
 15a:	c0 e0       	ldi	r28, 0x00	; 0
 15c:	c4 df       	rcall	.-120    	; 0xe6 <LCD_write_data>
 15e:	cf 5f       	subi	r28, 0xFF	; 255
 160:	f8 01       	movw	r30, r16
 162:	ec 0f       	add	r30, r28
 164:	f1 1d       	adc	r31, r1
 166:	80 81       	ld	r24, Z
 168:	81 11       	cpse	r24, r1
 16a:	f8 cf       	rjmp	.-16     	; 0x15c <LCD_write_string+0x12>
 16c:	cf 91       	pop	r28
 16e:	1f 91       	pop	r17
 170:	0f 91       	pop	r16
 172:	08 95       	ret

00000174 <__vector_16>:
int state_count7 = 0;
int state_count12 = 0;
int state_count14 = 0;

ISR(TIMER0_OVF_vect)
{
 174:	1f 92       	push	r1
 176:	0f 92       	push	r0
 178:	0f b6       	in	r0, 0x3f	; 63
 17a:	0f 92       	push	r0
 17c:	11 24       	eor	r1, r1
 17e:	2f 93       	push	r18
 180:	3f 93       	push	r19
 182:	8f 93       	push	r24
 184:	9f 93       	push	r25
	count++;
 186:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <count>
 18a:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <count+0x1>
 18e:	01 96       	adiw	r24, 0x01	; 1
	if(count == 1000)
 190:	88 3e       	cpi	r24, 0xE8	; 232
 192:	23 e0       	ldi	r18, 0x03	; 3
 194:	92 07       	cpc	r25, r18
 196:	29 f0       	breq	.+10     	; 0x1a2 <__vector_16+0x2e>
int state_count12 = 0;
int state_count14 = 0;

ISR(TIMER0_OVF_vect)
{
	count++;
 198:	90 93 5f 01 	sts	0x015F, r25	; 0x80015f <count+0x1>
 19c:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <count>
 1a0:	5e c0       	rjmp	.+188    	; 0x25e <__vector_16+0xea>
	if(count == 1000)
	{
		count = 0;
 1a2:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <count+0x1>
 1a6:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <count>
		state = !state;
 1aa:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <state>
 1ae:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <state+0x1>
 1b2:	21 e0       	ldi	r18, 0x01	; 1
 1b4:	30 e0       	ldi	r19, 0x00	; 0
 1b6:	00 97       	sbiw	r24, 0x00	; 0
 1b8:	11 f0       	breq	.+4      	; 0x1be <__vector_16+0x4a>
 1ba:	20 e0       	ldi	r18, 0x00	; 0
 1bc:	30 e0       	ldi	r19, 0x00	; 0
 1be:	30 93 5d 01 	sts	0x015D, r19	; 0x80015d <state+0x1>
 1c2:	20 93 5c 01 	sts	0x015C, r18	; 0x80015c <state>
		if(state) PORTE = 0x01;
 1c6:	89 2b       	or	r24, r25
 1c8:	19 f4       	brne	.+6      	; 0x1d0 <__vector_16+0x5c>
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	83 b9       	out	0x03, r24	; 3
 1ce:	01 c0       	rjmp	.+2      	; 0x1d2 <__vector_16+0x5e>
		else PORTE = 0x00;
 1d0:	13 b8       	out	0x03, r1	; 3
		ms++;
 1d2:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <ms>
 1d6:	8f 5f       	subi	r24, 0xFF	; 255
 1d8:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <ms>
		state_LED++;
 1dc:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <state_LED>
 1e0:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <state_LED+0x1>
 1e4:	01 96       	adiw	r24, 0x01	; 1
 1e6:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <state_LED+0x1>
 1ea:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <state_LED>
		state_count5 = count_flag5 - state_LED;
 1ee:	20 91 5a 01 	lds	r18, 0x015A	; 0x80015a <state_LED>
 1f2:	30 91 5b 01 	lds	r19, 0x015B	; 0x80015b <state_LED+0x1>
 1f6:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <count_flag5>
 1fa:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <count_flag5+0x1>
 1fe:	82 1b       	sub	r24, r18
 200:	93 0b       	sbc	r25, r19
 202:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 206:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
		state_count7 = count_flag7 - state_LED; 
 20a:	20 91 5a 01 	lds	r18, 0x015A	; 0x80015a <state_LED>
 20e:	30 91 5b 01 	lds	r19, 0x015B	; 0x80015b <state_LED+0x1>
 212:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <count_flag7>
 216:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <count_flag7+0x1>
 21a:	82 1b       	sub	r24, r18
 21c:	93 0b       	sbc	r25, r19
 21e:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <state_count7+0x1>
 222:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <state_count7>
		state_count12 = count_flag12 - state_LED; 
 226:	20 91 5a 01 	lds	r18, 0x015A	; 0x80015a <state_LED>
 22a:	30 91 5b 01 	lds	r19, 0x015B	; 0x80015b <state_LED+0x1>
 22e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <count_flag12>
 232:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <count_flag12+0x1>
 236:	82 1b       	sub	r24, r18
 238:	93 0b       	sbc	r25, r19
 23a:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <state_count12+0x1>
 23e:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <state_count12>
		state_count14 = count_flag14 - state_LED;  
 242:	20 91 5a 01 	lds	r18, 0x015A	; 0x80015a <state_LED>
 246:	30 91 5b 01 	lds	r19, 0x015B	; 0x80015b <state_LED+0x1>
 24a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <count_flag14>
 24e:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <count_flag14+0x1>
 252:	82 1b       	sub	r24, r18
 254:	93 0b       	sbc	r25, r19
 256:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <__data_end+0x1>
 25a:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <__data_end>
	}
	TCNT0 = (256-250);
 25e:	86 e0       	ldi	r24, 0x06	; 6
 260:	82 bf       	out	0x32, r24	; 50
}
 262:	9f 91       	pop	r25
 264:	8f 91       	pop	r24
 266:	3f 91       	pop	r19
 268:	2f 91       	pop	r18
 26a:	0f 90       	pop	r0
 26c:	0f be       	out	0x3f, r0	; 63
 26e:	0f 90       	pop	r0
 270:	1f 90       	pop	r1
 272:	18 95       	reti

00000274 <main>:
	
}*/

int main(void)
{
	DDRD = 0xff;
 274:	8f ef       	ldi	r24, 0xFF	; 255
 276:	81 bb       	out	0x11, r24	; 17
	PORTD = 0x00;
 278:	12 ba       	out	0x12, r1	; 18
	DDRE = 0xff;
 27a:	82 b9       	out	0x02, r24	; 2
	PORTE = 0x00;
 27c:	13 b8       	out	0x03, r1	; 3
	
	char color_h = 0;
	char color_v = 0;
	TCCR0 |= (1 << CS02) | ( 0 << CS01) | ( 0 << CS00);
 27e:	83 b7       	in	r24, 0x33	; 51
 280:	84 60       	ori	r24, 0x04	; 4
 282:	83 bf       	out	0x33, r24	; 51
	
	
	TIMSK |= (1 << TOIE0);
 284:	87 b7       	in	r24, 0x37	; 55
 286:	81 60       	ori	r24, 0x01	; 1
 288:	87 bf       	out	0x37, r24	; 55
	//TIMSK |= (1 << TOIE1);
	
	sei();
 28a:	78 94       	sei
	///////////////////////////////
	
	
	mm = 12;
 28c:	8c e0       	ldi	r24, 0x0C	; 12
 28e:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <mm>
	ss = 0;
 292:	10 92 75 01 	sts	0x0175, r1	; 0x800175 <ss>
	ms = 0;
 296:	10 92 8a 01 	sts	0x018A, r1	; 0x80018a <ms>
	
	LCD_init();
 29a:	42 df       	rcall	.-380    	; 0x120 <LCD_init>
	LCD_write_string("Stop Watch");
 29c:	8a e0       	ldi	r24, 0x0A	; 10
 29e:	91 e0       	ldi	r25, 0x01	; 1
 2a0:	54 df       	rcall	.-344    	; 0x14a <LCD_write_string>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2a2:	2f e9       	ldi	r18, 0x9F	; 159
 2a4:	36 e8       	ldi	r19, 0x86	; 134
 2a6:	81 e0       	ldi	r24, 0x01	; 1
 2a8:	21 50       	subi	r18, 0x01	; 1
 2aa:	30 40       	sbci	r19, 0x00	; 0
 2ac:	80 40       	sbci	r24, 0x00	; 0
 2ae:	e1 f7       	brne	.-8      	; 0x2a8 <main+0x34>
 2b0:	00 c0       	rjmp	.+0      	; 0x2b2 <main+0x3e>
	_delay_ms(500);
	LCD_clear();
 2b2:	00 00       	nop
 2b4:	2c df       	rcall	.-424    	; 0x10e <LCD_clear>
	
    while (1) 
    {
		LCD_goto_XY(1,0);
		sprintf(buff, "%02d:%02d:%02d", mm,ss,ms); //화면에 출력되지 않음,  buff에 값 저장
 2b6:	05 e1       	ldi	r16, 0x15	; 21
 2b8:	11 e0       	ldi	r17, 0x01	; 1
 2ba:	c6 e7       	ldi	r28, 0x76	; 118
 2bc:	d1 e0       	ldi	r29, 0x01	; 1
			LCD_goto_XY(2,0);
			LCD_write_string("    R");
			LCD_goto_XY(2,7);
			LCD_write_string("    Y   ");
			LCD_goto_XY(2,6);
			sprintf(buff_horizon, "%d", state_count14);
 2be:	0f 2e       	mov	r0, r31
 2c0:	f3 e3       	ldi	r31, 0x33	; 51
 2c2:	cf 2e       	mov	r12, r31
 2c4:	f1 e0       	ldi	r31, 0x01	; 1
 2c6:	df 2e       	mov	r13, r31
 2c8:	f0 2d       	mov	r31, r0
	LCD_clear();
	
    while (1) 
    {
		LCD_goto_XY(1,0);
		sprintf(buff, "%02d:%02d:%02d", mm,ss,ms); //화면에 출력되지 않음,  buff에 값 저장
 2ca:	8c 2e       	mov	r8, r28
 2cc:	9d 2e       	mov	r9, r29
			LCD_write_string(buff_horizon);
		}
		else if(state_LED == 14)
		{
			state_LED = 0;
			state_count5 = 5;
 2ce:	0f 2e       	mov	r0, r31
 2d0:	f5 e0       	ldi	r31, 0x05	; 5
 2d2:	af 2e       	mov	r10, r31
 2d4:	b1 2c       	mov	r11, r1
 2d6:	f0 2d       	mov	r31, r0
			LCD_goto_XY(2,0);
			LCD_write_string("    R");
			LCD_goto_XY(2,7);
			LCD_write_string("    Y   ");
			LCD_goto_XY(2,6);
			sprintf(buff_horizon, "%d", state_count14);
 2d8:	0f 2e       	mov	r0, r31
 2da:	f1 e6       	ldi	r31, 0x61	; 97
 2dc:	ef 2e       	mov	r14, r31
 2de:	f1 e0       	ldi	r31, 0x01	; 1
 2e0:	ff 2e       	mov	r15, r31
 2e2:	f0 2d       	mov	r31, r0
 2e4:	5e 2c       	mov	r5, r14
 2e6:	6f 2c       	mov	r6, r15
		}
		else if((state_LED >= 12) && ( state_LED <14))
		{
			PORTD = 0x00;
			_delay_ms(1);
			PORTD = 0b00001000;
 2e8:	68 94       	set
 2ea:	77 24       	eor	r7, r7
 2ec:	73 f8       	bld	r7, 3
			PORTE = 0b00000100;
 2ee:	68 94       	set
 2f0:	33 24       	eor	r3, r3
 2f2:	32 f8       	bld	r3, 2
		else if((state_LED >= 7) && ( state_LED < 12))
		{
			PORTD = 0x00;
			_delay_ms(1);
			PORTD = 0b00001000;
			PORTE = 0b00000010;
 2f4:	68 94       	set
 2f6:	44 24       	eor	r4, r4
	row %= 2;
	
	uint8_t address = (0x40 * row) + col;
	uint8_t command = 0x80 + address;
	
	LCD_write_command(command);
 2f8:	41 f8       	bld	r4, 1
 2fa:	80 ec       	ldi	r24, 0xC0	; 192
 2fc:	fe de       	rcall	.-516    	; 0xfa <LCD_write_command>
	LCD_clear();
	
    while (1) 
    {
		LCD_goto_XY(1,0);
		sprintf(buff, "%02d:%02d:%02d", mm,ss,ms); //화면에 출력되지 않음,  buff에 값 저장
 2fe:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <ms>
 302:	1f 92       	push	r1
 304:	8f 93       	push	r24
 306:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <ss>
 30a:	1f 92       	push	r1
 30c:	8f 93       	push	r24
 30e:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <mm>
 312:	1f 92       	push	r1
 314:	8f 93       	push	r24
 316:	1f 93       	push	r17
 318:	0f 93       	push	r16
 31a:	df 93       	push	r29
 31c:	cf 93       	push	r28
		LCD_write_string(buff);
 31e:	20 d1       	rcall	.+576    	; 0x560 <sprintf>
 320:	88 2d       	mov	r24, r8
 322:	99 2d       	mov	r25, r9
 324:	12 df       	rcall	.-476    	; 0x14a <LCD_write_string>
 326:	89 ef       	ldi	r24, 0xF9	; 249
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	01 97       	sbiw	r24, 0x01	; 1
 32c:	f1 f7       	brne	.-4      	; 0x32a <main+0xb6>
 32e:	00 c0       	rjmp	.+0      	; 0x330 <main+0xbc>
 330:	00 00       	nop
		_delay_ms(1);
		LCD_goto_XY(2,6);
		LCD_write_string(buff_vertical);
		_delay_ms(1);
		*/
		if((state_LED >= 0) && (state_LED < 5))
 332:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <state_LED>
 336:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <state_LED+0x1>
 33a:	2d b7       	in	r18, 0x3d	; 61
 33c:	3e b7       	in	r19, 0x3e	; 62
 33e:	26 5f       	subi	r18, 0xF6	; 246
 340:	3f 4f       	sbci	r19, 0xFF	; 255
 342:	0f b6       	in	r0, 0x3f	; 63
 344:	f8 94       	cli
 346:	3e bf       	out	0x3e, r19	; 62
 348:	0f be       	out	0x3f, r0	; 63
 34a:	2d bf       	out	0x3d, r18	; 61
 34c:	99 23       	and	r25, r25
 34e:	84 f1       	brlt	.+96     	; 0x3b0 <main+0x13c>
 350:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <state_LED>
 354:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <state_LED+0x1>
 358:	05 97       	sbiw	r24, 0x05	; 5
 35a:	54 f5       	brge	.+84     	; 0x3b0 <main+0x13c>
		{
			PORTD = 0x00;
 35c:	12 ba       	out	0x12, r1	; 18
 35e:	89 ef       	ldi	r24, 0xF9	; 249
 360:	90 e0       	ldi	r25, 0x00	; 0
 362:	01 97       	sbiw	r24, 0x01	; 1
 364:	f1 f7       	brne	.-4      	; 0x362 <main+0xee>
 366:	00 c0       	rjmp	.+0      	; 0x368 <main+0xf4>
			_delay_ms(1);
			PORTD = 0b00000010;
			PORTE = 0b00001000;
 368:	00 00       	nop
	row %= 2;
	
	uint8_t address = (0x40 * row) + col;
	uint8_t command = 0x80 + address;
	
	LCD_write_command(command);
 36a:	42 ba       	out	0x12, r4	; 18
 36c:	73 b8       	out	0x03, r7	; 3
			PORTD = 0x00;
			_delay_ms(1);
			PORTD = 0b00000010;
			PORTE = 0b00001000;
			LCD_goto_XY(2,0);
			LCD_write_string("    G");
 36e:	80 e8       	ldi	r24, 0x80	; 128
 370:	c4 de       	rcall	.-632    	; 0xfa <LCD_write_command>
	row %= 2;
	
	uint8_t address = (0x40 * row) + col;
	uint8_t command = 0x80 + address;
	
	LCD_write_command(command);
 372:	84 e2       	ldi	r24, 0x24	; 36
 374:	91 e0       	ldi	r25, 0x01	; 1
 376:	e9 de       	rcall	.-558    	; 0x14a <LCD_write_string>
			PORTD = 0b00000010;
			PORTE = 0b00001000;
			LCD_goto_XY(2,0);
			LCD_write_string("    G");
			LCD_goto_XY(2,7);
			LCD_write_string("    R   ");
 378:	87 e8       	ldi	r24, 0x87	; 135
 37a:	bf de       	rcall	.-642    	; 0xfa <LCD_write_command>
 37c:	8a e2       	ldi	r24, 0x2A	; 42
 37e:	91 e0       	ldi	r25, 0x01	; 1
	row %= 2;
	
	uint8_t address = (0x40 * row) + col;
	uint8_t command = 0x80 + address;
	
	LCD_write_command(command);
 380:	e4 de       	rcall	.-568    	; 0x14a <LCD_write_string>
 382:	86 e8       	ldi	r24, 0x86	; 134
			LCD_goto_XY(2,0);
			LCD_write_string("    G");
			LCD_goto_XY(2,7);
			LCD_write_string("    R   ");
			LCD_goto_XY(2,6);
			sprintf(buff_horizon, "%d", state_count5);
 384:	ba de       	rcall	.-652    	; 0xfa <LCD_write_command>
 386:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <__data_start+0x1>
 38a:	8f 93       	push	r24
 38c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 390:	8f 93       	push	r24
 392:	df 92       	push	r13
 394:	cf 92       	push	r12
 396:	ff 92       	push	r15
 398:	ef 92       	push	r14
			LCD_write_string(buff_horizon);
 39a:	e2 d0       	rcall	.+452    	; 0x560 <sprintf>
 39c:	85 2d       	mov	r24, r5
 39e:	96 2d       	mov	r25, r6
 3a0:	d4 de       	rcall	.-600    	; 0x14a <LCD_write_string>
 3a2:	0f 90       	pop	r0
 3a4:	0f 90       	pop	r0
 3a6:	0f 90       	pop	r0
 3a8:	0f 90       	pop	r0
 3aa:	0f 90       	pop	r0
 3ac:	0f 90       	pop	r0
 3ae:	bc c0       	rjmp	.+376    	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
			
		}
		else if((state_LED >= 5) && (state_LED < 7))
 3b0:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <state_LED>
 3b4:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <state_LED+0x1>
 3b8:	05 97       	sbiw	r24, 0x05	; 5
 3ba:	84 f1       	brlt	.+96     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3bc:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <state_LED>
 3c0:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <state_LED+0x1>
 3c4:	07 97       	sbiw	r24, 0x07	; 7
 3c6:	54 f5       	brge	.+84     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3c8:	12 ba       	out	0x12, r1	; 18
 3ca:	89 ef       	ldi	r24, 0xF9	; 249
 3cc:	90 e0       	ldi	r25, 0x00	; 0
		{
			PORTD = 0x00;
			_delay_ms(1);
			PORTD = 0b00000100;
			PORTE = 0b00001000;
 3ce:	01 97       	sbiw	r24, 0x01	; 1
	row %= 2;
	
	uint8_t address = (0x40 * row) + col;
	uint8_t command = 0x80 + address;
	
	LCD_write_command(command);
 3d0:	f1 f7       	brne	.-4      	; 0x3ce <main+0x15a>
 3d2:	00 c0       	rjmp	.+0      	; 0x3d4 <main+0x160>
 3d4:	00 00       	nop
			PORTD = 0x00;
			_delay_ms(1);
			PORTD = 0b00000100;
			PORTE = 0b00001000;
			LCD_goto_XY(2,0);
			LCD_write_string("    Y");
 3d6:	32 ba       	out	0x12, r3	; 18
 3d8:	73 b8       	out	0x03, r7	; 3
 3da:	80 e8       	ldi	r24, 0x80	; 128
 3dc:	8e de       	rcall	.-740    	; 0xfa <LCD_write_command>
	row %= 2;
	
	uint8_t address = (0x40 * row) + col;
	uint8_t command = 0x80 + address;
	
	LCD_write_command(command);
 3de:	86 e3       	ldi	r24, 0x36	; 54
 3e0:	91 e0       	ldi	r25, 0x01	; 1
			PORTD = 0b00000100;
			PORTE = 0b00001000;
			LCD_goto_XY(2,0);
			LCD_write_string("    Y");
			LCD_goto_XY(2,7);
			LCD_write_string("    R   ");
 3e2:	b3 de       	rcall	.-666    	; 0x14a <LCD_write_string>
 3e4:	87 e8       	ldi	r24, 0x87	; 135
 3e6:	89 de       	rcall	.-750    	; 0xfa <LCD_write_command>
	row %= 2;
	
	uint8_t address = (0x40 * row) + col;
	uint8_t command = 0x80 + address;
	
	LCD_write_command(command);
 3e8:	8a e2       	ldi	r24, 0x2A	; 42
 3ea:	91 e0       	ldi	r25, 0x01	; 1
 3ec:	ae de       	rcall	.-676    	; 0x14a <LCD_write_string>
			LCD_goto_XY(2,0);
			LCD_write_string("    Y");
			LCD_goto_XY(2,7);
			LCD_write_string("    R   ");
			LCD_goto_XY(2,6);
			sprintf(buff_horizon, "%d", state_count7);
 3ee:	86 e8       	ldi	r24, 0x86	; 134
 3f0:	84 de       	rcall	.-760    	; 0xfa <LCD_write_command>
 3f2:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <state_count7+0x1>
 3f6:	8f 93       	push	r24
 3f8:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <state_count7>
 3fc:	8f 93       	push	r24
 3fe:	df 92       	push	r13
 400:	cf 92       	push	r12
 402:	ff 92       	push	r15
 404:	ef 92       	push	r14
			LCD_write_string(buff_horizon);
 406:	ac d0       	rcall	.+344    	; 0x560 <sprintf>
 408:	85 2d       	mov	r24, r5
 40a:	96 2d       	mov	r25, r6
 40c:	9e de       	rcall	.-708    	; 0x14a <LCD_write_string>
 40e:	0f 90       	pop	r0
 410:	0f 90       	pop	r0
 412:	0f 90       	pop	r0
 414:	0f 90       	pop	r0
 416:	0f 90       	pop	r0
 418:	0f 90       	pop	r0
 41a:	86 c0       	rjmp	.+268    	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
		}
		else if((state_LED >= 7) && ( state_LED < 12))
 41c:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <state_LED>
 420:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <state_LED+0x1>
 424:	07 97       	sbiw	r24, 0x07	; 7
 426:	84 f1       	brlt	.+96     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 428:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <state_LED>
 42c:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <state_LED+0x1>
 430:	0c 97       	sbiw	r24, 0x0c	; 12
 432:	54 f5       	brge	.+84     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 434:	12 ba       	out	0x12, r1	; 18
 436:	89 ef       	ldi	r24, 0xF9	; 249
 438:	90 e0       	ldi	r25, 0x00	; 0
		{
			PORTD = 0x00;
			_delay_ms(1);
			PORTD = 0b00001000;
 43a:	01 97       	sbiw	r24, 0x01	; 1
			PORTE = 0b00000010;
 43c:	f1 f7       	brne	.-4      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
	row %= 2;
	
	uint8_t address = (0x40 * row) + col;
	uint8_t command = 0x80 + address;
	
	LCD_write_command(command);
 43e:	00 c0       	rjmp	.+0      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 440:	00 00       	nop
			PORTD = 0x00;
			_delay_ms(1);
			PORTD = 0b00001000;
			PORTE = 0b00000010;
			LCD_goto_XY(2,0);
			LCD_write_string("    R");
 442:	72 ba       	out	0x12, r7	; 18
 444:	43 b8       	out	0x03, r4	; 3
 446:	80 e8       	ldi	r24, 0x80	; 128
	row %= 2;
	
	uint8_t address = (0x40 * row) + col;
	uint8_t command = 0x80 + address;
	
	LCD_write_command(command);
 448:	58 de       	rcall	.-848    	; 0xfa <LCD_write_command>
 44a:	8c e3       	ldi	r24, 0x3C	; 60
 44c:	91 e0       	ldi	r25, 0x01	; 1
			PORTD = 0b00001000;
			PORTE = 0b00000010;
			LCD_goto_XY(2,0);
			LCD_write_string("    R");
			LCD_goto_XY(2,7);
			LCD_write_string("    G   ");
 44e:	7d de       	rcall	.-774    	; 0x14a <LCD_write_string>
 450:	87 e8       	ldi	r24, 0x87	; 135
 452:	53 de       	rcall	.-858    	; 0xfa <LCD_write_command>
 454:	82 e4       	ldi	r24, 0x42	; 66
	row %= 2;
	
	uint8_t address = (0x40 * row) + col;
	uint8_t command = 0x80 + address;
	
	LCD_write_command(command);
 456:	91 e0       	ldi	r25, 0x01	; 1
 458:	78 de       	rcall	.-784    	; 0x14a <LCD_write_string>
 45a:	86 e8       	ldi	r24, 0x86	; 134
			LCD_goto_XY(2,0);
			LCD_write_string("    R");
			LCD_goto_XY(2,7);
			LCD_write_string("    G   ");
			LCD_goto_XY(2,6);
			sprintf(buff_horizon, "%d", state_count12);
 45c:	4e de       	rcall	.-868    	; 0xfa <LCD_write_command>
 45e:	80 91 57 01 	lds	r24, 0x0157	; 0x800157 <state_count12+0x1>
 462:	8f 93       	push	r24
 464:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <state_count12>
 468:	8f 93       	push	r24
 46a:	df 92       	push	r13
 46c:	cf 92       	push	r12
 46e:	ff 92       	push	r15
 470:	ef 92       	push	r14
 472:	76 d0       	rcall	.+236    	; 0x560 <sprintf>
			LCD_write_string(buff_horizon);
 474:	85 2d       	mov	r24, r5
 476:	96 2d       	mov	r25, r6
 478:	68 de       	rcall	.-816    	; 0x14a <LCD_write_string>
 47a:	0f 90       	pop	r0
 47c:	0f 90       	pop	r0
 47e:	0f 90       	pop	r0
 480:	0f 90       	pop	r0
 482:	0f 90       	pop	r0
 484:	0f 90       	pop	r0
		}
		else if((state_LED >= 12) && ( state_LED <14))
 486:	50 c0       	rjmp	.+160    	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 488:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <state_LED>
 48c:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <state_LED+0x1>
 490:	0c 97       	sbiw	r24, 0x0c	; 12
 492:	84 f1       	brlt	.+96     	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 494:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <state_LED>
 498:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <state_LED+0x1>
 49c:	0e 97       	sbiw	r24, 0x0e	; 14
 49e:	54 f5       	brge	.+84     	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4a0:	12 ba       	out	0x12, r1	; 18
 4a2:	89 ef       	ldi	r24, 0xF9	; 249
 4a4:	90 e0       	ldi	r25, 0x00	; 0
		{
			PORTD = 0x00;
			_delay_ms(1);
			PORTD = 0b00001000;
			PORTE = 0b00000100;
 4a6:	01 97       	sbiw	r24, 0x01	; 1
	row %= 2;
	
	uint8_t address = (0x40 * row) + col;
	uint8_t command = 0x80 + address;
	
	LCD_write_command(command);
 4a8:	f1 f7       	brne	.-4      	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 4aa:	00 c0       	rjmp	.+0      	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 4ac:	00 00       	nop
			PORTD = 0x00;
			_delay_ms(1);
			PORTD = 0b00001000;
			PORTE = 0b00000100;
			LCD_goto_XY(2,0);
			LCD_write_string("    R");
 4ae:	72 ba       	out	0x12, r7	; 18
 4b0:	33 b8       	out	0x03, r3	; 3
 4b2:	80 e8       	ldi	r24, 0x80	; 128
 4b4:	22 de       	rcall	.-956    	; 0xfa <LCD_write_command>
	row %= 2;
	
	uint8_t address = (0x40 * row) + col;
	uint8_t command = 0x80 + address;
	
	LCD_write_command(command);
 4b6:	8c e3       	ldi	r24, 0x3C	; 60
 4b8:	91 e0       	ldi	r25, 0x01	; 1
 4ba:	47 de       	rcall	.-882    	; 0x14a <LCD_write_string>
			PORTD = 0b00001000;
			PORTE = 0b00000100;
			LCD_goto_XY(2,0);
			LCD_write_string("    R");
			LCD_goto_XY(2,7);
			LCD_write_string("    Y   ");
 4bc:	87 e8       	ldi	r24, 0x87	; 135
 4be:	1d de       	rcall	.-966    	; 0xfa <LCD_write_command>
 4c0:	8b e4       	ldi	r24, 0x4B	; 75
 4c2:	91 e0       	ldi	r25, 0x01	; 1
	row %= 2;
	
	uint8_t address = (0x40 * row) + col;
	uint8_t command = 0x80 + address;
	
	LCD_write_command(command);
 4c4:	42 de       	rcall	.-892    	; 0x14a <LCD_write_string>
 4c6:	86 e8       	ldi	r24, 0x86	; 134
 4c8:	18 de       	rcall	.-976    	; 0xfa <LCD_write_command>
			LCD_goto_XY(2,0);
			LCD_write_string("    R");
			LCD_goto_XY(2,7);
			LCD_write_string("    Y   ");
			LCD_goto_XY(2,6);
			sprintf(buff_horizon, "%d", state_count14);
 4ca:	80 91 55 01 	lds	r24, 0x0155	; 0x800155 <__data_end+0x1>
 4ce:	8f 93       	push	r24
 4d0:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <__data_end>
 4d4:	8f 93       	push	r24
 4d6:	df 92       	push	r13
 4d8:	cf 92       	push	r12
 4da:	ff 92       	push	r15
 4dc:	ef 92       	push	r14
 4de:	40 d0       	rcall	.+128    	; 0x560 <sprintf>
 4e0:	85 2d       	mov	r24, r5
			LCD_write_string(buff_horizon);
 4e2:	96 2d       	mov	r25, r6
 4e4:	32 de       	rcall	.-924    	; 0x14a <LCD_write_string>
 4e6:	0f 90       	pop	r0
 4e8:	0f 90       	pop	r0
 4ea:	0f 90       	pop	r0
 4ec:	0f 90       	pop	r0
 4ee:	0f 90       	pop	r0
 4f0:	0f 90       	pop	r0
 4f2:	1a c0       	rjmp	.+52     	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 4f4:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <state_LED>
		}
		else if(state_LED == 14)
 4f8:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <state_LED+0x1>
 4fc:	0e 97       	sbiw	r24, 0x0e	; 14
 4fe:	a1 f4       	brne	.+40     	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 500:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <state_LED+0x1>
		{
			state_LED = 0;
 504:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <state_LED>
 508:	b0 92 01 01 	sts	0x0101, r11	; 0x800101 <__data_start+0x1>
			state_count5 = 5;
 50c:	a0 92 00 01 	sts	0x0100, r10	; 0x800100 <__data_start>
 510:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <state_count7+0x1>
			state_count7 = 0;
 514:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <state_count7>
 518:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <state_count12+0x1>
			state_count12 = 0;
 51c:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <state_count12>
 520:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <__data_end+0x1>
			state_count14 = 0;
 524:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <__data_end>
 528:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <ms>
		}
		
		
		if (ms>= 60)
 52c:	8c 33       	cpi	r24, 0x3C	; 60
 52e:	08 f4       	brcc	.+2      	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 530:	e4 ce       	rjmp	.-568    	; 0x2fa <main+0x86>
 532:	10 92 8a 01 	sts	0x018A, r1	; 0x80018a <ms>
		{
			ms = 0;
 536:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <ss>
			ss++;
 53a:	8f 5f       	subi	r24, 0xFF	; 255
 53c:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <ss>
 540:	8c 33       	cpi	r24, 0x3C	; 60
 542:	08 f4       	brcc	.+2      	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
			if (ss>=60)
 544:	d7 ce       	rjmp	.-594    	; 0x2f4 <main+0x80>
 546:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <mm>
			{
				mm++;
 54a:	8f 5f       	subi	r24, 0xFF	; 255
 54c:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <mm>
 550:	10 92 75 01 	sts	0x0175, r1	; 0x800175 <ss>
				ss =0;
 554:	88 31       	cpi	r24, 0x18	; 24
 556:	08 f4       	brcc	.+2      	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
				if(mm >= 24)
 558:	c7 ce       	rjmp	.-626    	; 0x2e8 <main+0x74>
 55a:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <mm>
				{
					mm = 0;
 55e:	bc ce       	rjmp	.-648    	; 0x2d8 <main+0x64>

00000560 <sprintf>:
 560:	0f 93       	push	r16
 562:	1f 93       	push	r17
 564:	cf 93       	push	r28
 566:	df 93       	push	r29
 568:	cd b7       	in	r28, 0x3d	; 61
 56a:	de b7       	in	r29, 0x3e	; 62
 56c:	2e 97       	sbiw	r28, 0x0e	; 14
 56e:	0f b6       	in	r0, 0x3f	; 63
 570:	f8 94       	cli
 572:	de bf       	out	0x3e, r29	; 62
 574:	0f be       	out	0x3f, r0	; 63
 576:	cd bf       	out	0x3d, r28	; 61
 578:	0d 89       	ldd	r16, Y+21	; 0x15
 57a:	1e 89       	ldd	r17, Y+22	; 0x16
 57c:	86 e0       	ldi	r24, 0x06	; 6
 57e:	8c 83       	std	Y+4, r24	; 0x04
 580:	1a 83       	std	Y+2, r17	; 0x02
 582:	09 83       	std	Y+1, r16	; 0x01
 584:	8f ef       	ldi	r24, 0xFF	; 255
 586:	9f e7       	ldi	r25, 0x7F	; 127
 588:	9e 83       	std	Y+6, r25	; 0x06
 58a:	8d 83       	std	Y+5, r24	; 0x05
 58c:	ae 01       	movw	r20, r28
 58e:	47 5e       	subi	r20, 0xE7	; 231
 590:	5f 4f       	sbci	r21, 0xFF	; 255
 592:	6f 89       	ldd	r22, Y+23	; 0x17
 594:	78 8d       	ldd	r23, Y+24	; 0x18
 596:	ce 01       	movw	r24, r28
 598:	01 96       	adiw	r24, 0x01	; 1
 59a:	10 d0       	rcall	.+32     	; 0x5bc <vfprintf>
 59c:	ef 81       	ldd	r30, Y+7	; 0x07
 59e:	f8 85       	ldd	r31, Y+8	; 0x08
 5a0:	e0 0f       	add	r30, r16
 5a2:	f1 1f       	adc	r31, r17
 5a4:	10 82       	st	Z, r1
 5a6:	2e 96       	adiw	r28, 0x0e	; 14
 5a8:	0f b6       	in	r0, 0x3f	; 63
 5aa:	f8 94       	cli
 5ac:	de bf       	out	0x3e, r29	; 62
 5ae:	0f be       	out	0x3f, r0	; 63
 5b0:	cd bf       	out	0x3d, r28	; 61
 5b2:	df 91       	pop	r29
 5b4:	cf 91       	pop	r28
 5b6:	1f 91       	pop	r17
 5b8:	0f 91       	pop	r16
 5ba:	08 95       	ret

000005bc <vfprintf>:
 5bc:	2f 92       	push	r2
 5be:	3f 92       	push	r3
 5c0:	4f 92       	push	r4
 5c2:	5f 92       	push	r5
 5c4:	6f 92       	push	r6
 5c6:	7f 92       	push	r7
 5c8:	8f 92       	push	r8
 5ca:	9f 92       	push	r9
 5cc:	af 92       	push	r10
 5ce:	bf 92       	push	r11
 5d0:	cf 92       	push	r12
 5d2:	df 92       	push	r13
 5d4:	ef 92       	push	r14
 5d6:	ff 92       	push	r15
 5d8:	0f 93       	push	r16
 5da:	1f 93       	push	r17
 5dc:	cf 93       	push	r28
 5de:	df 93       	push	r29
 5e0:	cd b7       	in	r28, 0x3d	; 61
 5e2:	de b7       	in	r29, 0x3e	; 62
 5e4:	2b 97       	sbiw	r28, 0x0b	; 11
 5e6:	0f b6       	in	r0, 0x3f	; 63
 5e8:	f8 94       	cli
 5ea:	de bf       	out	0x3e, r29	; 62
 5ec:	0f be       	out	0x3f, r0	; 63
 5ee:	cd bf       	out	0x3d, r28	; 61
 5f0:	6c 01       	movw	r12, r24
 5f2:	7b 01       	movw	r14, r22
 5f4:	8a 01       	movw	r16, r20
 5f6:	fc 01       	movw	r30, r24
 5f8:	17 82       	std	Z+7, r1	; 0x07
 5fa:	16 82       	std	Z+6, r1	; 0x06
 5fc:	83 81       	ldd	r24, Z+3	; 0x03
 5fe:	81 ff       	sbrs	r24, 1
 600:	bf c1       	rjmp	.+894    	; 0x980 <vfprintf+0x3c4>
 602:	ce 01       	movw	r24, r28
 604:	01 96       	adiw	r24, 0x01	; 1
 606:	3c 01       	movw	r6, r24
 608:	f6 01       	movw	r30, r12
 60a:	93 81       	ldd	r25, Z+3	; 0x03
 60c:	f7 01       	movw	r30, r14
 60e:	93 fd       	sbrc	r25, 3
 610:	85 91       	lpm	r24, Z+
 612:	93 ff       	sbrs	r25, 3
 614:	81 91       	ld	r24, Z+
 616:	7f 01       	movw	r14, r30
 618:	88 23       	and	r24, r24
 61a:	09 f4       	brne	.+2      	; 0x61e <vfprintf+0x62>
 61c:	ad c1       	rjmp	.+858    	; 0x978 <vfprintf+0x3bc>
 61e:	85 32       	cpi	r24, 0x25	; 37
 620:	39 f4       	brne	.+14     	; 0x630 <vfprintf+0x74>
 622:	93 fd       	sbrc	r25, 3
 624:	85 91       	lpm	r24, Z+
 626:	93 ff       	sbrs	r25, 3
 628:	81 91       	ld	r24, Z+
 62a:	7f 01       	movw	r14, r30
 62c:	85 32       	cpi	r24, 0x25	; 37
 62e:	21 f4       	brne	.+8      	; 0x638 <vfprintf+0x7c>
 630:	b6 01       	movw	r22, r12
 632:	90 e0       	ldi	r25, 0x00	; 0
 634:	d6 d1       	rcall	.+940    	; 0x9e2 <fputc>
 636:	e8 cf       	rjmp	.-48     	; 0x608 <vfprintf+0x4c>
 638:	91 2c       	mov	r9, r1
 63a:	21 2c       	mov	r2, r1
 63c:	31 2c       	mov	r3, r1
 63e:	ff e1       	ldi	r31, 0x1F	; 31
 640:	f3 15       	cp	r31, r3
 642:	d8 f0       	brcs	.+54     	; 0x67a <vfprintf+0xbe>
 644:	8b 32       	cpi	r24, 0x2B	; 43
 646:	79 f0       	breq	.+30     	; 0x666 <vfprintf+0xaa>
 648:	38 f4       	brcc	.+14     	; 0x658 <vfprintf+0x9c>
 64a:	80 32       	cpi	r24, 0x20	; 32
 64c:	79 f0       	breq	.+30     	; 0x66c <vfprintf+0xb0>
 64e:	83 32       	cpi	r24, 0x23	; 35
 650:	a1 f4       	brne	.+40     	; 0x67a <vfprintf+0xbe>
 652:	23 2d       	mov	r18, r3
 654:	20 61       	ori	r18, 0x10	; 16
 656:	1d c0       	rjmp	.+58     	; 0x692 <vfprintf+0xd6>
 658:	8d 32       	cpi	r24, 0x2D	; 45
 65a:	61 f0       	breq	.+24     	; 0x674 <vfprintf+0xb8>
 65c:	80 33       	cpi	r24, 0x30	; 48
 65e:	69 f4       	brne	.+26     	; 0x67a <vfprintf+0xbe>
 660:	23 2d       	mov	r18, r3
 662:	21 60       	ori	r18, 0x01	; 1
 664:	16 c0       	rjmp	.+44     	; 0x692 <vfprintf+0xd6>
 666:	83 2d       	mov	r24, r3
 668:	82 60       	ori	r24, 0x02	; 2
 66a:	38 2e       	mov	r3, r24
 66c:	e3 2d       	mov	r30, r3
 66e:	e4 60       	ori	r30, 0x04	; 4
 670:	3e 2e       	mov	r3, r30
 672:	2a c0       	rjmp	.+84     	; 0x6c8 <vfprintf+0x10c>
 674:	f3 2d       	mov	r31, r3
 676:	f8 60       	ori	r31, 0x08	; 8
 678:	1d c0       	rjmp	.+58     	; 0x6b4 <vfprintf+0xf8>
 67a:	37 fc       	sbrc	r3, 7
 67c:	2d c0       	rjmp	.+90     	; 0x6d8 <vfprintf+0x11c>
 67e:	20 ed       	ldi	r18, 0xD0	; 208
 680:	28 0f       	add	r18, r24
 682:	2a 30       	cpi	r18, 0x0A	; 10
 684:	40 f0       	brcs	.+16     	; 0x696 <vfprintf+0xda>
 686:	8e 32       	cpi	r24, 0x2E	; 46
 688:	b9 f4       	brne	.+46     	; 0x6b8 <vfprintf+0xfc>
 68a:	36 fc       	sbrc	r3, 6
 68c:	75 c1       	rjmp	.+746    	; 0x978 <vfprintf+0x3bc>
 68e:	23 2d       	mov	r18, r3
 690:	20 64       	ori	r18, 0x40	; 64
 692:	32 2e       	mov	r3, r18
 694:	19 c0       	rjmp	.+50     	; 0x6c8 <vfprintf+0x10c>
 696:	36 fe       	sbrs	r3, 6
 698:	06 c0       	rjmp	.+12     	; 0x6a6 <vfprintf+0xea>
 69a:	8a e0       	ldi	r24, 0x0A	; 10
 69c:	98 9e       	mul	r9, r24
 69e:	20 0d       	add	r18, r0
 6a0:	11 24       	eor	r1, r1
 6a2:	92 2e       	mov	r9, r18
 6a4:	11 c0       	rjmp	.+34     	; 0x6c8 <vfprintf+0x10c>
 6a6:	ea e0       	ldi	r30, 0x0A	; 10
 6a8:	2e 9e       	mul	r2, r30
 6aa:	20 0d       	add	r18, r0
 6ac:	11 24       	eor	r1, r1
 6ae:	22 2e       	mov	r2, r18
 6b0:	f3 2d       	mov	r31, r3
 6b2:	f0 62       	ori	r31, 0x20	; 32
 6b4:	3f 2e       	mov	r3, r31
 6b6:	08 c0       	rjmp	.+16     	; 0x6c8 <vfprintf+0x10c>
 6b8:	8c 36       	cpi	r24, 0x6C	; 108
 6ba:	21 f4       	brne	.+8      	; 0x6c4 <vfprintf+0x108>
 6bc:	83 2d       	mov	r24, r3
 6be:	80 68       	ori	r24, 0x80	; 128
 6c0:	38 2e       	mov	r3, r24
 6c2:	02 c0       	rjmp	.+4      	; 0x6c8 <vfprintf+0x10c>
 6c4:	88 36       	cpi	r24, 0x68	; 104
 6c6:	41 f4       	brne	.+16     	; 0x6d8 <vfprintf+0x11c>
 6c8:	f7 01       	movw	r30, r14
 6ca:	93 fd       	sbrc	r25, 3
 6cc:	85 91       	lpm	r24, Z+
 6ce:	93 ff       	sbrs	r25, 3
 6d0:	81 91       	ld	r24, Z+
 6d2:	7f 01       	movw	r14, r30
 6d4:	81 11       	cpse	r24, r1
 6d6:	b3 cf       	rjmp	.-154    	; 0x63e <vfprintf+0x82>
 6d8:	98 2f       	mov	r25, r24
 6da:	9f 7d       	andi	r25, 0xDF	; 223
 6dc:	95 54       	subi	r25, 0x45	; 69
 6de:	93 30       	cpi	r25, 0x03	; 3
 6e0:	28 f4       	brcc	.+10     	; 0x6ec <vfprintf+0x130>
 6e2:	0c 5f       	subi	r16, 0xFC	; 252
 6e4:	1f 4f       	sbci	r17, 0xFF	; 255
 6e6:	9f e3       	ldi	r25, 0x3F	; 63
 6e8:	99 83       	std	Y+1, r25	; 0x01
 6ea:	0d c0       	rjmp	.+26     	; 0x706 <vfprintf+0x14a>
 6ec:	83 36       	cpi	r24, 0x63	; 99
 6ee:	31 f0       	breq	.+12     	; 0x6fc <vfprintf+0x140>
 6f0:	83 37       	cpi	r24, 0x73	; 115
 6f2:	71 f0       	breq	.+28     	; 0x710 <vfprintf+0x154>
 6f4:	83 35       	cpi	r24, 0x53	; 83
 6f6:	09 f0       	breq	.+2      	; 0x6fa <vfprintf+0x13e>
 6f8:	55 c0       	rjmp	.+170    	; 0x7a4 <vfprintf+0x1e8>
 6fa:	20 c0       	rjmp	.+64     	; 0x73c <vfprintf+0x180>
 6fc:	f8 01       	movw	r30, r16
 6fe:	80 81       	ld	r24, Z
 700:	89 83       	std	Y+1, r24	; 0x01
 702:	0e 5f       	subi	r16, 0xFE	; 254
 704:	1f 4f       	sbci	r17, 0xFF	; 255
 706:	88 24       	eor	r8, r8
 708:	83 94       	inc	r8
 70a:	91 2c       	mov	r9, r1
 70c:	53 01       	movw	r10, r6
 70e:	12 c0       	rjmp	.+36     	; 0x734 <vfprintf+0x178>
 710:	28 01       	movw	r4, r16
 712:	f2 e0       	ldi	r31, 0x02	; 2
 714:	4f 0e       	add	r4, r31
 716:	51 1c       	adc	r5, r1
 718:	f8 01       	movw	r30, r16
 71a:	a0 80       	ld	r10, Z
 71c:	b1 80       	ldd	r11, Z+1	; 0x01
 71e:	36 fe       	sbrs	r3, 6
 720:	03 c0       	rjmp	.+6      	; 0x728 <vfprintf+0x16c>
 722:	69 2d       	mov	r22, r9
 724:	70 e0       	ldi	r23, 0x00	; 0
 726:	02 c0       	rjmp	.+4      	; 0x72c <vfprintf+0x170>
 728:	6f ef       	ldi	r22, 0xFF	; 255
 72a:	7f ef       	ldi	r23, 0xFF	; 255
 72c:	c5 01       	movw	r24, r10
 72e:	4e d1       	rcall	.+668    	; 0x9cc <strnlen>
 730:	4c 01       	movw	r8, r24
 732:	82 01       	movw	r16, r4
 734:	f3 2d       	mov	r31, r3
 736:	ff 77       	andi	r31, 0x7F	; 127
 738:	3f 2e       	mov	r3, r31
 73a:	15 c0       	rjmp	.+42     	; 0x766 <vfprintf+0x1aa>
 73c:	28 01       	movw	r4, r16
 73e:	22 e0       	ldi	r18, 0x02	; 2
 740:	42 0e       	add	r4, r18
 742:	51 1c       	adc	r5, r1
 744:	f8 01       	movw	r30, r16
 746:	a0 80       	ld	r10, Z
 748:	b1 80       	ldd	r11, Z+1	; 0x01
 74a:	36 fe       	sbrs	r3, 6
 74c:	03 c0       	rjmp	.+6      	; 0x754 <vfprintf+0x198>
 74e:	69 2d       	mov	r22, r9
 750:	70 e0       	ldi	r23, 0x00	; 0
 752:	02 c0       	rjmp	.+4      	; 0x758 <vfprintf+0x19c>
 754:	6f ef       	ldi	r22, 0xFF	; 255
 756:	7f ef       	ldi	r23, 0xFF	; 255
 758:	c5 01       	movw	r24, r10
 75a:	2d d1       	rcall	.+602    	; 0x9b6 <strnlen_P>
 75c:	4c 01       	movw	r8, r24
 75e:	f3 2d       	mov	r31, r3
 760:	f0 68       	ori	r31, 0x80	; 128
 762:	3f 2e       	mov	r3, r31
 764:	82 01       	movw	r16, r4
 766:	33 fc       	sbrc	r3, 3
 768:	19 c0       	rjmp	.+50     	; 0x79c <vfprintf+0x1e0>
 76a:	82 2d       	mov	r24, r2
 76c:	90 e0       	ldi	r25, 0x00	; 0
 76e:	88 16       	cp	r8, r24
 770:	99 06       	cpc	r9, r25
 772:	a0 f4       	brcc	.+40     	; 0x79c <vfprintf+0x1e0>
 774:	b6 01       	movw	r22, r12
 776:	80 e2       	ldi	r24, 0x20	; 32
 778:	90 e0       	ldi	r25, 0x00	; 0
 77a:	33 d1       	rcall	.+614    	; 0x9e2 <fputc>
 77c:	2a 94       	dec	r2
 77e:	f5 cf       	rjmp	.-22     	; 0x76a <vfprintf+0x1ae>
 780:	f5 01       	movw	r30, r10
 782:	37 fc       	sbrc	r3, 7
 784:	85 91       	lpm	r24, Z+
 786:	37 fe       	sbrs	r3, 7
 788:	81 91       	ld	r24, Z+
 78a:	5f 01       	movw	r10, r30
 78c:	b6 01       	movw	r22, r12
 78e:	90 e0       	ldi	r25, 0x00	; 0
 790:	28 d1       	rcall	.+592    	; 0x9e2 <fputc>
 792:	21 10       	cpse	r2, r1
 794:	2a 94       	dec	r2
 796:	21 e0       	ldi	r18, 0x01	; 1
 798:	82 1a       	sub	r8, r18
 79a:	91 08       	sbc	r9, r1
 79c:	81 14       	cp	r8, r1
 79e:	91 04       	cpc	r9, r1
 7a0:	79 f7       	brne	.-34     	; 0x780 <vfprintf+0x1c4>
 7a2:	e1 c0       	rjmp	.+450    	; 0x966 <vfprintf+0x3aa>
 7a4:	84 36       	cpi	r24, 0x64	; 100
 7a6:	11 f0       	breq	.+4      	; 0x7ac <vfprintf+0x1f0>
 7a8:	89 36       	cpi	r24, 0x69	; 105
 7aa:	39 f5       	brne	.+78     	; 0x7fa <vfprintf+0x23e>
 7ac:	f8 01       	movw	r30, r16
 7ae:	37 fe       	sbrs	r3, 7
 7b0:	07 c0       	rjmp	.+14     	; 0x7c0 <vfprintf+0x204>
 7b2:	60 81       	ld	r22, Z
 7b4:	71 81       	ldd	r23, Z+1	; 0x01
 7b6:	82 81       	ldd	r24, Z+2	; 0x02
 7b8:	93 81       	ldd	r25, Z+3	; 0x03
 7ba:	0c 5f       	subi	r16, 0xFC	; 252
 7bc:	1f 4f       	sbci	r17, 0xFF	; 255
 7be:	08 c0       	rjmp	.+16     	; 0x7d0 <vfprintf+0x214>
 7c0:	60 81       	ld	r22, Z
 7c2:	71 81       	ldd	r23, Z+1	; 0x01
 7c4:	07 2e       	mov	r0, r23
 7c6:	00 0c       	add	r0, r0
 7c8:	88 0b       	sbc	r24, r24
 7ca:	99 0b       	sbc	r25, r25
 7cc:	0e 5f       	subi	r16, 0xFE	; 254
 7ce:	1f 4f       	sbci	r17, 0xFF	; 255
 7d0:	f3 2d       	mov	r31, r3
 7d2:	ff 76       	andi	r31, 0x6F	; 111
 7d4:	3f 2e       	mov	r3, r31
 7d6:	97 ff       	sbrs	r25, 7
 7d8:	09 c0       	rjmp	.+18     	; 0x7ec <vfprintf+0x230>
 7da:	90 95       	com	r25
 7dc:	80 95       	com	r24
 7de:	70 95       	com	r23
 7e0:	61 95       	neg	r22
 7e2:	7f 4f       	sbci	r23, 0xFF	; 255
 7e4:	8f 4f       	sbci	r24, 0xFF	; 255
 7e6:	9f 4f       	sbci	r25, 0xFF	; 255
 7e8:	f0 68       	ori	r31, 0x80	; 128
 7ea:	3f 2e       	mov	r3, r31
 7ec:	2a e0       	ldi	r18, 0x0A	; 10
 7ee:	30 e0       	ldi	r19, 0x00	; 0
 7f0:	a3 01       	movw	r20, r6
 7f2:	33 d1       	rcall	.+614    	; 0xa5a <__ultoa_invert>
 7f4:	88 2e       	mov	r8, r24
 7f6:	86 18       	sub	r8, r6
 7f8:	44 c0       	rjmp	.+136    	; 0x882 <vfprintf+0x2c6>
 7fa:	85 37       	cpi	r24, 0x75	; 117
 7fc:	31 f4       	brne	.+12     	; 0x80a <vfprintf+0x24e>
 7fe:	23 2d       	mov	r18, r3
 800:	2f 7e       	andi	r18, 0xEF	; 239
 802:	b2 2e       	mov	r11, r18
 804:	2a e0       	ldi	r18, 0x0A	; 10
 806:	30 e0       	ldi	r19, 0x00	; 0
 808:	25 c0       	rjmp	.+74     	; 0x854 <vfprintf+0x298>
 80a:	93 2d       	mov	r25, r3
 80c:	99 7f       	andi	r25, 0xF9	; 249
 80e:	b9 2e       	mov	r11, r25
 810:	8f 36       	cpi	r24, 0x6F	; 111
 812:	c1 f0       	breq	.+48     	; 0x844 <vfprintf+0x288>
 814:	18 f4       	brcc	.+6      	; 0x81c <vfprintf+0x260>
 816:	88 35       	cpi	r24, 0x58	; 88
 818:	79 f0       	breq	.+30     	; 0x838 <vfprintf+0x27c>
 81a:	ae c0       	rjmp	.+348    	; 0x978 <vfprintf+0x3bc>
 81c:	80 37       	cpi	r24, 0x70	; 112
 81e:	19 f0       	breq	.+6      	; 0x826 <vfprintf+0x26a>
 820:	88 37       	cpi	r24, 0x78	; 120
 822:	21 f0       	breq	.+8      	; 0x82c <vfprintf+0x270>
 824:	a9 c0       	rjmp	.+338    	; 0x978 <vfprintf+0x3bc>
 826:	e9 2f       	mov	r30, r25
 828:	e0 61       	ori	r30, 0x10	; 16
 82a:	be 2e       	mov	r11, r30
 82c:	b4 fe       	sbrs	r11, 4
 82e:	0d c0       	rjmp	.+26     	; 0x84a <vfprintf+0x28e>
 830:	fb 2d       	mov	r31, r11
 832:	f4 60       	ori	r31, 0x04	; 4
 834:	bf 2e       	mov	r11, r31
 836:	09 c0       	rjmp	.+18     	; 0x84a <vfprintf+0x28e>
 838:	34 fe       	sbrs	r3, 4
 83a:	0a c0       	rjmp	.+20     	; 0x850 <vfprintf+0x294>
 83c:	29 2f       	mov	r18, r25
 83e:	26 60       	ori	r18, 0x06	; 6
 840:	b2 2e       	mov	r11, r18
 842:	06 c0       	rjmp	.+12     	; 0x850 <vfprintf+0x294>
 844:	28 e0       	ldi	r18, 0x08	; 8
 846:	30 e0       	ldi	r19, 0x00	; 0
 848:	05 c0       	rjmp	.+10     	; 0x854 <vfprintf+0x298>
 84a:	20 e1       	ldi	r18, 0x10	; 16
 84c:	30 e0       	ldi	r19, 0x00	; 0
 84e:	02 c0       	rjmp	.+4      	; 0x854 <vfprintf+0x298>
 850:	20 e1       	ldi	r18, 0x10	; 16
 852:	32 e0       	ldi	r19, 0x02	; 2
 854:	f8 01       	movw	r30, r16
 856:	b7 fe       	sbrs	r11, 7
 858:	07 c0       	rjmp	.+14     	; 0x868 <vfprintf+0x2ac>
 85a:	60 81       	ld	r22, Z
 85c:	71 81       	ldd	r23, Z+1	; 0x01
 85e:	82 81       	ldd	r24, Z+2	; 0x02
 860:	93 81       	ldd	r25, Z+3	; 0x03
 862:	0c 5f       	subi	r16, 0xFC	; 252
 864:	1f 4f       	sbci	r17, 0xFF	; 255
 866:	06 c0       	rjmp	.+12     	; 0x874 <vfprintf+0x2b8>
 868:	60 81       	ld	r22, Z
 86a:	71 81       	ldd	r23, Z+1	; 0x01
 86c:	80 e0       	ldi	r24, 0x00	; 0
 86e:	90 e0       	ldi	r25, 0x00	; 0
 870:	0e 5f       	subi	r16, 0xFE	; 254
 872:	1f 4f       	sbci	r17, 0xFF	; 255
 874:	a3 01       	movw	r20, r6
 876:	f1 d0       	rcall	.+482    	; 0xa5a <__ultoa_invert>
 878:	88 2e       	mov	r8, r24
 87a:	86 18       	sub	r8, r6
 87c:	fb 2d       	mov	r31, r11
 87e:	ff 77       	andi	r31, 0x7F	; 127
 880:	3f 2e       	mov	r3, r31
 882:	36 fe       	sbrs	r3, 6
 884:	0d c0       	rjmp	.+26     	; 0x8a0 <vfprintf+0x2e4>
 886:	23 2d       	mov	r18, r3
 888:	2e 7f       	andi	r18, 0xFE	; 254
 88a:	a2 2e       	mov	r10, r18
 88c:	89 14       	cp	r8, r9
 88e:	58 f4       	brcc	.+22     	; 0x8a6 <vfprintf+0x2ea>
 890:	34 fe       	sbrs	r3, 4
 892:	0b c0       	rjmp	.+22     	; 0x8aa <vfprintf+0x2ee>
 894:	32 fc       	sbrc	r3, 2
 896:	09 c0       	rjmp	.+18     	; 0x8aa <vfprintf+0x2ee>
 898:	83 2d       	mov	r24, r3
 89a:	8e 7e       	andi	r24, 0xEE	; 238
 89c:	a8 2e       	mov	r10, r24
 89e:	05 c0       	rjmp	.+10     	; 0x8aa <vfprintf+0x2ee>
 8a0:	b8 2c       	mov	r11, r8
 8a2:	a3 2c       	mov	r10, r3
 8a4:	03 c0       	rjmp	.+6      	; 0x8ac <vfprintf+0x2f0>
 8a6:	b8 2c       	mov	r11, r8
 8a8:	01 c0       	rjmp	.+2      	; 0x8ac <vfprintf+0x2f0>
 8aa:	b9 2c       	mov	r11, r9
 8ac:	a4 fe       	sbrs	r10, 4
 8ae:	0f c0       	rjmp	.+30     	; 0x8ce <vfprintf+0x312>
 8b0:	fe 01       	movw	r30, r28
 8b2:	e8 0d       	add	r30, r8
 8b4:	f1 1d       	adc	r31, r1
 8b6:	80 81       	ld	r24, Z
 8b8:	80 33       	cpi	r24, 0x30	; 48
 8ba:	21 f4       	brne	.+8      	; 0x8c4 <vfprintf+0x308>
 8bc:	9a 2d       	mov	r25, r10
 8be:	99 7e       	andi	r25, 0xE9	; 233
 8c0:	a9 2e       	mov	r10, r25
 8c2:	09 c0       	rjmp	.+18     	; 0x8d6 <vfprintf+0x31a>
 8c4:	a2 fe       	sbrs	r10, 2
 8c6:	06 c0       	rjmp	.+12     	; 0x8d4 <vfprintf+0x318>
 8c8:	b3 94       	inc	r11
 8ca:	b3 94       	inc	r11
 8cc:	04 c0       	rjmp	.+8      	; 0x8d6 <vfprintf+0x31a>
 8ce:	8a 2d       	mov	r24, r10
 8d0:	86 78       	andi	r24, 0x86	; 134
 8d2:	09 f0       	breq	.+2      	; 0x8d6 <vfprintf+0x31a>
 8d4:	b3 94       	inc	r11
 8d6:	a3 fc       	sbrc	r10, 3
 8d8:	10 c0       	rjmp	.+32     	; 0x8fa <vfprintf+0x33e>
 8da:	a0 fe       	sbrs	r10, 0
 8dc:	06 c0       	rjmp	.+12     	; 0x8ea <vfprintf+0x32e>
 8de:	b2 14       	cp	r11, r2
 8e0:	80 f4       	brcc	.+32     	; 0x902 <vfprintf+0x346>
 8e2:	28 0c       	add	r2, r8
 8e4:	92 2c       	mov	r9, r2
 8e6:	9b 18       	sub	r9, r11
 8e8:	0d c0       	rjmp	.+26     	; 0x904 <vfprintf+0x348>
 8ea:	b2 14       	cp	r11, r2
 8ec:	58 f4       	brcc	.+22     	; 0x904 <vfprintf+0x348>
 8ee:	b6 01       	movw	r22, r12
 8f0:	80 e2       	ldi	r24, 0x20	; 32
 8f2:	90 e0       	ldi	r25, 0x00	; 0
 8f4:	76 d0       	rcall	.+236    	; 0x9e2 <fputc>
 8f6:	b3 94       	inc	r11
 8f8:	f8 cf       	rjmp	.-16     	; 0x8ea <vfprintf+0x32e>
 8fa:	b2 14       	cp	r11, r2
 8fc:	18 f4       	brcc	.+6      	; 0x904 <vfprintf+0x348>
 8fe:	2b 18       	sub	r2, r11
 900:	02 c0       	rjmp	.+4      	; 0x906 <vfprintf+0x34a>
 902:	98 2c       	mov	r9, r8
 904:	21 2c       	mov	r2, r1
 906:	a4 fe       	sbrs	r10, 4
 908:	0f c0       	rjmp	.+30     	; 0x928 <vfprintf+0x36c>
 90a:	b6 01       	movw	r22, r12
 90c:	80 e3       	ldi	r24, 0x30	; 48
 90e:	90 e0       	ldi	r25, 0x00	; 0
 910:	68 d0       	rcall	.+208    	; 0x9e2 <fputc>
 912:	a2 fe       	sbrs	r10, 2
 914:	16 c0       	rjmp	.+44     	; 0x942 <vfprintf+0x386>
 916:	a1 fc       	sbrc	r10, 1
 918:	03 c0       	rjmp	.+6      	; 0x920 <vfprintf+0x364>
 91a:	88 e7       	ldi	r24, 0x78	; 120
 91c:	90 e0       	ldi	r25, 0x00	; 0
 91e:	02 c0       	rjmp	.+4      	; 0x924 <vfprintf+0x368>
 920:	88 e5       	ldi	r24, 0x58	; 88
 922:	90 e0       	ldi	r25, 0x00	; 0
 924:	b6 01       	movw	r22, r12
 926:	0c c0       	rjmp	.+24     	; 0x940 <vfprintf+0x384>
 928:	8a 2d       	mov	r24, r10
 92a:	86 78       	andi	r24, 0x86	; 134
 92c:	51 f0       	breq	.+20     	; 0x942 <vfprintf+0x386>
 92e:	a1 fe       	sbrs	r10, 1
 930:	02 c0       	rjmp	.+4      	; 0x936 <vfprintf+0x37a>
 932:	8b e2       	ldi	r24, 0x2B	; 43
 934:	01 c0       	rjmp	.+2      	; 0x938 <vfprintf+0x37c>
 936:	80 e2       	ldi	r24, 0x20	; 32
 938:	a7 fc       	sbrc	r10, 7
 93a:	8d e2       	ldi	r24, 0x2D	; 45
 93c:	b6 01       	movw	r22, r12
 93e:	90 e0       	ldi	r25, 0x00	; 0
 940:	50 d0       	rcall	.+160    	; 0x9e2 <fputc>
 942:	89 14       	cp	r8, r9
 944:	30 f4       	brcc	.+12     	; 0x952 <vfprintf+0x396>
 946:	b6 01       	movw	r22, r12
 948:	80 e3       	ldi	r24, 0x30	; 48
 94a:	90 e0       	ldi	r25, 0x00	; 0
 94c:	4a d0       	rcall	.+148    	; 0x9e2 <fputc>
 94e:	9a 94       	dec	r9
 950:	f8 cf       	rjmp	.-16     	; 0x942 <vfprintf+0x386>
 952:	8a 94       	dec	r8
 954:	f3 01       	movw	r30, r6
 956:	e8 0d       	add	r30, r8
 958:	f1 1d       	adc	r31, r1
 95a:	80 81       	ld	r24, Z
 95c:	b6 01       	movw	r22, r12
 95e:	90 e0       	ldi	r25, 0x00	; 0
 960:	40 d0       	rcall	.+128    	; 0x9e2 <fputc>
 962:	81 10       	cpse	r8, r1
 964:	f6 cf       	rjmp	.-20     	; 0x952 <vfprintf+0x396>
 966:	22 20       	and	r2, r2
 968:	09 f4       	brne	.+2      	; 0x96c <vfprintf+0x3b0>
 96a:	4e ce       	rjmp	.-868    	; 0x608 <vfprintf+0x4c>
 96c:	b6 01       	movw	r22, r12
 96e:	80 e2       	ldi	r24, 0x20	; 32
 970:	90 e0       	ldi	r25, 0x00	; 0
 972:	37 d0       	rcall	.+110    	; 0x9e2 <fputc>
 974:	2a 94       	dec	r2
 976:	f7 cf       	rjmp	.-18     	; 0x966 <vfprintf+0x3aa>
 978:	f6 01       	movw	r30, r12
 97a:	86 81       	ldd	r24, Z+6	; 0x06
 97c:	97 81       	ldd	r25, Z+7	; 0x07
 97e:	02 c0       	rjmp	.+4      	; 0x984 <vfprintf+0x3c8>
 980:	8f ef       	ldi	r24, 0xFF	; 255
 982:	9f ef       	ldi	r25, 0xFF	; 255
 984:	2b 96       	adiw	r28, 0x0b	; 11
 986:	0f b6       	in	r0, 0x3f	; 63
 988:	f8 94       	cli
 98a:	de bf       	out	0x3e, r29	; 62
 98c:	0f be       	out	0x3f, r0	; 63
 98e:	cd bf       	out	0x3d, r28	; 61
 990:	df 91       	pop	r29
 992:	cf 91       	pop	r28
 994:	1f 91       	pop	r17
 996:	0f 91       	pop	r16
 998:	ff 90       	pop	r15
 99a:	ef 90       	pop	r14
 99c:	df 90       	pop	r13
 99e:	cf 90       	pop	r12
 9a0:	bf 90       	pop	r11
 9a2:	af 90       	pop	r10
 9a4:	9f 90       	pop	r9
 9a6:	8f 90       	pop	r8
 9a8:	7f 90       	pop	r7
 9aa:	6f 90       	pop	r6
 9ac:	5f 90       	pop	r5
 9ae:	4f 90       	pop	r4
 9b0:	3f 90       	pop	r3
 9b2:	2f 90       	pop	r2
 9b4:	08 95       	ret

000009b6 <strnlen_P>:
 9b6:	fc 01       	movw	r30, r24
 9b8:	05 90       	lpm	r0, Z+
 9ba:	61 50       	subi	r22, 0x01	; 1
 9bc:	70 40       	sbci	r23, 0x00	; 0
 9be:	01 10       	cpse	r0, r1
 9c0:	d8 f7       	brcc	.-10     	; 0x9b8 <strnlen_P+0x2>
 9c2:	80 95       	com	r24
 9c4:	90 95       	com	r25
 9c6:	8e 0f       	add	r24, r30
 9c8:	9f 1f       	adc	r25, r31
 9ca:	08 95       	ret

000009cc <strnlen>:
 9cc:	fc 01       	movw	r30, r24
 9ce:	61 50       	subi	r22, 0x01	; 1
 9d0:	70 40       	sbci	r23, 0x00	; 0
 9d2:	01 90       	ld	r0, Z+
 9d4:	01 10       	cpse	r0, r1
 9d6:	d8 f7       	brcc	.-10     	; 0x9ce <strnlen+0x2>
 9d8:	80 95       	com	r24
 9da:	90 95       	com	r25
 9dc:	8e 0f       	add	r24, r30
 9de:	9f 1f       	adc	r25, r31
 9e0:	08 95       	ret

000009e2 <fputc>:
 9e2:	0f 93       	push	r16
 9e4:	1f 93       	push	r17
 9e6:	cf 93       	push	r28
 9e8:	df 93       	push	r29
 9ea:	fb 01       	movw	r30, r22
 9ec:	23 81       	ldd	r18, Z+3	; 0x03
 9ee:	21 fd       	sbrc	r18, 1
 9f0:	03 c0       	rjmp	.+6      	; 0x9f8 <fputc+0x16>
 9f2:	8f ef       	ldi	r24, 0xFF	; 255
 9f4:	9f ef       	ldi	r25, 0xFF	; 255
 9f6:	2c c0       	rjmp	.+88     	; 0xa50 <fputc+0x6e>
 9f8:	22 ff       	sbrs	r18, 2
 9fa:	16 c0       	rjmp	.+44     	; 0xa28 <fputc+0x46>
 9fc:	46 81       	ldd	r20, Z+6	; 0x06
 9fe:	57 81       	ldd	r21, Z+7	; 0x07
 a00:	24 81       	ldd	r18, Z+4	; 0x04
 a02:	35 81       	ldd	r19, Z+5	; 0x05
 a04:	42 17       	cp	r20, r18
 a06:	53 07       	cpc	r21, r19
 a08:	44 f4       	brge	.+16     	; 0xa1a <fputc+0x38>
 a0a:	a0 81       	ld	r26, Z
 a0c:	b1 81       	ldd	r27, Z+1	; 0x01
 a0e:	9d 01       	movw	r18, r26
 a10:	2f 5f       	subi	r18, 0xFF	; 255
 a12:	3f 4f       	sbci	r19, 0xFF	; 255
 a14:	31 83       	std	Z+1, r19	; 0x01
 a16:	20 83       	st	Z, r18
 a18:	8c 93       	st	X, r24
 a1a:	26 81       	ldd	r18, Z+6	; 0x06
 a1c:	37 81       	ldd	r19, Z+7	; 0x07
 a1e:	2f 5f       	subi	r18, 0xFF	; 255
 a20:	3f 4f       	sbci	r19, 0xFF	; 255
 a22:	37 83       	std	Z+7, r19	; 0x07
 a24:	26 83       	std	Z+6, r18	; 0x06
 a26:	14 c0       	rjmp	.+40     	; 0xa50 <fputc+0x6e>
 a28:	8b 01       	movw	r16, r22
 a2a:	ec 01       	movw	r28, r24
 a2c:	fb 01       	movw	r30, r22
 a2e:	00 84       	ldd	r0, Z+8	; 0x08
 a30:	f1 85       	ldd	r31, Z+9	; 0x09
 a32:	e0 2d       	mov	r30, r0
 a34:	09 95       	icall
 a36:	89 2b       	or	r24, r25
 a38:	e1 f6       	brne	.-72     	; 0x9f2 <fputc+0x10>
 a3a:	d8 01       	movw	r26, r16
 a3c:	16 96       	adiw	r26, 0x06	; 6
 a3e:	8d 91       	ld	r24, X+
 a40:	9c 91       	ld	r25, X
 a42:	17 97       	sbiw	r26, 0x07	; 7
 a44:	01 96       	adiw	r24, 0x01	; 1
 a46:	17 96       	adiw	r26, 0x07	; 7
 a48:	9c 93       	st	X, r25
 a4a:	8e 93       	st	-X, r24
 a4c:	16 97       	sbiw	r26, 0x06	; 6
 a4e:	ce 01       	movw	r24, r28
 a50:	df 91       	pop	r29
 a52:	cf 91       	pop	r28
 a54:	1f 91       	pop	r17
 a56:	0f 91       	pop	r16
 a58:	08 95       	ret

00000a5a <__ultoa_invert>:
 a5a:	fa 01       	movw	r30, r20
 a5c:	aa 27       	eor	r26, r26
 a5e:	28 30       	cpi	r18, 0x08	; 8
 a60:	51 f1       	breq	.+84     	; 0xab6 <__ultoa_invert+0x5c>
 a62:	20 31       	cpi	r18, 0x10	; 16
 a64:	81 f1       	breq	.+96     	; 0xac6 <__ultoa_invert+0x6c>
 a66:	e8 94       	clt
 a68:	6f 93       	push	r22
 a6a:	6e 7f       	andi	r22, 0xFE	; 254
 a6c:	6e 5f       	subi	r22, 0xFE	; 254
 a6e:	7f 4f       	sbci	r23, 0xFF	; 255
 a70:	8f 4f       	sbci	r24, 0xFF	; 255
 a72:	9f 4f       	sbci	r25, 0xFF	; 255
 a74:	af 4f       	sbci	r26, 0xFF	; 255
 a76:	b1 e0       	ldi	r27, 0x01	; 1
 a78:	3e d0       	rcall	.+124    	; 0xaf6 <__ultoa_invert+0x9c>
 a7a:	b4 e0       	ldi	r27, 0x04	; 4
 a7c:	3c d0       	rcall	.+120    	; 0xaf6 <__ultoa_invert+0x9c>
 a7e:	67 0f       	add	r22, r23
 a80:	78 1f       	adc	r23, r24
 a82:	89 1f       	adc	r24, r25
 a84:	9a 1f       	adc	r25, r26
 a86:	a1 1d       	adc	r26, r1
 a88:	68 0f       	add	r22, r24
 a8a:	79 1f       	adc	r23, r25
 a8c:	8a 1f       	adc	r24, r26
 a8e:	91 1d       	adc	r25, r1
 a90:	a1 1d       	adc	r26, r1
 a92:	6a 0f       	add	r22, r26
 a94:	71 1d       	adc	r23, r1
 a96:	81 1d       	adc	r24, r1
 a98:	91 1d       	adc	r25, r1
 a9a:	a1 1d       	adc	r26, r1
 a9c:	20 d0       	rcall	.+64     	; 0xade <__ultoa_invert+0x84>
 a9e:	09 f4       	brne	.+2      	; 0xaa2 <__ultoa_invert+0x48>
 aa0:	68 94       	set
 aa2:	3f 91       	pop	r19
 aa4:	2a e0       	ldi	r18, 0x0A	; 10
 aa6:	26 9f       	mul	r18, r22
 aa8:	11 24       	eor	r1, r1
 aaa:	30 19       	sub	r19, r0
 aac:	30 5d       	subi	r19, 0xD0	; 208
 aae:	31 93       	st	Z+, r19
 ab0:	de f6       	brtc	.-74     	; 0xa68 <__ultoa_invert+0xe>
 ab2:	cf 01       	movw	r24, r30
 ab4:	08 95       	ret
 ab6:	46 2f       	mov	r20, r22
 ab8:	47 70       	andi	r20, 0x07	; 7
 aba:	40 5d       	subi	r20, 0xD0	; 208
 abc:	41 93       	st	Z+, r20
 abe:	b3 e0       	ldi	r27, 0x03	; 3
 ac0:	0f d0       	rcall	.+30     	; 0xae0 <__ultoa_invert+0x86>
 ac2:	c9 f7       	brne	.-14     	; 0xab6 <__ultoa_invert+0x5c>
 ac4:	f6 cf       	rjmp	.-20     	; 0xab2 <__ultoa_invert+0x58>
 ac6:	46 2f       	mov	r20, r22
 ac8:	4f 70       	andi	r20, 0x0F	; 15
 aca:	40 5d       	subi	r20, 0xD0	; 208
 acc:	4a 33       	cpi	r20, 0x3A	; 58
 ace:	18 f0       	brcs	.+6      	; 0xad6 <__ultoa_invert+0x7c>
 ad0:	49 5d       	subi	r20, 0xD9	; 217
 ad2:	31 fd       	sbrc	r19, 1
 ad4:	40 52       	subi	r20, 0x20	; 32
 ad6:	41 93       	st	Z+, r20
 ad8:	02 d0       	rcall	.+4      	; 0xade <__ultoa_invert+0x84>
 ada:	a9 f7       	brne	.-22     	; 0xac6 <__ultoa_invert+0x6c>
 adc:	ea cf       	rjmp	.-44     	; 0xab2 <__ultoa_invert+0x58>
 ade:	b4 e0       	ldi	r27, 0x04	; 4
 ae0:	a6 95       	lsr	r26
 ae2:	97 95       	ror	r25
 ae4:	87 95       	ror	r24
 ae6:	77 95       	ror	r23
 ae8:	67 95       	ror	r22
 aea:	ba 95       	dec	r27
 aec:	c9 f7       	brne	.-14     	; 0xae0 <__ultoa_invert+0x86>
 aee:	00 97       	sbiw	r24, 0x00	; 0
 af0:	61 05       	cpc	r22, r1
 af2:	71 05       	cpc	r23, r1
 af4:	08 95       	ret
 af6:	9b 01       	movw	r18, r22
 af8:	ac 01       	movw	r20, r24
 afa:	0a 2e       	mov	r0, r26
 afc:	06 94       	lsr	r0
 afe:	57 95       	ror	r21
 b00:	47 95       	ror	r20
 b02:	37 95       	ror	r19
 b04:	27 95       	ror	r18
 b06:	ba 95       	dec	r27
 b08:	c9 f7       	brne	.-14     	; 0xafc <__ultoa_invert+0xa2>
 b0a:	62 0f       	add	r22, r18
 b0c:	73 1f       	adc	r23, r19
 b0e:	84 1f       	adc	r24, r20
 b10:	95 1f       	adc	r25, r21
 b12:	a0 1d       	adc	r26, r0
 b14:	08 95       	ret

00000b16 <_exit>:
 b16:	f8 94       	cli

00000b18 <__stop_program>:
 b18:	ff cf       	rjmp	.-2      	; 0xb18 <__stop_program>
