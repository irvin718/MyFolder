
LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000032  00800100  000009c0  00000a54  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009c0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001b  00800132  00800132  00000a86  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a86  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ae4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000b24  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f73  00000000  00000000  00000bac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009f0  00000000  00000000  00001b1f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006aa  00000000  00000000  0000250f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000134  00000000  00000000  00002bbc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000494  00000000  00000000  00002cf0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004da  00000000  00000000  00003184  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  0000365e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	d1 c0       	rjmp	.+418    	; 0x1a8 <__vector_1>
   6:	00 00       	nop
   8:	ee c0       	rjmp	.+476    	; 0x1e6 <__vector_2>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 ec       	ldi	r30, 0xC0	; 192
  a0:	f9 e0       	ldi	r31, 0x09	; 9
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 33       	cpi	r26, 0x32	; 50
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a2 e3       	ldi	r26, 0x32	; 50
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ad 34       	cpi	r26, 0x4D	; 77
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	b0 d0       	rcall	.+352    	; 0x224 <main>
  c4:	7b c4       	rjmp	.+2294   	; 0x9bc <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <LCD_pulse_enable>:
#include <avr/interrupt.h>
#include "LCD.h"

void LCD_pulse_enable(void)
{
	PORT_CONTROL |= (1<<E_PIN);
  c8:	c7 9a       	sbi	0x18, 7	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ca:	89 ef       	ldi	r24, 0xF9	; 249
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	01 97       	sbiw	r24, 0x01	; 1
  d0:	f1 f7       	brne	.-4      	; 0xce <LCD_pulse_enable+0x6>
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <LCD_pulse_enable+0xc>
  d4:	00 00       	nop
	_delay_ms(1);
	PORT_CONTROL &= ~(1<<E_PIN);
  d6:	c7 98       	cbi	0x18, 7	; 24
  d8:	89 ef       	ldi	r24, 0xF9	; 249
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	01 97       	sbiw	r24, 0x01	; 1
  de:	f1 f7       	brne	.-4      	; 0xdc <LCD_pulse_enable+0x14>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <LCD_pulse_enable+0x1a>
  e2:	00 00       	nop
  e4:	08 95       	ret

000000e6 <LCD_write_data>:
	_delay_ms(1);
}

void LCD_write_data(uint8_t data)
{
	PORT_CONTROL |= (1<<RS_PIN);
  e6:	c5 9a       	sbi	0x18, 5	; 24
	PORT_DATA = data;
  e8:	85 bb       	out	0x15, r24	; 21
	LCD_pulse_enable();
  ea:	ee df       	rcall	.-36     	; 0xc8 <LCD_pulse_enable>
  ec:	83 ef       	ldi	r24, 0xF3	; 243
  ee:	91 e0       	ldi	r25, 0x01	; 1
  f0:	01 97       	sbiw	r24, 0x01	; 1
  f2:	f1 f7       	brne	.-4      	; 0xf0 <LCD_write_data+0xa>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <LCD_write_data+0x10>
  f6:	00 00       	nop
  f8:	08 95       	ret

000000fa <LCD_write_command>:
	_delay_ms(2);
}

void LCD_write_command(uint8_t command)
{
	PORT_CONTROL &= ~(1<<RS_PIN);
  fa:	c5 98       	cbi	0x18, 5	; 24
	PORT_DATA = command;
  fc:	85 bb       	out	0x15, r24	; 21
	LCD_pulse_enable();
  fe:	e4 df       	rcall	.-56     	; 0xc8 <LCD_pulse_enable>
 100:	83 ef       	ldi	r24, 0xF3	; 243
 102:	91 e0       	ldi	r25, 0x01	; 1
 104:	01 97       	sbiw	r24, 0x01	; 1
 106:	f1 f7       	brne	.-4      	; 0x104 <LCD_write_command+0xa>
 108:	00 c0       	rjmp	.+0      	; 0x10a <LCD_write_command+0x10>
 10a:	00 00       	nop
 10c:	08 95       	ret

0000010e <LCD_clear>:
	_delay_ms(2);
}

void LCD_clear(void)
{
	LCD_write_command(COMMAND_CLEAR_DISPLAY);
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	f4 df       	rcall	.-24     	; 0xfa <LCD_write_command>
 112:	83 ef       	ldi	r24, 0xF3	; 243
 114:	91 e0       	ldi	r25, 0x01	; 1
 116:	01 97       	sbiw	r24, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <LCD_clear+0x8>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <LCD_clear+0xe>
 11c:	00 00       	nop
 11e:	08 95       	ret

00000120 <LCD_init>:
 120:	83 ed       	ldi	r24, 0xD3	; 211
 122:	90 e3       	ldi	r25, 0x30	; 48
 124:	01 97       	sbiw	r24, 0x01	; 1
 126:	f1 f7       	brne	.-4      	; 0x124 <LCD_init+0x4>
 128:	00 c0       	rjmp	.+0      	; 0x12a <LCD_init+0xa>
 12a:	00 00       	nop

void LCD_init(void)
{
	_delay_ms(50);
	
	DDR_DATA = 0xff;
 12c:	8f ef       	ldi	r24, 0xFF	; 255
 12e:	84 bb       	out	0x14, r24	; 20
	PORT_DATA = 0x00;
 130:	15 ba       	out	0x15, r1	; 21
	DDR_CONTROL |= (1<< RS_PIN) | (1<< RW_PIN) | (1<<E_PIN);
 132:	87 b3       	in	r24, 0x17	; 23
 134:	80 6e       	ori	r24, 0xE0	; 224
 136:	87 bb       	out	0x17, r24	; 23
	
	PORT_CONTROL &= ~(1 << RW_PIN);
 138:	c6 98       	cbi	0x18, 6	; 24
	
	LCD_write_command(COMMAND_8_BIT_MODE);
 13a:	88 e3       	ldi	r24, 0x38	; 56
 13c:	de df       	rcall	.-68     	; 0xfa <LCD_write_command>
	
	uint8_t command = 0x08 | (1<< COMMAND_DISPLAY_ON_OFF_BIT);
	LCD_write_command(command);
 13e:	8c e0       	ldi	r24, 0x0C	; 12
	LCD_clear();
 140:	dc df       	rcall	.-72     	; 0xfa <LCD_write_command>
	
	LCD_write_command(0x06);
 142:	e5 df       	rcall	.-54     	; 0x10e <LCD_clear>
 144:	86 e0       	ldi	r24, 0x06	; 6
 146:	d9 cf       	rjmp	.-78     	; 0xfa <LCD_write_command>
 148:	08 95       	ret

0000014a <LCD_write_string>:
}

void LCD_write_string(char *string)
{
 14a:	0f 93       	push	r16
 14c:	1f 93       	push	r17
 14e:	cf 93       	push	r28
 150:	fc 01       	movw	r30, r24
	uint8_t i;
	for(i=0; string[i]; i++)
 152:	80 81       	ld	r24, Z
 154:	88 23       	and	r24, r24
 156:	51 f0       	breq	.+20     	; 0x16c <LCD_write_string+0x22>
 158:	8f 01       	movw	r16, r30
 15a:	c0 e0       	ldi	r28, 0x00	; 0
	{
		LCD_write_data(string[i]);
 15c:	c4 df       	rcall	.-120    	; 0xe6 <LCD_write_data>
}

void LCD_write_string(char *string)
{
	uint8_t i;
	for(i=0; string[i]; i++)
 15e:	cf 5f       	subi	r28, 0xFF	; 255
 160:	f8 01       	movw	r30, r16
 162:	ec 0f       	add	r30, r28
 164:	f1 1d       	adc	r31, r1
 166:	80 81       	ld	r24, Z
 168:	81 11       	cpse	r24, r1
 16a:	f8 cf       	rjmp	.-16     	; 0x15c <LCD_write_string+0x12>
	{
		LCD_write_data(string[i]);
	}
}
 16c:	cf 91       	pop	r28
 16e:	1f 91       	pop	r17
 170:	0f 91       	pop	r16
 172:	08 95       	ret

00000174 <LCD_goto_XY>:
	row %= 2;
	
	uint8_t address = (0x40 * row) + col;
	uint8_t command = 0x80 + address;
	
	LCD_write_command(command);
 174:	81 70       	andi	r24, 0x01	; 1
 176:	6f 70       	andi	r22, 0x0F	; 15
 178:	90 e4       	ldi	r25, 0x40	; 64
 17a:	89 9f       	mul	r24, r25
 17c:	60 0d       	add	r22, r0
 17e:	11 24       	eor	r1, r1
 180:	86 2f       	mov	r24, r22
 182:	80 58       	subi	r24, 0x80	; 128
 184:	ba cf       	rjmp	.-140    	; 0xfa <LCD_write_command>
 186:	08 95       	ret

00000188 <INIT_INT0>:
}

void INIT_INT0(void)
{
	EIMSK |= ( 1<< INT0);
 188:	89 b7       	in	r24, 0x39	; 57
 18a:	81 60       	ori	r24, 0x01	; 1
 18c:	89 bf       	out	0x39, r24	; 57
	EIMSK |= ( 1<< INT1);
 18e:	89 b7       	in	r24, 0x39	; 57
 190:	82 60       	ori	r24, 0x02	; 2
 192:	89 bf       	out	0x39, r24	; 57
	EICRA |= ( 1 << ISC01);
 194:	ea e6       	ldi	r30, 0x6A	; 106
 196:	f0 e0       	ldi	r31, 0x00	; 0
 198:	80 81       	ld	r24, Z
 19a:	82 60       	ori	r24, 0x02	; 2
 19c:	80 83       	st	Z, r24
	EICRA |= ( 1 << ISC11);
 19e:	80 81       	ld	r24, Z
 1a0:	88 60       	ori	r24, 0x08	; 8
 1a2:	80 83       	st	Z, r24
	sei();
 1a4:	78 94       	sei
 1a6:	08 95       	ret

000001a8 <__vector_1>:
}

ISR(INT0_vect)
{
 1a8:	1f 92       	push	r1
 1aa:	0f 92       	push	r0
 1ac:	0f b6       	in	r0, 0x3f	; 63
 1ae:	0f 92       	push	r0
 1b0:	11 24       	eor	r1, r1
 1b2:	8f 93       	push	r24
 1b4:	9f 93       	push	r25
	state = (state + 1) %2;
 1b6:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <state>
 1ba:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <state+0x1>
 1be:	01 96       	adiw	r24, 0x01	; 1
 1c0:	81 70       	andi	r24, 0x01	; 1
 1c2:	90 78       	andi	r25, 0x80	; 128
 1c4:	99 23       	and	r25, r25
 1c6:	24 f4       	brge	.+8      	; 0x1d0 <__vector_1+0x28>
 1c8:	01 97       	sbiw	r24, 0x01	; 1
 1ca:	8e 6f       	ori	r24, 0xFE	; 254
 1cc:	9f 6f       	ori	r25, 0xFF	; 255
 1ce:	01 96       	adiw	r24, 0x01	; 1
 1d0:	90 93 4a 01 	sts	0x014A, r25	; 0x80014a <state+0x1>
 1d4:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <state>
}
 1d8:	9f 91       	pop	r25
 1da:	8f 91       	pop	r24
 1dc:	0f 90       	pop	r0
 1de:	0f be       	out	0x3f, r0	; 63
 1e0:	0f 90       	pop	r0
 1e2:	1f 90       	pop	r1
 1e4:	18 95       	reti

000001e6 <__vector_2>:

ISR(INT1_vect)
{
 1e6:	1f 92       	push	r1
 1e8:	0f 92       	push	r0
 1ea:	0f b6       	in	r0, 0x3f	; 63
 1ec:	0f 92       	push	r0
 1ee:	11 24       	eor	r1, r1
 1f0:	8f 93       	push	r24
 1f2:	9f 93       	push	r25
	state2 = (state2 + 1) %2;
 1f4:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <state2>
 1f8:	90 91 4c 01 	lds	r25, 0x014C	; 0x80014c <state2+0x1>
 1fc:	01 96       	adiw	r24, 0x01	; 1
 1fe:	81 70       	andi	r24, 0x01	; 1
 200:	90 78       	andi	r25, 0x80	; 128
 202:	99 23       	and	r25, r25
 204:	24 f4       	brge	.+8      	; 0x20e <__vector_2+0x28>
 206:	01 97       	sbiw	r24, 0x01	; 1
 208:	8e 6f       	ori	r24, 0xFE	; 254
 20a:	9f 6f       	ori	r25, 0xFF	; 255
 20c:	01 96       	adiw	r24, 0x01	; 1
 20e:	90 93 4c 01 	sts	0x014C, r25	; 0x80014c <state2+0x1>
 212:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <state2>
}
 216:	9f 91       	pop	r25
 218:	8f 91       	pop	r24
 21a:	0f 90       	pop	r0
 21c:	0f be       	out	0x3f, r0	; 63
 21e:	0f 90       	pop	r0
 220:	1f 90       	pop	r1
 222:	18 95       	reti

00000224 <main>:



int main(void)
{
	mm = 12;
 224:	8c e0       	ldi	r24, 0x0C	; 12
 226:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <__data_end>
	ss = 0;
 22a:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <ss>
	ms = 0;
 22e:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <ms>
	state = 0;
 232:	10 92 4a 01 	sts	0x014A, r1	; 0x80014a <state+0x1>
 236:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <state>
	state2 = 0;
 23a:	10 92 4c 01 	sts	0x014C, r1	; 0x80014c <state2+0x1>
 23e:	10 92 4b 01 	sts	0x014B, r1	; 0x80014b <state2>
	
	DDRD = 0x00;
 242:	11 ba       	out	0x11, r1	; 17
	LCD_init();
 244:	6d df       	rcall	.-294    	; 0x120 <LCD_init>
	LCD_write_string("Stop Watch");
 246:	80 e0       	ldi	r24, 0x00	; 0
 248:	91 e0       	ldi	r25, 0x01	; 1
 24a:	7f df       	rcall	.-258    	; 0x14a <LCD_write_string>
 24c:	2f e9       	ldi	r18, 0x9F	; 159
 24e:	36 e8       	ldi	r19, 0x86	; 134
 250:	81 e0       	ldi	r24, 0x01	; 1
 252:	21 50       	subi	r18, 0x01	; 1
 254:	30 40       	sbci	r19, 0x00	; 0
 256:	80 40       	sbci	r24, 0x00	; 0
 258:	e1 f7       	brne	.-8      	; 0x252 <main+0x2e>
 25a:	00 c0       	rjmp	.+0      	; 0x25c <main+0x38>
	_delay_ms(500);
	LCD_clear();
 25c:	00 00       	nop
 25e:	57 df       	rcall	.-338    	; 0x10e <LCD_clear>
	INIT_INT0();
 260:	93 df       	rcall	.-218    	; 0x188 <INIT_INT0>
 262:	0b e0       	ldi	r16, 0x0B	; 11
	
	while (1)
	{
		LCD_goto_XY(2,0);
		sprintf(buff, "%02d:%02d:%02d", mm,ss,ms); //화면에 출력되지 않음,  buff에 값 저장
 264:	11 e0       	ldi	r17, 0x01	; 1
 266:	c4 e3       	ldi	r28, 0x34	; 52
 268:	d1 e0       	ldi	r29, 0x01	; 1
 26a:	ec 2e       	mov	r14, r28
 26c:	fd 2e       	mov	r15, r29
 26e:	0f 2e       	mov	r0, r31
			LCD_goto_XY(2,1);
			LCD_write_string("reset");
			_delay_ms(50);
			LCD_write_string("reset");
			_delay_ms(50);
			mm =12;
 270:	fc e0       	ldi	r31, 0x0C	; 12
 272:	df 2e       	mov	r13, r31
 274:	f0 2d       	mov	r31, r0
	LCD_clear();
	INIT_INT0();
	
	while (1)
	{
		LCD_goto_XY(2,0);
 276:	60 e0       	ldi	r22, 0x00	; 0
 278:	82 e0       	ldi	r24, 0x02	; 2
 27a:	7c df       	rcall	.-264    	; 0x174 <LCD_goto_XY>
 27c:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <ms>
		sprintf(buff, "%02d:%02d:%02d", mm,ss,ms); //화면에 출력되지 않음,  buff에 값 저장
 280:	1f 92       	push	r1
 282:	8f 93       	push	r24
 284:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <ss>
 288:	1f 92       	push	r1
 28a:	8f 93       	push	r24
 28c:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__data_end>
 290:	1f 92       	push	r1
 292:	8f 93       	push	r24
 294:	1f 93       	push	r17
 296:	0f 93       	push	r16
 298:	df 93       	push	r29
 29a:	cf 93       	push	r28
 29c:	b4 d0       	rcall	.+360    	; 0x406 <sprintf>
		LCD_write_string(buff);
 29e:	8e 2d       	mov	r24, r14
 2a0:	9f 2d       	mov	r25, r15
 2a2:	53 df       	rcall	.-346    	; 0x14a <LCD_write_string>
 2a4:	89 ef       	ldi	r24, 0xF9	; 249
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	01 97       	sbiw	r24, 0x01	; 1
 2aa:	f1 f7       	brne	.-4      	; 0x2a8 <main+0x84>
 2ac:	00 c0       	rjmp	.+0      	; 0x2ae <main+0x8a>
 2ae:	00 00       	nop
 2b0:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <ms>
		_delay_ms(1);
		ms++;
 2b4:	8f 5f       	subi	r24, 0xFF	; 255
 2b6:	2d b7       	in	r18, 0x3d	; 61
		if (ms>= 60)
 2b8:	3e b7       	in	r19, 0x3e	; 62
 2ba:	26 5f       	subi	r18, 0xF6	; 246
 2bc:	3f 4f       	sbci	r19, 0xFF	; 255
 2be:	0f b6       	in	r0, 0x3f	; 63
 2c0:	f8 94       	cli
 2c2:	3e bf       	out	0x3e, r19	; 62
 2c4:	0f be       	out	0x3f, r0	; 63
 2c6:	2d bf       	out	0x3d, r18	; 61
 2c8:	8c 33       	cpi	r24, 0x3C	; 60
 2ca:	18 f4       	brcc	.+6      	; 0x2d2 <main+0xae>
 2cc:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <ms>
	{
		LCD_goto_XY(2,0);
		sprintf(buff, "%02d:%02d:%02d", mm,ss,ms); //화면에 출력되지 않음,  buff에 값 저장
		LCD_write_string(buff);
		_delay_ms(1);
		ms++;
 2d0:	14 c0       	rjmp	.+40     	; 0x2fa <main+0xd6>
 2d2:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <ms>
		if (ms>= 60)
		{
			ms = 0;
 2d6:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <ss>
			ss++;
 2da:	8f 5f       	subi	r24, 0xFF	; 255
 2dc:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <ss>
 2e0:	8c 33       	cpi	r24, 0x3C	; 60
			if (ss>=60)
 2e2:	58 f0       	brcs	.+22     	; 0x2fa <main+0xd6>
 2e4:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__data_end>
			{
				mm++;
 2e8:	8f 5f       	subi	r24, 0xFF	; 255
 2ea:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <__data_end>
 2ee:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <ss>
				ss =0;
 2f2:	88 31       	cpi	r24, 0x18	; 24
				if(mm >= 24)
 2f4:	10 f0       	brcs	.+4      	; 0x2fa <main+0xd6>
 2f6:	10 92 32 01 	sts	0x0132, r1	; 0x800132 <__data_end>
					ss = 0;
					ms = 0;
				}
			}
		}
		if(state == 1)
 2fa:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <state>
 2fe:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <state+0x1>
 302:	01 97       	sbiw	r24, 0x01	; 1
 304:	a9 f5       	brne	.+106    	; 0x370 <main+0x14c>
		{
			LCD_clear();
 306:	03 df       	rcall	.-506    	; 0x10e <LCD_clear>
 308:	83 ed       	ldi	r24, 0xD3	; 211
 30a:	90 e3       	ldi	r25, 0x30	; 48
 30c:	01 97       	sbiw	r24, 0x01	; 1
 30e:	f1 f7       	brne	.-4      	; 0x30c <main+0xe8>
 310:	00 c0       	rjmp	.+0      	; 0x312 <main+0xee>
			_delay_ms(50);
			LCD_goto_XY(2,1);
 312:	00 00       	nop
 314:	61 e0       	ldi	r22, 0x01	; 1
 316:	82 e0       	ldi	r24, 0x02	; 2
 318:	2d df       	rcall	.-422    	; 0x174 <LCD_goto_XY>
			LCD_write_string("Stop state");
 31a:	8a e1       	ldi	r24, 0x1A	; 26
 31c:	91 e0       	ldi	r25, 0x01	; 1
 31e:	15 df       	rcall	.-470    	; 0x14a <LCD_write_string>
 320:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <state>
			while(state)
 324:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <state+0x1>
 328:	89 2b       	or	r24, r25
 32a:	61 f0       	breq	.+24     	; 0x344 <main+0x120>
 32c:	83 ec       	ldi	r24, 0xC3	; 195
 32e:	99 e0       	ldi	r25, 0x09	; 9
 330:	01 97       	sbiw	r24, 0x01	; 1
 332:	f1 f7       	brne	.-4      	; 0x330 <main+0x10c>
 334:	00 c0       	rjmp	.+0      	; 0x336 <main+0x112>
 336:	00 00       	nop
 338:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <state>
 33c:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <state+0x1>
 340:	89 2b       	or	r24, r25
			{_delay_ms(10);}
			LCD_clear();
 342:	a1 f7       	brne	.-24     	; 0x32c <main+0x108>
 344:	e4 de       	rcall	.-568    	; 0x10e <LCD_clear>
 346:	83 ed       	ldi	r24, 0xD3	; 211
 348:	90 e3       	ldi	r25, 0x30	; 48
 34a:	01 97       	sbiw	r24, 0x01	; 1
 34c:	f1 f7       	brne	.-4      	; 0x34a <main+0x126>
 34e:	00 c0       	rjmp	.+0      	; 0x350 <main+0x12c>
			_delay_ms(50);
			LCD_goto_XY(2,1);
 350:	00 00       	nop
 352:	61 e0       	ldi	r22, 0x01	; 1
 354:	82 e0       	ldi	r24, 0x02	; 2
 356:	0e df       	rcall	.-484    	; 0x174 <LCD_goto_XY>
			LCD_write_string("Start");
 358:	85 e2       	ldi	r24, 0x25	; 37
 35a:	91 e0       	ldi	r25, 0x01	; 1
 35c:	f6 de       	rcall	.-532    	; 0x14a <LCD_write_string>
 35e:	9f e9       	ldi	r25, 0x9F	; 159
 360:	26 e8       	ldi	r18, 0x86	; 134
 362:	31 e0       	ldi	r19, 0x01	; 1
 364:	91 50       	subi	r25, 0x01	; 1
 366:	20 40       	sbci	r18, 0x00	; 0
 368:	30 40       	sbci	r19, 0x00	; 0
 36a:	e1 f7       	brne	.-8      	; 0x364 <main+0x140>
 36c:	00 c0       	rjmp	.+0      	; 0x36e <main+0x14a>
 36e:	00 00       	nop
			_delay_ms(500);
		}
		if(state2 == 1)
 370:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <state2>
 374:	90 91 4c 01 	lds	r25, 0x014C	; 0x80014c <state2+0x1>
 378:	01 97       	sbiw	r24, 0x01	; 1
		{
			LCD_clear();
 37a:	09 f0       	breq	.+2      	; 0x37e <main+0x15a>
 37c:	7c cf       	rjmp	.-264    	; 0x276 <main+0x52>
 37e:	c7 de       	rcall	.-626    	; 0x10e <LCD_clear>
 380:	83 ed       	ldi	r24, 0xD3	; 211
 382:	90 e3       	ldi	r25, 0x30	; 48
 384:	01 97       	sbiw	r24, 0x01	; 1
 386:	f1 f7       	brne	.-4      	; 0x384 <main+0x160>
			_delay_ms(50);
			LCD_clear();
 388:	00 c0       	rjmp	.+0      	; 0x38a <main+0x166>
			LCD_goto_XY(2,1);
 38a:	00 00       	nop
 38c:	c0 de       	rcall	.-640    	; 0x10e <LCD_clear>
 38e:	61 e0       	ldi	r22, 0x01	; 1
 390:	82 e0       	ldi	r24, 0x02	; 2
			LCD_write_string("reset");
 392:	f0 de       	rcall	.-544    	; 0x174 <LCD_goto_XY>
 394:	8b e2       	ldi	r24, 0x2B	; 43
 396:	91 e0       	ldi	r25, 0x01	; 1
 398:	d8 de       	rcall	.-592    	; 0x14a <LCD_write_string>
 39a:	83 ed       	ldi	r24, 0xD3	; 211
 39c:	90 e3       	ldi	r25, 0x30	; 48
 39e:	01 97       	sbiw	r24, 0x01	; 1
 3a0:	f1 f7       	brne	.-4      	; 0x39e <main+0x17a>
 3a2:	00 c0       	rjmp	.+0      	; 0x3a4 <main+0x180>
 3a4:	00 00       	nop
			_delay_ms(50);
			LCD_write_string("reset");
 3a6:	8b e2       	ldi	r24, 0x2B	; 43
 3a8:	91 e0       	ldi	r25, 0x01	; 1
 3aa:	cf de       	rcall	.-610    	; 0x14a <LCD_write_string>
 3ac:	83 ed       	ldi	r24, 0xD3	; 211
 3ae:	90 e3       	ldi	r25, 0x30	; 48
 3b0:	01 97       	sbiw	r24, 0x01	; 1
 3b2:	f1 f7       	brne	.-4      	; 0x3b0 <main+0x18c>
 3b4:	00 c0       	rjmp	.+0      	; 0x3b6 <main+0x192>
 3b6:	00 00       	nop
 3b8:	d0 92 32 01 	sts	0x0132, r13	; 0x800132 <__data_end>
			_delay_ms(50);
			mm =12;
 3bc:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <ss>
			ss = 0;
 3c0:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <ms>
 3c4:	9f e9       	ldi	r25, 0x9F	; 159
 3c6:	26 e8       	ldi	r18, 0x86	; 134
 3c8:	31 e0       	ldi	r19, 0x01	; 1
 3ca:	91 50       	subi	r25, 0x01	; 1
 3cc:	20 40       	sbci	r18, 0x00	; 0
 3ce:	30 40       	sbci	r19, 0x00	; 0
 3d0:	e1 f7       	brne	.-8      	; 0x3ca <main+0x1a6>
 3d2:	00 c0       	rjmp	.+0      	; 0x3d4 <main+0x1b0>
			ms = 0;
			_delay_ms(500);
			while(state)
 3d4:	00 00       	nop
 3d6:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <state>
 3da:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <state+0x1>
 3de:	89 2b       	or	r24, r25
 3e0:	09 f4       	brne	.+2      	; 0x3e4 <main+0x1c0>
			{
				LCD_clear();
 3e2:	49 cf       	rjmp	.-366    	; 0x276 <main+0x52>
 3e4:	94 de       	rcall	.-728    	; 0x10e <LCD_clear>
 3e6:	83 ed       	ldi	r24, 0xD3	; 211
 3e8:	90 e3       	ldi	r25, 0x30	; 48
 3ea:	01 97       	sbiw	r24, 0x01	; 1
 3ec:	f1 f7       	brne	.-4      	; 0x3ea <main+0x1c6>
 3ee:	00 c0       	rjmp	.+0      	; 0x3f0 <main+0x1cc>
 3f0:	00 00       	nop
				_delay_ms(50);
				LCD_write_string("reset");
 3f2:	8b e2       	ldi	r24, 0x2B	; 43
 3f4:	91 e0       	ldi	r25, 0x01	; 1
 3f6:	a9 de       	rcall	.-686    	; 0x14a <LCD_write_string>
 3f8:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <state>
			_delay_ms(50);
			mm =12;
			ss = 0;
			ms = 0;
			_delay_ms(500);
			while(state)
 3fc:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <state+0x1>
 400:	89 2b       	or	r24, r25
 402:	81 f7       	brne	.-32     	; 0x3e4 <main+0x1c0>
 404:	38 cf       	rjmp	.-400    	; 0x276 <main+0x52>

00000406 <sprintf>:
 406:	0f 93       	push	r16
 408:	1f 93       	push	r17
 40a:	cf 93       	push	r28
 40c:	df 93       	push	r29
 40e:	cd b7       	in	r28, 0x3d	; 61
 410:	de b7       	in	r29, 0x3e	; 62
 412:	2e 97       	sbiw	r28, 0x0e	; 14
 414:	0f b6       	in	r0, 0x3f	; 63
 416:	f8 94       	cli
 418:	de bf       	out	0x3e, r29	; 62
 41a:	0f be       	out	0x3f, r0	; 63
 41c:	cd bf       	out	0x3d, r28	; 61
 41e:	0d 89       	ldd	r16, Y+21	; 0x15
 420:	1e 89       	ldd	r17, Y+22	; 0x16
 422:	86 e0       	ldi	r24, 0x06	; 6
 424:	8c 83       	std	Y+4, r24	; 0x04
 426:	1a 83       	std	Y+2, r17	; 0x02
 428:	09 83       	std	Y+1, r16	; 0x01
 42a:	8f ef       	ldi	r24, 0xFF	; 255
 42c:	9f e7       	ldi	r25, 0x7F	; 127
 42e:	9e 83       	std	Y+6, r25	; 0x06
 430:	8d 83       	std	Y+5, r24	; 0x05
 432:	ae 01       	movw	r20, r28
 434:	47 5e       	subi	r20, 0xE7	; 231
 436:	5f 4f       	sbci	r21, 0xFF	; 255
 438:	6f 89       	ldd	r22, Y+23	; 0x17
 43a:	78 8d       	ldd	r23, Y+24	; 0x18
 43c:	ce 01       	movw	r24, r28
 43e:	01 96       	adiw	r24, 0x01	; 1
 440:	10 d0       	rcall	.+32     	; 0x462 <vfprintf>
 442:	ef 81       	ldd	r30, Y+7	; 0x07
 444:	f8 85       	ldd	r31, Y+8	; 0x08
 446:	e0 0f       	add	r30, r16
 448:	f1 1f       	adc	r31, r17
 44a:	10 82       	st	Z, r1
 44c:	2e 96       	adiw	r28, 0x0e	; 14
 44e:	0f b6       	in	r0, 0x3f	; 63
 450:	f8 94       	cli
 452:	de bf       	out	0x3e, r29	; 62
 454:	0f be       	out	0x3f, r0	; 63
 456:	cd bf       	out	0x3d, r28	; 61
 458:	df 91       	pop	r29
 45a:	cf 91       	pop	r28
 45c:	1f 91       	pop	r17
 45e:	0f 91       	pop	r16
 460:	08 95       	ret

00000462 <vfprintf>:
 462:	2f 92       	push	r2
 464:	3f 92       	push	r3
 466:	4f 92       	push	r4
 468:	5f 92       	push	r5
 46a:	6f 92       	push	r6
 46c:	7f 92       	push	r7
 46e:	8f 92       	push	r8
 470:	9f 92       	push	r9
 472:	af 92       	push	r10
 474:	bf 92       	push	r11
 476:	cf 92       	push	r12
 478:	df 92       	push	r13
 47a:	ef 92       	push	r14
 47c:	ff 92       	push	r15
 47e:	0f 93       	push	r16
 480:	1f 93       	push	r17
 482:	cf 93       	push	r28
 484:	df 93       	push	r29
 486:	cd b7       	in	r28, 0x3d	; 61
 488:	de b7       	in	r29, 0x3e	; 62
 48a:	2b 97       	sbiw	r28, 0x0b	; 11
 48c:	0f b6       	in	r0, 0x3f	; 63
 48e:	f8 94       	cli
 490:	de bf       	out	0x3e, r29	; 62
 492:	0f be       	out	0x3f, r0	; 63
 494:	cd bf       	out	0x3d, r28	; 61
 496:	6c 01       	movw	r12, r24
 498:	7b 01       	movw	r14, r22
 49a:	8a 01       	movw	r16, r20
 49c:	fc 01       	movw	r30, r24
 49e:	17 82       	std	Z+7, r1	; 0x07
 4a0:	16 82       	std	Z+6, r1	; 0x06
 4a2:	83 81       	ldd	r24, Z+3	; 0x03
 4a4:	81 ff       	sbrs	r24, 1
 4a6:	bf c1       	rjmp	.+894    	; 0x826 <vfprintf+0x3c4>
 4a8:	ce 01       	movw	r24, r28
 4aa:	01 96       	adiw	r24, 0x01	; 1
 4ac:	3c 01       	movw	r6, r24
 4ae:	f6 01       	movw	r30, r12
 4b0:	93 81       	ldd	r25, Z+3	; 0x03
 4b2:	f7 01       	movw	r30, r14
 4b4:	93 fd       	sbrc	r25, 3
 4b6:	85 91       	lpm	r24, Z+
 4b8:	93 ff       	sbrs	r25, 3
 4ba:	81 91       	ld	r24, Z+
 4bc:	7f 01       	movw	r14, r30
 4be:	88 23       	and	r24, r24
 4c0:	09 f4       	brne	.+2      	; 0x4c4 <vfprintf+0x62>
 4c2:	ad c1       	rjmp	.+858    	; 0x81e <vfprintf+0x3bc>
 4c4:	85 32       	cpi	r24, 0x25	; 37
 4c6:	39 f4       	brne	.+14     	; 0x4d6 <vfprintf+0x74>
 4c8:	93 fd       	sbrc	r25, 3
 4ca:	85 91       	lpm	r24, Z+
 4cc:	93 ff       	sbrs	r25, 3
 4ce:	81 91       	ld	r24, Z+
 4d0:	7f 01       	movw	r14, r30
 4d2:	85 32       	cpi	r24, 0x25	; 37
 4d4:	21 f4       	brne	.+8      	; 0x4de <vfprintf+0x7c>
 4d6:	b6 01       	movw	r22, r12
 4d8:	90 e0       	ldi	r25, 0x00	; 0
 4da:	d6 d1       	rcall	.+940    	; 0x888 <fputc>
 4dc:	e8 cf       	rjmp	.-48     	; 0x4ae <vfprintf+0x4c>
 4de:	91 2c       	mov	r9, r1
 4e0:	21 2c       	mov	r2, r1
 4e2:	31 2c       	mov	r3, r1
 4e4:	ff e1       	ldi	r31, 0x1F	; 31
 4e6:	f3 15       	cp	r31, r3
 4e8:	d8 f0       	brcs	.+54     	; 0x520 <vfprintf+0xbe>
 4ea:	8b 32       	cpi	r24, 0x2B	; 43
 4ec:	79 f0       	breq	.+30     	; 0x50c <vfprintf+0xaa>
 4ee:	38 f4       	brcc	.+14     	; 0x4fe <vfprintf+0x9c>
 4f0:	80 32       	cpi	r24, 0x20	; 32
 4f2:	79 f0       	breq	.+30     	; 0x512 <vfprintf+0xb0>
 4f4:	83 32       	cpi	r24, 0x23	; 35
 4f6:	a1 f4       	brne	.+40     	; 0x520 <vfprintf+0xbe>
 4f8:	23 2d       	mov	r18, r3
 4fa:	20 61       	ori	r18, 0x10	; 16
 4fc:	1d c0       	rjmp	.+58     	; 0x538 <vfprintf+0xd6>
 4fe:	8d 32       	cpi	r24, 0x2D	; 45
 500:	61 f0       	breq	.+24     	; 0x51a <vfprintf+0xb8>
 502:	80 33       	cpi	r24, 0x30	; 48
 504:	69 f4       	brne	.+26     	; 0x520 <vfprintf+0xbe>
 506:	23 2d       	mov	r18, r3
 508:	21 60       	ori	r18, 0x01	; 1
 50a:	16 c0       	rjmp	.+44     	; 0x538 <vfprintf+0xd6>
 50c:	83 2d       	mov	r24, r3
 50e:	82 60       	ori	r24, 0x02	; 2
 510:	38 2e       	mov	r3, r24
 512:	e3 2d       	mov	r30, r3
 514:	e4 60       	ori	r30, 0x04	; 4
 516:	3e 2e       	mov	r3, r30
 518:	2a c0       	rjmp	.+84     	; 0x56e <vfprintf+0x10c>
 51a:	f3 2d       	mov	r31, r3
 51c:	f8 60       	ori	r31, 0x08	; 8
 51e:	1d c0       	rjmp	.+58     	; 0x55a <vfprintf+0xf8>
 520:	37 fc       	sbrc	r3, 7
 522:	2d c0       	rjmp	.+90     	; 0x57e <vfprintf+0x11c>
 524:	20 ed       	ldi	r18, 0xD0	; 208
 526:	28 0f       	add	r18, r24
 528:	2a 30       	cpi	r18, 0x0A	; 10
 52a:	40 f0       	brcs	.+16     	; 0x53c <vfprintf+0xda>
 52c:	8e 32       	cpi	r24, 0x2E	; 46
 52e:	b9 f4       	brne	.+46     	; 0x55e <vfprintf+0xfc>
 530:	36 fc       	sbrc	r3, 6
 532:	75 c1       	rjmp	.+746    	; 0x81e <vfprintf+0x3bc>
 534:	23 2d       	mov	r18, r3
 536:	20 64       	ori	r18, 0x40	; 64
 538:	32 2e       	mov	r3, r18
 53a:	19 c0       	rjmp	.+50     	; 0x56e <vfprintf+0x10c>
 53c:	36 fe       	sbrs	r3, 6
 53e:	06 c0       	rjmp	.+12     	; 0x54c <vfprintf+0xea>
 540:	8a e0       	ldi	r24, 0x0A	; 10
 542:	98 9e       	mul	r9, r24
 544:	20 0d       	add	r18, r0
 546:	11 24       	eor	r1, r1
 548:	92 2e       	mov	r9, r18
 54a:	11 c0       	rjmp	.+34     	; 0x56e <vfprintf+0x10c>
 54c:	ea e0       	ldi	r30, 0x0A	; 10
 54e:	2e 9e       	mul	r2, r30
 550:	20 0d       	add	r18, r0
 552:	11 24       	eor	r1, r1
 554:	22 2e       	mov	r2, r18
 556:	f3 2d       	mov	r31, r3
 558:	f0 62       	ori	r31, 0x20	; 32
 55a:	3f 2e       	mov	r3, r31
 55c:	08 c0       	rjmp	.+16     	; 0x56e <vfprintf+0x10c>
 55e:	8c 36       	cpi	r24, 0x6C	; 108
 560:	21 f4       	brne	.+8      	; 0x56a <vfprintf+0x108>
 562:	83 2d       	mov	r24, r3
 564:	80 68       	ori	r24, 0x80	; 128
 566:	38 2e       	mov	r3, r24
 568:	02 c0       	rjmp	.+4      	; 0x56e <vfprintf+0x10c>
 56a:	88 36       	cpi	r24, 0x68	; 104
 56c:	41 f4       	brne	.+16     	; 0x57e <vfprintf+0x11c>
 56e:	f7 01       	movw	r30, r14
 570:	93 fd       	sbrc	r25, 3
 572:	85 91       	lpm	r24, Z+
 574:	93 ff       	sbrs	r25, 3
 576:	81 91       	ld	r24, Z+
 578:	7f 01       	movw	r14, r30
 57a:	81 11       	cpse	r24, r1
 57c:	b3 cf       	rjmp	.-154    	; 0x4e4 <vfprintf+0x82>
 57e:	98 2f       	mov	r25, r24
 580:	9f 7d       	andi	r25, 0xDF	; 223
 582:	95 54       	subi	r25, 0x45	; 69
 584:	93 30       	cpi	r25, 0x03	; 3
 586:	28 f4       	brcc	.+10     	; 0x592 <vfprintf+0x130>
 588:	0c 5f       	subi	r16, 0xFC	; 252
 58a:	1f 4f       	sbci	r17, 0xFF	; 255
 58c:	9f e3       	ldi	r25, 0x3F	; 63
 58e:	99 83       	std	Y+1, r25	; 0x01
 590:	0d c0       	rjmp	.+26     	; 0x5ac <vfprintf+0x14a>
 592:	83 36       	cpi	r24, 0x63	; 99
 594:	31 f0       	breq	.+12     	; 0x5a2 <vfprintf+0x140>
 596:	83 37       	cpi	r24, 0x73	; 115
 598:	71 f0       	breq	.+28     	; 0x5b6 <vfprintf+0x154>
 59a:	83 35       	cpi	r24, 0x53	; 83
 59c:	09 f0       	breq	.+2      	; 0x5a0 <vfprintf+0x13e>
 59e:	55 c0       	rjmp	.+170    	; 0x64a <vfprintf+0x1e8>
 5a0:	20 c0       	rjmp	.+64     	; 0x5e2 <vfprintf+0x180>
 5a2:	f8 01       	movw	r30, r16
 5a4:	80 81       	ld	r24, Z
 5a6:	89 83       	std	Y+1, r24	; 0x01
 5a8:	0e 5f       	subi	r16, 0xFE	; 254
 5aa:	1f 4f       	sbci	r17, 0xFF	; 255
 5ac:	88 24       	eor	r8, r8
 5ae:	83 94       	inc	r8
 5b0:	91 2c       	mov	r9, r1
 5b2:	53 01       	movw	r10, r6
 5b4:	12 c0       	rjmp	.+36     	; 0x5da <vfprintf+0x178>
 5b6:	28 01       	movw	r4, r16
 5b8:	f2 e0       	ldi	r31, 0x02	; 2
 5ba:	4f 0e       	add	r4, r31
 5bc:	51 1c       	adc	r5, r1
 5be:	f8 01       	movw	r30, r16
 5c0:	a0 80       	ld	r10, Z
 5c2:	b1 80       	ldd	r11, Z+1	; 0x01
 5c4:	36 fe       	sbrs	r3, 6
 5c6:	03 c0       	rjmp	.+6      	; 0x5ce <vfprintf+0x16c>
 5c8:	69 2d       	mov	r22, r9
 5ca:	70 e0       	ldi	r23, 0x00	; 0
 5cc:	02 c0       	rjmp	.+4      	; 0x5d2 <vfprintf+0x170>
 5ce:	6f ef       	ldi	r22, 0xFF	; 255
 5d0:	7f ef       	ldi	r23, 0xFF	; 255
 5d2:	c5 01       	movw	r24, r10
 5d4:	4e d1       	rcall	.+668    	; 0x872 <strnlen>
 5d6:	4c 01       	movw	r8, r24
 5d8:	82 01       	movw	r16, r4
 5da:	f3 2d       	mov	r31, r3
 5dc:	ff 77       	andi	r31, 0x7F	; 127
 5de:	3f 2e       	mov	r3, r31
 5e0:	15 c0       	rjmp	.+42     	; 0x60c <vfprintf+0x1aa>
 5e2:	28 01       	movw	r4, r16
 5e4:	22 e0       	ldi	r18, 0x02	; 2
 5e6:	42 0e       	add	r4, r18
 5e8:	51 1c       	adc	r5, r1
 5ea:	f8 01       	movw	r30, r16
 5ec:	a0 80       	ld	r10, Z
 5ee:	b1 80       	ldd	r11, Z+1	; 0x01
 5f0:	36 fe       	sbrs	r3, 6
 5f2:	03 c0       	rjmp	.+6      	; 0x5fa <vfprintf+0x198>
 5f4:	69 2d       	mov	r22, r9
 5f6:	70 e0       	ldi	r23, 0x00	; 0
 5f8:	02 c0       	rjmp	.+4      	; 0x5fe <vfprintf+0x19c>
 5fa:	6f ef       	ldi	r22, 0xFF	; 255
 5fc:	7f ef       	ldi	r23, 0xFF	; 255
 5fe:	c5 01       	movw	r24, r10
 600:	2d d1       	rcall	.+602    	; 0x85c <strnlen_P>
 602:	4c 01       	movw	r8, r24
 604:	f3 2d       	mov	r31, r3
 606:	f0 68       	ori	r31, 0x80	; 128
 608:	3f 2e       	mov	r3, r31
 60a:	82 01       	movw	r16, r4
 60c:	33 fc       	sbrc	r3, 3
 60e:	19 c0       	rjmp	.+50     	; 0x642 <vfprintf+0x1e0>
 610:	82 2d       	mov	r24, r2
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	88 16       	cp	r8, r24
 616:	99 06       	cpc	r9, r25
 618:	a0 f4       	brcc	.+40     	; 0x642 <vfprintf+0x1e0>
 61a:	b6 01       	movw	r22, r12
 61c:	80 e2       	ldi	r24, 0x20	; 32
 61e:	90 e0       	ldi	r25, 0x00	; 0
 620:	33 d1       	rcall	.+614    	; 0x888 <fputc>
 622:	2a 94       	dec	r2
 624:	f5 cf       	rjmp	.-22     	; 0x610 <vfprintf+0x1ae>
 626:	f5 01       	movw	r30, r10
 628:	37 fc       	sbrc	r3, 7
 62a:	85 91       	lpm	r24, Z+
 62c:	37 fe       	sbrs	r3, 7
 62e:	81 91       	ld	r24, Z+
 630:	5f 01       	movw	r10, r30
 632:	b6 01       	movw	r22, r12
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	28 d1       	rcall	.+592    	; 0x888 <fputc>
 638:	21 10       	cpse	r2, r1
 63a:	2a 94       	dec	r2
 63c:	21 e0       	ldi	r18, 0x01	; 1
 63e:	82 1a       	sub	r8, r18
 640:	91 08       	sbc	r9, r1
 642:	81 14       	cp	r8, r1
 644:	91 04       	cpc	r9, r1
 646:	79 f7       	brne	.-34     	; 0x626 <vfprintf+0x1c4>
 648:	e1 c0       	rjmp	.+450    	; 0x80c <vfprintf+0x3aa>
 64a:	84 36       	cpi	r24, 0x64	; 100
 64c:	11 f0       	breq	.+4      	; 0x652 <vfprintf+0x1f0>
 64e:	89 36       	cpi	r24, 0x69	; 105
 650:	39 f5       	brne	.+78     	; 0x6a0 <vfprintf+0x23e>
 652:	f8 01       	movw	r30, r16
 654:	37 fe       	sbrs	r3, 7
 656:	07 c0       	rjmp	.+14     	; 0x666 <vfprintf+0x204>
 658:	60 81       	ld	r22, Z
 65a:	71 81       	ldd	r23, Z+1	; 0x01
 65c:	82 81       	ldd	r24, Z+2	; 0x02
 65e:	93 81       	ldd	r25, Z+3	; 0x03
 660:	0c 5f       	subi	r16, 0xFC	; 252
 662:	1f 4f       	sbci	r17, 0xFF	; 255
 664:	08 c0       	rjmp	.+16     	; 0x676 <vfprintf+0x214>
 666:	60 81       	ld	r22, Z
 668:	71 81       	ldd	r23, Z+1	; 0x01
 66a:	07 2e       	mov	r0, r23
 66c:	00 0c       	add	r0, r0
 66e:	88 0b       	sbc	r24, r24
 670:	99 0b       	sbc	r25, r25
 672:	0e 5f       	subi	r16, 0xFE	; 254
 674:	1f 4f       	sbci	r17, 0xFF	; 255
 676:	f3 2d       	mov	r31, r3
 678:	ff 76       	andi	r31, 0x6F	; 111
 67a:	3f 2e       	mov	r3, r31
 67c:	97 ff       	sbrs	r25, 7
 67e:	09 c0       	rjmp	.+18     	; 0x692 <vfprintf+0x230>
 680:	90 95       	com	r25
 682:	80 95       	com	r24
 684:	70 95       	com	r23
 686:	61 95       	neg	r22
 688:	7f 4f       	sbci	r23, 0xFF	; 255
 68a:	8f 4f       	sbci	r24, 0xFF	; 255
 68c:	9f 4f       	sbci	r25, 0xFF	; 255
 68e:	f0 68       	ori	r31, 0x80	; 128
 690:	3f 2e       	mov	r3, r31
 692:	2a e0       	ldi	r18, 0x0A	; 10
 694:	30 e0       	ldi	r19, 0x00	; 0
 696:	a3 01       	movw	r20, r6
 698:	33 d1       	rcall	.+614    	; 0x900 <__ultoa_invert>
 69a:	88 2e       	mov	r8, r24
 69c:	86 18       	sub	r8, r6
 69e:	44 c0       	rjmp	.+136    	; 0x728 <vfprintf+0x2c6>
 6a0:	85 37       	cpi	r24, 0x75	; 117
 6a2:	31 f4       	brne	.+12     	; 0x6b0 <vfprintf+0x24e>
 6a4:	23 2d       	mov	r18, r3
 6a6:	2f 7e       	andi	r18, 0xEF	; 239
 6a8:	b2 2e       	mov	r11, r18
 6aa:	2a e0       	ldi	r18, 0x0A	; 10
 6ac:	30 e0       	ldi	r19, 0x00	; 0
 6ae:	25 c0       	rjmp	.+74     	; 0x6fa <vfprintf+0x298>
 6b0:	93 2d       	mov	r25, r3
 6b2:	99 7f       	andi	r25, 0xF9	; 249
 6b4:	b9 2e       	mov	r11, r25
 6b6:	8f 36       	cpi	r24, 0x6F	; 111
 6b8:	c1 f0       	breq	.+48     	; 0x6ea <vfprintf+0x288>
 6ba:	18 f4       	brcc	.+6      	; 0x6c2 <vfprintf+0x260>
 6bc:	88 35       	cpi	r24, 0x58	; 88
 6be:	79 f0       	breq	.+30     	; 0x6de <vfprintf+0x27c>
 6c0:	ae c0       	rjmp	.+348    	; 0x81e <vfprintf+0x3bc>
 6c2:	80 37       	cpi	r24, 0x70	; 112
 6c4:	19 f0       	breq	.+6      	; 0x6cc <vfprintf+0x26a>
 6c6:	88 37       	cpi	r24, 0x78	; 120
 6c8:	21 f0       	breq	.+8      	; 0x6d2 <vfprintf+0x270>
 6ca:	a9 c0       	rjmp	.+338    	; 0x81e <vfprintf+0x3bc>
 6cc:	e9 2f       	mov	r30, r25
 6ce:	e0 61       	ori	r30, 0x10	; 16
 6d0:	be 2e       	mov	r11, r30
 6d2:	b4 fe       	sbrs	r11, 4
 6d4:	0d c0       	rjmp	.+26     	; 0x6f0 <vfprintf+0x28e>
 6d6:	fb 2d       	mov	r31, r11
 6d8:	f4 60       	ori	r31, 0x04	; 4
 6da:	bf 2e       	mov	r11, r31
 6dc:	09 c0       	rjmp	.+18     	; 0x6f0 <vfprintf+0x28e>
 6de:	34 fe       	sbrs	r3, 4
 6e0:	0a c0       	rjmp	.+20     	; 0x6f6 <vfprintf+0x294>
 6e2:	29 2f       	mov	r18, r25
 6e4:	26 60       	ori	r18, 0x06	; 6
 6e6:	b2 2e       	mov	r11, r18
 6e8:	06 c0       	rjmp	.+12     	; 0x6f6 <vfprintf+0x294>
 6ea:	28 e0       	ldi	r18, 0x08	; 8
 6ec:	30 e0       	ldi	r19, 0x00	; 0
 6ee:	05 c0       	rjmp	.+10     	; 0x6fa <vfprintf+0x298>
 6f0:	20 e1       	ldi	r18, 0x10	; 16
 6f2:	30 e0       	ldi	r19, 0x00	; 0
 6f4:	02 c0       	rjmp	.+4      	; 0x6fa <vfprintf+0x298>
 6f6:	20 e1       	ldi	r18, 0x10	; 16
 6f8:	32 e0       	ldi	r19, 0x02	; 2
 6fa:	f8 01       	movw	r30, r16
 6fc:	b7 fe       	sbrs	r11, 7
 6fe:	07 c0       	rjmp	.+14     	; 0x70e <vfprintf+0x2ac>
 700:	60 81       	ld	r22, Z
 702:	71 81       	ldd	r23, Z+1	; 0x01
 704:	82 81       	ldd	r24, Z+2	; 0x02
 706:	93 81       	ldd	r25, Z+3	; 0x03
 708:	0c 5f       	subi	r16, 0xFC	; 252
 70a:	1f 4f       	sbci	r17, 0xFF	; 255
 70c:	06 c0       	rjmp	.+12     	; 0x71a <vfprintf+0x2b8>
 70e:	60 81       	ld	r22, Z
 710:	71 81       	ldd	r23, Z+1	; 0x01
 712:	80 e0       	ldi	r24, 0x00	; 0
 714:	90 e0       	ldi	r25, 0x00	; 0
 716:	0e 5f       	subi	r16, 0xFE	; 254
 718:	1f 4f       	sbci	r17, 0xFF	; 255
 71a:	a3 01       	movw	r20, r6
 71c:	f1 d0       	rcall	.+482    	; 0x900 <__ultoa_invert>
 71e:	88 2e       	mov	r8, r24
 720:	86 18       	sub	r8, r6
 722:	fb 2d       	mov	r31, r11
 724:	ff 77       	andi	r31, 0x7F	; 127
 726:	3f 2e       	mov	r3, r31
 728:	36 fe       	sbrs	r3, 6
 72a:	0d c0       	rjmp	.+26     	; 0x746 <vfprintf+0x2e4>
 72c:	23 2d       	mov	r18, r3
 72e:	2e 7f       	andi	r18, 0xFE	; 254
 730:	a2 2e       	mov	r10, r18
 732:	89 14       	cp	r8, r9
 734:	58 f4       	brcc	.+22     	; 0x74c <vfprintf+0x2ea>
 736:	34 fe       	sbrs	r3, 4
 738:	0b c0       	rjmp	.+22     	; 0x750 <vfprintf+0x2ee>
 73a:	32 fc       	sbrc	r3, 2
 73c:	09 c0       	rjmp	.+18     	; 0x750 <vfprintf+0x2ee>
 73e:	83 2d       	mov	r24, r3
 740:	8e 7e       	andi	r24, 0xEE	; 238
 742:	a8 2e       	mov	r10, r24
 744:	05 c0       	rjmp	.+10     	; 0x750 <vfprintf+0x2ee>
 746:	b8 2c       	mov	r11, r8
 748:	a3 2c       	mov	r10, r3
 74a:	03 c0       	rjmp	.+6      	; 0x752 <vfprintf+0x2f0>
 74c:	b8 2c       	mov	r11, r8
 74e:	01 c0       	rjmp	.+2      	; 0x752 <vfprintf+0x2f0>
 750:	b9 2c       	mov	r11, r9
 752:	a4 fe       	sbrs	r10, 4
 754:	0f c0       	rjmp	.+30     	; 0x774 <vfprintf+0x312>
 756:	fe 01       	movw	r30, r28
 758:	e8 0d       	add	r30, r8
 75a:	f1 1d       	adc	r31, r1
 75c:	80 81       	ld	r24, Z
 75e:	80 33       	cpi	r24, 0x30	; 48
 760:	21 f4       	brne	.+8      	; 0x76a <vfprintf+0x308>
 762:	9a 2d       	mov	r25, r10
 764:	99 7e       	andi	r25, 0xE9	; 233
 766:	a9 2e       	mov	r10, r25
 768:	09 c0       	rjmp	.+18     	; 0x77c <vfprintf+0x31a>
 76a:	a2 fe       	sbrs	r10, 2
 76c:	06 c0       	rjmp	.+12     	; 0x77a <vfprintf+0x318>
 76e:	b3 94       	inc	r11
 770:	b3 94       	inc	r11
 772:	04 c0       	rjmp	.+8      	; 0x77c <vfprintf+0x31a>
 774:	8a 2d       	mov	r24, r10
 776:	86 78       	andi	r24, 0x86	; 134
 778:	09 f0       	breq	.+2      	; 0x77c <vfprintf+0x31a>
 77a:	b3 94       	inc	r11
 77c:	a3 fc       	sbrc	r10, 3
 77e:	10 c0       	rjmp	.+32     	; 0x7a0 <vfprintf+0x33e>
 780:	a0 fe       	sbrs	r10, 0
 782:	06 c0       	rjmp	.+12     	; 0x790 <vfprintf+0x32e>
 784:	b2 14       	cp	r11, r2
 786:	80 f4       	brcc	.+32     	; 0x7a8 <vfprintf+0x346>
 788:	28 0c       	add	r2, r8
 78a:	92 2c       	mov	r9, r2
 78c:	9b 18       	sub	r9, r11
 78e:	0d c0       	rjmp	.+26     	; 0x7aa <vfprintf+0x348>
 790:	b2 14       	cp	r11, r2
 792:	58 f4       	brcc	.+22     	; 0x7aa <vfprintf+0x348>
 794:	b6 01       	movw	r22, r12
 796:	80 e2       	ldi	r24, 0x20	; 32
 798:	90 e0       	ldi	r25, 0x00	; 0
 79a:	76 d0       	rcall	.+236    	; 0x888 <fputc>
 79c:	b3 94       	inc	r11
 79e:	f8 cf       	rjmp	.-16     	; 0x790 <vfprintf+0x32e>
 7a0:	b2 14       	cp	r11, r2
 7a2:	18 f4       	brcc	.+6      	; 0x7aa <vfprintf+0x348>
 7a4:	2b 18       	sub	r2, r11
 7a6:	02 c0       	rjmp	.+4      	; 0x7ac <vfprintf+0x34a>
 7a8:	98 2c       	mov	r9, r8
 7aa:	21 2c       	mov	r2, r1
 7ac:	a4 fe       	sbrs	r10, 4
 7ae:	0f c0       	rjmp	.+30     	; 0x7ce <vfprintf+0x36c>
 7b0:	b6 01       	movw	r22, r12
 7b2:	80 e3       	ldi	r24, 0x30	; 48
 7b4:	90 e0       	ldi	r25, 0x00	; 0
 7b6:	68 d0       	rcall	.+208    	; 0x888 <fputc>
 7b8:	a2 fe       	sbrs	r10, 2
 7ba:	16 c0       	rjmp	.+44     	; 0x7e8 <vfprintf+0x386>
 7bc:	a1 fc       	sbrc	r10, 1
 7be:	03 c0       	rjmp	.+6      	; 0x7c6 <vfprintf+0x364>
 7c0:	88 e7       	ldi	r24, 0x78	; 120
 7c2:	90 e0       	ldi	r25, 0x00	; 0
 7c4:	02 c0       	rjmp	.+4      	; 0x7ca <vfprintf+0x368>
 7c6:	88 e5       	ldi	r24, 0x58	; 88
 7c8:	90 e0       	ldi	r25, 0x00	; 0
 7ca:	b6 01       	movw	r22, r12
 7cc:	0c c0       	rjmp	.+24     	; 0x7e6 <vfprintf+0x384>
 7ce:	8a 2d       	mov	r24, r10
 7d0:	86 78       	andi	r24, 0x86	; 134
 7d2:	51 f0       	breq	.+20     	; 0x7e8 <vfprintf+0x386>
 7d4:	a1 fe       	sbrs	r10, 1
 7d6:	02 c0       	rjmp	.+4      	; 0x7dc <vfprintf+0x37a>
 7d8:	8b e2       	ldi	r24, 0x2B	; 43
 7da:	01 c0       	rjmp	.+2      	; 0x7de <vfprintf+0x37c>
 7dc:	80 e2       	ldi	r24, 0x20	; 32
 7de:	a7 fc       	sbrc	r10, 7
 7e0:	8d e2       	ldi	r24, 0x2D	; 45
 7e2:	b6 01       	movw	r22, r12
 7e4:	90 e0       	ldi	r25, 0x00	; 0
 7e6:	50 d0       	rcall	.+160    	; 0x888 <fputc>
 7e8:	89 14       	cp	r8, r9
 7ea:	30 f4       	brcc	.+12     	; 0x7f8 <vfprintf+0x396>
 7ec:	b6 01       	movw	r22, r12
 7ee:	80 e3       	ldi	r24, 0x30	; 48
 7f0:	90 e0       	ldi	r25, 0x00	; 0
 7f2:	4a d0       	rcall	.+148    	; 0x888 <fputc>
 7f4:	9a 94       	dec	r9
 7f6:	f8 cf       	rjmp	.-16     	; 0x7e8 <vfprintf+0x386>
 7f8:	8a 94       	dec	r8
 7fa:	f3 01       	movw	r30, r6
 7fc:	e8 0d       	add	r30, r8
 7fe:	f1 1d       	adc	r31, r1
 800:	80 81       	ld	r24, Z
 802:	b6 01       	movw	r22, r12
 804:	90 e0       	ldi	r25, 0x00	; 0
 806:	40 d0       	rcall	.+128    	; 0x888 <fputc>
 808:	81 10       	cpse	r8, r1
 80a:	f6 cf       	rjmp	.-20     	; 0x7f8 <vfprintf+0x396>
 80c:	22 20       	and	r2, r2
 80e:	09 f4       	brne	.+2      	; 0x812 <vfprintf+0x3b0>
 810:	4e ce       	rjmp	.-868    	; 0x4ae <vfprintf+0x4c>
 812:	b6 01       	movw	r22, r12
 814:	80 e2       	ldi	r24, 0x20	; 32
 816:	90 e0       	ldi	r25, 0x00	; 0
 818:	37 d0       	rcall	.+110    	; 0x888 <fputc>
 81a:	2a 94       	dec	r2
 81c:	f7 cf       	rjmp	.-18     	; 0x80c <vfprintf+0x3aa>
 81e:	f6 01       	movw	r30, r12
 820:	86 81       	ldd	r24, Z+6	; 0x06
 822:	97 81       	ldd	r25, Z+7	; 0x07
 824:	02 c0       	rjmp	.+4      	; 0x82a <vfprintf+0x3c8>
 826:	8f ef       	ldi	r24, 0xFF	; 255
 828:	9f ef       	ldi	r25, 0xFF	; 255
 82a:	2b 96       	adiw	r28, 0x0b	; 11
 82c:	0f b6       	in	r0, 0x3f	; 63
 82e:	f8 94       	cli
 830:	de bf       	out	0x3e, r29	; 62
 832:	0f be       	out	0x3f, r0	; 63
 834:	cd bf       	out	0x3d, r28	; 61
 836:	df 91       	pop	r29
 838:	cf 91       	pop	r28
 83a:	1f 91       	pop	r17
 83c:	0f 91       	pop	r16
 83e:	ff 90       	pop	r15
 840:	ef 90       	pop	r14
 842:	df 90       	pop	r13
 844:	cf 90       	pop	r12
 846:	bf 90       	pop	r11
 848:	af 90       	pop	r10
 84a:	9f 90       	pop	r9
 84c:	8f 90       	pop	r8
 84e:	7f 90       	pop	r7
 850:	6f 90       	pop	r6
 852:	5f 90       	pop	r5
 854:	4f 90       	pop	r4
 856:	3f 90       	pop	r3
 858:	2f 90       	pop	r2
 85a:	08 95       	ret

0000085c <strnlen_P>:
 85c:	fc 01       	movw	r30, r24
 85e:	05 90       	lpm	r0, Z+
 860:	61 50       	subi	r22, 0x01	; 1
 862:	70 40       	sbci	r23, 0x00	; 0
 864:	01 10       	cpse	r0, r1
 866:	d8 f7       	brcc	.-10     	; 0x85e <strnlen_P+0x2>
 868:	80 95       	com	r24
 86a:	90 95       	com	r25
 86c:	8e 0f       	add	r24, r30
 86e:	9f 1f       	adc	r25, r31
 870:	08 95       	ret

00000872 <strnlen>:
 872:	fc 01       	movw	r30, r24
 874:	61 50       	subi	r22, 0x01	; 1
 876:	70 40       	sbci	r23, 0x00	; 0
 878:	01 90       	ld	r0, Z+
 87a:	01 10       	cpse	r0, r1
 87c:	d8 f7       	brcc	.-10     	; 0x874 <strnlen+0x2>
 87e:	80 95       	com	r24
 880:	90 95       	com	r25
 882:	8e 0f       	add	r24, r30
 884:	9f 1f       	adc	r25, r31
 886:	08 95       	ret

00000888 <fputc>:
 888:	0f 93       	push	r16
 88a:	1f 93       	push	r17
 88c:	cf 93       	push	r28
 88e:	df 93       	push	r29
 890:	fb 01       	movw	r30, r22
 892:	23 81       	ldd	r18, Z+3	; 0x03
 894:	21 fd       	sbrc	r18, 1
 896:	03 c0       	rjmp	.+6      	; 0x89e <fputc+0x16>
 898:	8f ef       	ldi	r24, 0xFF	; 255
 89a:	9f ef       	ldi	r25, 0xFF	; 255
 89c:	2c c0       	rjmp	.+88     	; 0x8f6 <fputc+0x6e>
 89e:	22 ff       	sbrs	r18, 2
 8a0:	16 c0       	rjmp	.+44     	; 0x8ce <fputc+0x46>
 8a2:	46 81       	ldd	r20, Z+6	; 0x06
 8a4:	57 81       	ldd	r21, Z+7	; 0x07
 8a6:	24 81       	ldd	r18, Z+4	; 0x04
 8a8:	35 81       	ldd	r19, Z+5	; 0x05
 8aa:	42 17       	cp	r20, r18
 8ac:	53 07       	cpc	r21, r19
 8ae:	44 f4       	brge	.+16     	; 0x8c0 <fputc+0x38>
 8b0:	a0 81       	ld	r26, Z
 8b2:	b1 81       	ldd	r27, Z+1	; 0x01
 8b4:	9d 01       	movw	r18, r26
 8b6:	2f 5f       	subi	r18, 0xFF	; 255
 8b8:	3f 4f       	sbci	r19, 0xFF	; 255
 8ba:	31 83       	std	Z+1, r19	; 0x01
 8bc:	20 83       	st	Z, r18
 8be:	8c 93       	st	X, r24
 8c0:	26 81       	ldd	r18, Z+6	; 0x06
 8c2:	37 81       	ldd	r19, Z+7	; 0x07
 8c4:	2f 5f       	subi	r18, 0xFF	; 255
 8c6:	3f 4f       	sbci	r19, 0xFF	; 255
 8c8:	37 83       	std	Z+7, r19	; 0x07
 8ca:	26 83       	std	Z+6, r18	; 0x06
 8cc:	14 c0       	rjmp	.+40     	; 0x8f6 <fputc+0x6e>
 8ce:	8b 01       	movw	r16, r22
 8d0:	ec 01       	movw	r28, r24
 8d2:	fb 01       	movw	r30, r22
 8d4:	00 84       	ldd	r0, Z+8	; 0x08
 8d6:	f1 85       	ldd	r31, Z+9	; 0x09
 8d8:	e0 2d       	mov	r30, r0
 8da:	09 95       	icall
 8dc:	89 2b       	or	r24, r25
 8de:	e1 f6       	brne	.-72     	; 0x898 <fputc+0x10>
 8e0:	d8 01       	movw	r26, r16
 8e2:	16 96       	adiw	r26, 0x06	; 6
 8e4:	8d 91       	ld	r24, X+
 8e6:	9c 91       	ld	r25, X
 8e8:	17 97       	sbiw	r26, 0x07	; 7
 8ea:	01 96       	adiw	r24, 0x01	; 1
 8ec:	17 96       	adiw	r26, 0x07	; 7
 8ee:	9c 93       	st	X, r25
 8f0:	8e 93       	st	-X, r24
 8f2:	16 97       	sbiw	r26, 0x06	; 6
 8f4:	ce 01       	movw	r24, r28
 8f6:	df 91       	pop	r29
 8f8:	cf 91       	pop	r28
 8fa:	1f 91       	pop	r17
 8fc:	0f 91       	pop	r16
 8fe:	08 95       	ret

00000900 <__ultoa_invert>:
 900:	fa 01       	movw	r30, r20
 902:	aa 27       	eor	r26, r26
 904:	28 30       	cpi	r18, 0x08	; 8
 906:	51 f1       	breq	.+84     	; 0x95c <__ultoa_invert+0x5c>
 908:	20 31       	cpi	r18, 0x10	; 16
 90a:	81 f1       	breq	.+96     	; 0x96c <__ultoa_invert+0x6c>
 90c:	e8 94       	clt
 90e:	6f 93       	push	r22
 910:	6e 7f       	andi	r22, 0xFE	; 254
 912:	6e 5f       	subi	r22, 0xFE	; 254
 914:	7f 4f       	sbci	r23, 0xFF	; 255
 916:	8f 4f       	sbci	r24, 0xFF	; 255
 918:	9f 4f       	sbci	r25, 0xFF	; 255
 91a:	af 4f       	sbci	r26, 0xFF	; 255
 91c:	b1 e0       	ldi	r27, 0x01	; 1
 91e:	3e d0       	rcall	.+124    	; 0x99c <__ultoa_invert+0x9c>
 920:	b4 e0       	ldi	r27, 0x04	; 4
 922:	3c d0       	rcall	.+120    	; 0x99c <__ultoa_invert+0x9c>
 924:	67 0f       	add	r22, r23
 926:	78 1f       	adc	r23, r24
 928:	89 1f       	adc	r24, r25
 92a:	9a 1f       	adc	r25, r26
 92c:	a1 1d       	adc	r26, r1
 92e:	68 0f       	add	r22, r24
 930:	79 1f       	adc	r23, r25
 932:	8a 1f       	adc	r24, r26
 934:	91 1d       	adc	r25, r1
 936:	a1 1d       	adc	r26, r1
 938:	6a 0f       	add	r22, r26
 93a:	71 1d       	adc	r23, r1
 93c:	81 1d       	adc	r24, r1
 93e:	91 1d       	adc	r25, r1
 940:	a1 1d       	adc	r26, r1
 942:	20 d0       	rcall	.+64     	; 0x984 <__ultoa_invert+0x84>
 944:	09 f4       	brne	.+2      	; 0x948 <__ultoa_invert+0x48>
 946:	68 94       	set
 948:	3f 91       	pop	r19
 94a:	2a e0       	ldi	r18, 0x0A	; 10
 94c:	26 9f       	mul	r18, r22
 94e:	11 24       	eor	r1, r1
 950:	30 19       	sub	r19, r0
 952:	30 5d       	subi	r19, 0xD0	; 208
 954:	31 93       	st	Z+, r19
 956:	de f6       	brtc	.-74     	; 0x90e <__ultoa_invert+0xe>
 958:	cf 01       	movw	r24, r30
 95a:	08 95       	ret
 95c:	46 2f       	mov	r20, r22
 95e:	47 70       	andi	r20, 0x07	; 7
 960:	40 5d       	subi	r20, 0xD0	; 208
 962:	41 93       	st	Z+, r20
 964:	b3 e0       	ldi	r27, 0x03	; 3
 966:	0f d0       	rcall	.+30     	; 0x986 <__ultoa_invert+0x86>
 968:	c9 f7       	brne	.-14     	; 0x95c <__ultoa_invert+0x5c>
 96a:	f6 cf       	rjmp	.-20     	; 0x958 <__ultoa_invert+0x58>
 96c:	46 2f       	mov	r20, r22
 96e:	4f 70       	andi	r20, 0x0F	; 15
 970:	40 5d       	subi	r20, 0xD0	; 208
 972:	4a 33       	cpi	r20, 0x3A	; 58
 974:	18 f0       	brcs	.+6      	; 0x97c <__ultoa_invert+0x7c>
 976:	49 5d       	subi	r20, 0xD9	; 217
 978:	31 fd       	sbrc	r19, 1
 97a:	40 52       	subi	r20, 0x20	; 32
 97c:	41 93       	st	Z+, r20
 97e:	02 d0       	rcall	.+4      	; 0x984 <__ultoa_invert+0x84>
 980:	a9 f7       	brne	.-22     	; 0x96c <__ultoa_invert+0x6c>
 982:	ea cf       	rjmp	.-44     	; 0x958 <__ultoa_invert+0x58>
 984:	b4 e0       	ldi	r27, 0x04	; 4
 986:	a6 95       	lsr	r26
 988:	97 95       	ror	r25
 98a:	87 95       	ror	r24
 98c:	77 95       	ror	r23
 98e:	67 95       	ror	r22
 990:	ba 95       	dec	r27
 992:	c9 f7       	brne	.-14     	; 0x986 <__ultoa_invert+0x86>
 994:	00 97       	sbiw	r24, 0x00	; 0
 996:	61 05       	cpc	r22, r1
 998:	71 05       	cpc	r23, r1
 99a:	08 95       	ret
 99c:	9b 01       	movw	r18, r22
 99e:	ac 01       	movw	r20, r24
 9a0:	0a 2e       	mov	r0, r26
 9a2:	06 94       	lsr	r0
 9a4:	57 95       	ror	r21
 9a6:	47 95       	ror	r20
 9a8:	37 95       	ror	r19
 9aa:	27 95       	ror	r18
 9ac:	ba 95       	dec	r27
 9ae:	c9 f7       	brne	.-14     	; 0x9a2 <__ultoa_invert+0xa2>
 9b0:	62 0f       	add	r22, r18
 9b2:	73 1f       	adc	r23, r19
 9b4:	84 1f       	adc	r24, r20
 9b6:	95 1f       	adc	r25, r21
 9b8:	a0 1d       	adc	r26, r0
 9ba:	08 95       	ret

000009bc <_exit>:
 9bc:	f8 94       	cli

000009be <__stop_program>:
 9be:	ff cf       	rjmp	.-2      	; 0x9be <__stop_program>
