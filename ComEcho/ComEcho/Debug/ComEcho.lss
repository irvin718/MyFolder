
ComEcho.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800100  000008b6  0000094a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008b6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000032  0080012a  0080012a  00000974  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000974  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009d0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  00000a10  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c7b  00000000  00000000  00000a78  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a25  00000000  00000000  000016f3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000519  00000000  00000000  00002118  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000108  00000000  00000000  00002634  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000524  00000000  00000000  0000273c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000278  00000000  00000000  00002c60  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00002ed8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	fb c0       	rjmp	.+502    	; 0x240 <__vector_18>
  4a:	00 00       	nop
  4c:	ca c0       	rjmp	.+404    	; 0x1e2 <__vector_19>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e6 eb       	ldi	r30, 0xB6	; 182
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 32       	cpi	r26, 0x2A	; 42
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	aa e2       	ldi	r26, 0x2A	; 42
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ac 35       	cpi	r26, 0x5C	; 92
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	02 d0       	rcall	.+4      	; 0xc8 <main>
  c4:	f6 c3       	rjmp	.+2028   	; 0x8b2 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <main>:
int main(void)
{
	char buff;
	int temp, humi;
	//char buff_1[30];
	USART_init(BR9600);		//UBRR=103: 9600,  USART0 Î≥¥Î†àÏù¥Ìä∏ : 115200(UBRR=8), 16MHz
  c8:	87 e6       	ldi	r24, 0x67	; 103
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	43 d0       	rcall	.+134    	; 0x154 <USART_init>
	stdin = stdout = stderr = &usart0_stdio;
  ce:	e6 e5       	ldi	r30, 0x56	; 86
  d0:	f1 e0       	ldi	r31, 0x01	; 1
  d2:	80 e0       	ldi	r24, 0x00	; 0
  d4:	91 e0       	ldi	r25, 0x01	; 1
  d6:	95 83       	std	Z+5, r25	; 0x05
  d8:	84 83       	std	Z+4, r24	; 0x04
  da:	93 83       	std	Z+3, r25	; 0x03
  dc:	82 83       	std	Z+2, r24	; 0x02
  de:	91 83       	std	Z+1, r25	; 0x01
  e0:	80 83       	st	Z, r24
	sei();
  e2:	78 94       	sei
	
	printf("AVR start\n");
  e4:	8e e0       	ldi	r24, 0x0E	; 14
  e6:	91 e0       	ldi	r25, 0x01	; 1
  e8:	07 d1       	rcall	.+526    	; 0x2f8 <puts>
    /* Replace with your application code */
	//DDRB = 0xff;
	DDRD =0xff;
  ea:	8f ef       	ldi	r24, 0xFF	; 255
  ec:	81 bb       	out	0x11, r24	; 17
	int L3_Sts = 0;
	
	//sprintf(temp,"temp Value : %d", 25);
	//sprintf(humi,"humi value : %d", 65);
	
	temp = 26;
  ee:	0a e1       	ldi	r16, 0x1A	; 26
  f0:	10 e0       	ldi	r17, 0x00	; 0
    while (1)
    {
		temp++;
		humi++;
		
		printf("temp,%d,humid,%d\n",temp,humi);
  f2:	0f 2e       	mov	r0, r31
  f4:	f8 e1       	ldi	r31, 0x18	; 24
  f6:	ef 2e       	mov	r14, r31
  f8:	f1 e0       	ldi	r31, 0x01	; 1
  fa:	ff 2e       	mov	r15, r31
  fc:	f0 2d       	mov	r31, r0
		
		
		for(int i = 0; i <8; i++)
		{
			ledsts = 1<<i;
			PORTD = ledsts;
  fe:	c1 e0       	ldi	r28, 0x01	; 1
 100:	d0 e0       	ldi	r29, 0x00	; 0
	int B_Port_data;
	int ledsts;
	
    while (1)
    {
		temp++;
 102:	0f 5f       	subi	r16, 0xFF	; 255
 104:	1f 4f       	sbci	r17, 0xFF	; 255
		humi++;
		
		printf("temp,%d,humid,%d\n",temp,humi);
 106:	c8 01       	movw	r24, r16
 108:	87 96       	adiw	r24, 0x27	; 39
 10a:	9f 93       	push	r25
 10c:	8f 93       	push	r24
 10e:	1f 93       	push	r17
 110:	0f 93       	push	r16
 112:	ff 92       	push	r15
 114:	ef 92       	push	r14
 116:	dd d0       	rcall	.+442    	; 0x2d2 <printf>
 118:	0f 90       	pop	r0
 11a:	0f 90       	pop	r0
 11c:	0f 90       	pop	r0
 11e:	0f 90       	pop	r0
 120:	0f 90       	pop	r0
 122:	0f 90       	pop	r0
		
		
		for(int i = 0; i <8; i++)
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	90 e0       	ldi	r25, 0x00	; 0
		{
			ledsts = 1<<i;
			PORTD = ledsts;
 128:	9e 01       	movw	r18, r28
 12a:	08 2e       	mov	r0, r24
 12c:	02 c0       	rjmp	.+4      	; 0x132 <main+0x6a>
 12e:	22 0f       	add	r18, r18
 130:	33 1f       	adc	r19, r19
 132:	0a 94       	dec	r0
 134:	e2 f7       	brpl	.-8      	; 0x12e <main+0x66>
 136:	22 bb       	out	0x12, r18	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 138:	2f e7       	ldi	r18, 0x7F	; 127
 13a:	3a e1       	ldi	r19, 0x1A	; 26
 13c:	46 e0       	ldi	r20, 0x06	; 6
 13e:	21 50       	subi	r18, 0x01	; 1
 140:	30 40       	sbci	r19, 0x00	; 0
 142:	40 40       	sbci	r20, 0x00	; 0
 144:	e1 f7       	brne	.-8      	; 0x13e <main+0x76>
 146:	00 c0       	rjmp	.+0      	; 0x148 <main+0x80>
 148:	00 00       	nop
		humi++;
		
		printf("temp,%d,humid,%d\n",temp,humi);
		
		
		for(int i = 0; i <8; i++)
 14a:	01 96       	adiw	r24, 0x01	; 1
 14c:	88 30       	cpi	r24, 0x08	; 8
 14e:	91 05       	cpc	r25, r1
 150:	59 f7       	brne	.-42     	; 0x128 <main+0x60>
 152:	d7 cf       	rjmp	.-82     	; 0x102 <main+0x3a>

00000154 <USART_init>:
volatile unsigned char rx0_head=0, rx0_tail=0, tx0_head=0, tx0_tail=0;

// ¿Œ≈Õ∑¥∆Æ USART √ ±‚»≠
void USART_init(unsigned int ubrr_baud)
{
	UCSR0B |= 1<<RXEN0 | 1<<TXEN0 | 1<<RXCIE0;
 154:	9a b1       	in	r25, 0x0a	; 10
 156:	98 69       	ori	r25, 0x98	; 152
 158:	9a b9       	out	0x0a, r25	; 10
	UBRR0H = 0;
 15a:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = ubrr_baud;
 15e:	89 b9       	out	0x09, r24	; 9
 160:	08 95       	ret

00000162 <USART0_send>:

// ¿Œ≈Õ∑¥∆Æø° ¿««— πÆ¿⁄ ¿¸º€ »£√‚
int USART0_send(char data)
{
	// txbuffer[] full, «— ∞≥∂Ûµµ ∫Ù ∂ß±Ó¡ˆ ±‚¥Ÿ∏≤
	while( (tx0_head+1==tx0_tail) || ((tx0_head==LENGTH_TX_BUFFER-1) && (tx0_tail==0)) );
 162:	20 91 2b 01 	lds	r18, 0x012B	; 0x80012b <tx0_head>
 166:	40 91 2a 01 	lds	r20, 0x012A	; 0x80012a <__data_end>
 16a:	30 e0       	ldi	r19, 0x00	; 0
 16c:	2f 5f       	subi	r18, 0xFF	; 255
 16e:	3f 4f       	sbci	r19, 0xFF	; 255
 170:	50 e0       	ldi	r21, 0x00	; 0
 172:	24 17       	cp	r18, r20
 174:	35 07       	cpc	r19, r21
 176:	a9 f3       	breq	.-22     	; 0x162 <USART0_send>
 178:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <tx0_head>
 17c:	93 31       	cpi	r25, 0x13	; 19
 17e:	21 f4       	brne	.+8      	; 0x188 <USART0_send+0x26>
 180:	90 91 2a 01 	lds	r25, 0x012A	; 0x80012a <__data_end>
 184:	99 23       	and	r25, r25
 186:	69 f3       	breq	.-38     	; 0x162 <USART0_send>
	
	tx0_buffer[tx0_head] = data;
 188:	e0 91 2b 01 	lds	r30, 0x012B	; 0x80012b <tx0_head>
 18c:	f0 e0       	ldi	r31, 0x00	; 0
 18e:	ee 5b       	subi	r30, 0xBE	; 190
 190:	fe 4f       	sbci	r31, 0xFE	; 254
 192:	80 83       	st	Z, r24
	tx0_head = (tx0_head==LENGTH_TX_BUFFER-1) ? 0 : tx0_head+1;
 194:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <tx0_head>
 198:	93 31       	cpi	r25, 0x13	; 19
 19a:	21 f0       	breq	.+8      	; 0x1a4 <USART0_send+0x42>
 19c:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <tx0_head>
 1a0:	9f 5f       	subi	r25, 0xFF	; 255
 1a2:	01 c0       	rjmp	.+2      	; 0x1a6 <USART0_send+0x44>
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <tx0_head>
	UCSR0B = UCSR0B | 1<<UDRIE0;	// ∫∏≥æ πÆ¿⁄∞° ¿÷¿∏π«∑Œ UDRE1 ∫ˆ ¿Œ≈Õ∑¥∆Æ »∞º∫»≠
 1aa:	55 9a       	sbi	0x0a, 5	; 10

	return data;
}
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	08 95       	ret

000001b0 <USART0_receive>:

// ¿Œ≈Õ∑¥∆Æø° ¿««— πÆ¿⁄ ºˆΩ≈ »£√‚
int USART0_receive(void)   //printf,scanf ªÁøÎ«œ±‚¿ß«‘
{	unsigned char data;
	
	while( rx0_head==rx0_tail );	// ºˆΩ≈ πÆ¿⁄∞° æ¯¿Ω
 1b0:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <rx0_head>
 1b4:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <rx0_tail>
 1b8:	98 17       	cp	r25, r24
 1ba:	d1 f3       	breq	.-12     	; 0x1b0 <USART0_receive>

	data = rx0_buffer[rx0_tail];
 1bc:	e0 91 2c 01 	lds	r30, 0x012C	; 0x80012c <rx0_tail>
 1c0:	f0 e0       	ldi	r31, 0x00	; 0
 1c2:	e2 5d       	subi	r30, 0xD2	; 210
 1c4:	fe 4f       	sbci	r31, 0xFE	; 254
 1c6:	80 81       	ld	r24, Z
	rx0_tail = (rx0_tail==LENGTH_RX_BUFFER-1) ? 0 : rx0_tail + 1;   //rx_tail ¿Ã LENGTH_RX_BUFFER (7) ¿œ ∞ÊøÏ 0¿ª ¥Î¿‘«—¥Ÿ. ¡∂∞«? ¬¸ : ∞≈¡˛
 1c8:	90 91 2c 01 	lds	r25, 0x012C	; 0x80012c <rx0_tail>
 1cc:	93 31       	cpi	r25, 0x13	; 19
 1ce:	21 f0       	breq	.+8      	; 0x1d8 <USART0_receive+0x28>
 1d0:	90 91 2c 01 	lds	r25, 0x012C	; 0x80012c <rx0_tail>
 1d4:	9f 5f       	subi	r25, 0xFF	; 255
 1d6:	01 c0       	rjmp	.+2      	; 0x1da <USART0_receive+0x2a>
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	90 93 2c 01 	sts	0x012C, r25	; 0x80012c <rx0_tail>
	
	return data;
}
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	08 95       	ret

000001e2 <__vector_19>:

// USART1 UDR empty interrupt service
ISR(USART0_UDRE_vect)
{
 1e2:	1f 92       	push	r1
 1e4:	0f 92       	push	r0
 1e6:	0f b6       	in	r0, 0x3f	; 63
 1e8:	0f 92       	push	r0
 1ea:	11 24       	eor	r1, r1
 1ec:	0b b6       	in	r0, 0x3b	; 59
 1ee:	0f 92       	push	r0
 1f0:	8f 93       	push	r24
 1f2:	9f 93       	push	r25
 1f4:	ef 93       	push	r30
 1f6:	ff 93       	push	r31
	UDR0 = tx0_buffer[tx0_tail];
 1f8:	e0 91 2a 01 	lds	r30, 0x012A	; 0x80012a <__data_end>
 1fc:	f0 e0       	ldi	r31, 0x00	; 0
 1fe:	ee 5b       	subi	r30, 0xBE	; 190
 200:	fe 4f       	sbci	r31, 0xFE	; 254
 202:	80 81       	ld	r24, Z
 204:	8c b9       	out	0x0c, r24	; 12
	tx0_tail = (tx0_tail==LENGTH_TX_BUFFER-1) ? 0 : tx0_tail+1;
 206:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <__data_end>
 20a:	83 31       	cpi	r24, 0x13	; 19
 20c:	21 f0       	breq	.+8      	; 0x216 <__vector_19+0x34>
 20e:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <__data_end>
 212:	8f 5f       	subi	r24, 0xFF	; 255
 214:	01 c0       	rjmp	.+2      	; 0x218 <__vector_19+0x36>
 216:	80 e0       	ldi	r24, 0x00	; 0
 218:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <__data_end>
	
	if( tx0_tail==tx0_head)		// ∫∏≥æ πÆ¿⁄∞° æ¯¿∏∏È UDRE1 ∫ˆ ¿Œ≈Õ∑¥∆Æ ∫Ò»∞º∫»≠
 21c:	90 91 2a 01 	lds	r25, 0x012A	; 0x80012a <__data_end>
 220:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <tx0_head>
 224:	98 13       	cpse	r25, r24
 226:	01 c0       	rjmp	.+2      	; 0x22a <__vector_19+0x48>
	UCSR0B = UCSR0B & ~(1<<UDRIE0);
 228:	55 98       	cbi	0x0a, 5	; 10
}
 22a:	ff 91       	pop	r31
 22c:	ef 91       	pop	r30
 22e:	9f 91       	pop	r25
 230:	8f 91       	pop	r24
 232:	0f 90       	pop	r0
 234:	0b be       	out	0x3b, r0	; 59
 236:	0f 90       	pop	r0
 238:	0f be       	out	0x3f, r0	; 63
 23a:	0f 90       	pop	r0
 23c:	1f 90       	pop	r1
 23e:	18 95       	reti

00000240 <__vector_18>:

// USART1 RXC interrupt service
ISR(USART0_RX_vect)
{	
 240:	1f 92       	push	r1
 242:	0f 92       	push	r0
 244:	0f b6       	in	r0, 0x3f	; 63
 246:	0f 92       	push	r0
 248:	11 24       	eor	r1, r1
 24a:	0b b6       	in	r0, 0x3b	; 59
 24c:	0f 92       	push	r0
 24e:	2f 93       	push	r18
 250:	3f 93       	push	r19
 252:	8f 93       	push	r24
 254:	9f 93       	push	r25
 256:	ef 93       	push	r30
 258:	ff 93       	push	r31
 25a:	cf 93       	push	r28
 25c:	df 93       	push	r29
 25e:	1f 92       	push	r1
 260:	cd b7       	in	r28, 0x3d	; 61
 262:	de b7       	in	r29, 0x3e	; 62
	volatile unsigned char data;
	
	// rx_buffer[] full, ∏∂¡ˆ∏∑ ºˆΩ≈ πÆ¿⁄ πˆ∏≤
	if( (rx0_head+1==rx0_tail) || ((rx0_head==LENGTH_RX_BUFFER-1) && (rx0_tail==0)) ){
 264:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <rx0_head>
 268:	20 91 2c 01 	lds	r18, 0x012C	; 0x80012c <rx0_tail>
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	01 96       	adiw	r24, 0x01	; 1
 270:	30 e0       	ldi	r19, 0x00	; 0
 272:	82 17       	cp	r24, r18
 274:	93 07       	cpc	r25, r19
 276:	41 f0       	breq	.+16     	; 0x288 <__vector_18+0x48>
 278:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <rx0_head>
 27c:	83 31       	cpi	r24, 0x13	; 19
 27e:	39 f4       	brne	.+14     	; 0x28e <__vector_18+0x4e>
 280:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <rx0_tail>
 284:	81 11       	cpse	r24, r1
 286:	03 c0       	rjmp	.+6      	; 0x28e <__vector_18+0x4e>
		data = UDR0;                       //πˆ∏Æ±‚ ¿ß«‘
 288:	8c b1       	in	r24, 0x0c	; 12
 28a:	89 83       	std	Y+1, r24	; 0x01
 28c:	12 c0       	rjmp	.+36     	; 0x2b2 <__vector_18+0x72>
		}else{
		rx0_buffer[rx0_head] = UDR0;                                        //ring buffer
 28e:	e0 91 2d 01 	lds	r30, 0x012D	; 0x80012d <rx0_head>
 292:	f0 e0       	ldi	r31, 0x00	; 0
 294:	8c b1       	in	r24, 0x0c	; 12
 296:	e2 5d       	subi	r30, 0xD2	; 210
 298:	fe 4f       	sbci	r31, 0xFE	; 254
 29a:	80 83       	st	Z, r24
		rx0_head = (rx0_head==LENGTH_RX_BUFFER-1) ? 0 : rx0_head+1;
 29c:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <rx0_head>
 2a0:	83 31       	cpi	r24, 0x13	; 19
 2a2:	21 f0       	breq	.+8      	; 0x2ac <__vector_18+0x6c>
 2a4:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <rx0_head>
 2a8:	8f 5f       	subi	r24, 0xFF	; 255
 2aa:	01 c0       	rjmp	.+2      	; 0x2ae <__vector_18+0x6e>
 2ac:	80 e0       	ldi	r24, 0x00	; 0
 2ae:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <rx0_head>
	}
}
 2b2:	0f 90       	pop	r0
 2b4:	df 91       	pop	r29
 2b6:	cf 91       	pop	r28
 2b8:	ff 91       	pop	r31
 2ba:	ef 91       	pop	r30
 2bc:	9f 91       	pop	r25
 2be:	8f 91       	pop	r24
 2c0:	3f 91       	pop	r19
 2c2:	2f 91       	pop	r18
 2c4:	0f 90       	pop	r0
 2c6:	0b be       	out	0x3b, r0	; 59
 2c8:	0f 90       	pop	r0
 2ca:	0f be       	out	0x3f, r0	; 63
 2cc:	0f 90       	pop	r0
 2ce:	1f 90       	pop	r1
 2d0:	18 95       	reti

000002d2 <printf>:
 2d2:	cf 93       	push	r28
 2d4:	df 93       	push	r29
 2d6:	cd b7       	in	r28, 0x3d	; 61
 2d8:	de b7       	in	r29, 0x3e	; 62
 2da:	ae 01       	movw	r20, r28
 2dc:	4b 5f       	subi	r20, 0xFB	; 251
 2de:	5f 4f       	sbci	r21, 0xFF	; 255
 2e0:	fa 01       	movw	r30, r20
 2e2:	61 91       	ld	r22, Z+
 2e4:	71 91       	ld	r23, Z+
 2e6:	af 01       	movw	r20, r30
 2e8:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <__iob+0x2>
 2ec:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <__iob+0x3>
 2f0:	33 d0       	rcall	.+102    	; 0x358 <vfprintf>
 2f2:	df 91       	pop	r29
 2f4:	cf 91       	pop	r28
 2f6:	08 95       	ret

000002f8 <puts>:
 2f8:	0f 93       	push	r16
 2fa:	1f 93       	push	r17
 2fc:	cf 93       	push	r28
 2fe:	df 93       	push	r29
 300:	e0 91 58 01 	lds	r30, 0x0158	; 0x800158 <__iob+0x2>
 304:	f0 91 59 01 	lds	r31, 0x0159	; 0x800159 <__iob+0x3>
 308:	23 81       	ldd	r18, Z+3	; 0x03
 30a:	21 ff       	sbrs	r18, 1
 30c:	1b c0       	rjmp	.+54     	; 0x344 <puts+0x4c>
 30e:	8c 01       	movw	r16, r24
 310:	d0 e0       	ldi	r29, 0x00	; 0
 312:	c0 e0       	ldi	r28, 0x00	; 0
 314:	f8 01       	movw	r30, r16
 316:	81 91       	ld	r24, Z+
 318:	8f 01       	movw	r16, r30
 31a:	60 91 58 01 	lds	r22, 0x0158	; 0x800158 <__iob+0x2>
 31e:	70 91 59 01 	lds	r23, 0x0159	; 0x800159 <__iob+0x3>
 322:	db 01       	movw	r26, r22
 324:	18 96       	adiw	r26, 0x08	; 8
 326:	ed 91       	ld	r30, X+
 328:	fc 91       	ld	r31, X
 32a:	19 97       	sbiw	r26, 0x09	; 9
 32c:	88 23       	and	r24, r24
 32e:	31 f0       	breq	.+12     	; 0x33c <puts+0x44>
 330:	09 95       	icall
 332:	89 2b       	or	r24, r25
 334:	79 f3       	breq	.-34     	; 0x314 <puts+0x1c>
 336:	df ef       	ldi	r29, 0xFF	; 255
 338:	cf ef       	ldi	r28, 0xFF	; 255
 33a:	ec cf       	rjmp	.-40     	; 0x314 <puts+0x1c>
 33c:	8a e0       	ldi	r24, 0x0A	; 10
 33e:	09 95       	icall
 340:	89 2b       	or	r24, r25
 342:	19 f0       	breq	.+6      	; 0x34a <puts+0x52>
 344:	8f ef       	ldi	r24, 0xFF	; 255
 346:	9f ef       	ldi	r25, 0xFF	; 255
 348:	02 c0       	rjmp	.+4      	; 0x34e <puts+0x56>
 34a:	8d 2f       	mov	r24, r29
 34c:	9c 2f       	mov	r25, r28
 34e:	df 91       	pop	r29
 350:	cf 91       	pop	r28
 352:	1f 91       	pop	r17
 354:	0f 91       	pop	r16
 356:	08 95       	ret

00000358 <vfprintf>:
 358:	2f 92       	push	r2
 35a:	3f 92       	push	r3
 35c:	4f 92       	push	r4
 35e:	5f 92       	push	r5
 360:	6f 92       	push	r6
 362:	7f 92       	push	r7
 364:	8f 92       	push	r8
 366:	9f 92       	push	r9
 368:	af 92       	push	r10
 36a:	bf 92       	push	r11
 36c:	cf 92       	push	r12
 36e:	df 92       	push	r13
 370:	ef 92       	push	r14
 372:	ff 92       	push	r15
 374:	0f 93       	push	r16
 376:	1f 93       	push	r17
 378:	cf 93       	push	r28
 37a:	df 93       	push	r29
 37c:	cd b7       	in	r28, 0x3d	; 61
 37e:	de b7       	in	r29, 0x3e	; 62
 380:	2b 97       	sbiw	r28, 0x0b	; 11
 382:	0f b6       	in	r0, 0x3f	; 63
 384:	f8 94       	cli
 386:	de bf       	out	0x3e, r29	; 62
 388:	0f be       	out	0x3f, r0	; 63
 38a:	cd bf       	out	0x3d, r28	; 61
 38c:	6c 01       	movw	r12, r24
 38e:	7b 01       	movw	r14, r22
 390:	8a 01       	movw	r16, r20
 392:	fc 01       	movw	r30, r24
 394:	17 82       	std	Z+7, r1	; 0x07
 396:	16 82       	std	Z+6, r1	; 0x06
 398:	83 81       	ldd	r24, Z+3	; 0x03
 39a:	81 ff       	sbrs	r24, 1
 39c:	bf c1       	rjmp	.+894    	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
 39e:	ce 01       	movw	r24, r28
 3a0:	01 96       	adiw	r24, 0x01	; 1
 3a2:	3c 01       	movw	r6, r24
 3a4:	f6 01       	movw	r30, r12
 3a6:	93 81       	ldd	r25, Z+3	; 0x03
 3a8:	f7 01       	movw	r30, r14
 3aa:	93 fd       	sbrc	r25, 3
 3ac:	85 91       	lpm	r24, Z+
 3ae:	93 ff       	sbrs	r25, 3
 3b0:	81 91       	ld	r24, Z+
 3b2:	7f 01       	movw	r14, r30
 3b4:	88 23       	and	r24, r24
 3b6:	09 f4       	brne	.+2      	; 0x3ba <vfprintf+0x62>
 3b8:	ad c1       	rjmp	.+858    	; 0x714 <__LOCK_REGION_LENGTH__+0x314>
 3ba:	85 32       	cpi	r24, 0x25	; 37
 3bc:	39 f4       	brne	.+14     	; 0x3cc <vfprintf+0x74>
 3be:	93 fd       	sbrc	r25, 3
 3c0:	85 91       	lpm	r24, Z+
 3c2:	93 ff       	sbrs	r25, 3
 3c4:	81 91       	ld	r24, Z+
 3c6:	7f 01       	movw	r14, r30
 3c8:	85 32       	cpi	r24, 0x25	; 37
 3ca:	21 f4       	brne	.+8      	; 0x3d4 <vfprintf+0x7c>
 3cc:	b6 01       	movw	r22, r12
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	d6 d1       	rcall	.+940    	; 0x77e <fputc>
 3d2:	e8 cf       	rjmp	.-48     	; 0x3a4 <vfprintf+0x4c>
 3d4:	91 2c       	mov	r9, r1
 3d6:	21 2c       	mov	r2, r1
 3d8:	31 2c       	mov	r3, r1
 3da:	ff e1       	ldi	r31, 0x1F	; 31
 3dc:	f3 15       	cp	r31, r3
 3de:	d8 f0       	brcs	.+54     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 3e0:	8b 32       	cpi	r24, 0x2B	; 43
 3e2:	79 f0       	breq	.+30     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3e4:	38 f4       	brcc	.+14     	; 0x3f4 <vfprintf+0x9c>
 3e6:	80 32       	cpi	r24, 0x20	; 32
 3e8:	79 f0       	breq	.+30     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3ea:	83 32       	cpi	r24, 0x23	; 35
 3ec:	a1 f4       	brne	.+40     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 3ee:	23 2d       	mov	r18, r3
 3f0:	20 61       	ori	r18, 0x10	; 16
 3f2:	1d c0       	rjmp	.+58     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 3f4:	8d 32       	cpi	r24, 0x2D	; 45
 3f6:	61 f0       	breq	.+24     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3f8:	80 33       	cpi	r24, 0x30	; 48
 3fa:	69 f4       	brne	.+26     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 3fc:	23 2d       	mov	r18, r3
 3fe:	21 60       	ori	r18, 0x01	; 1
 400:	16 c0       	rjmp	.+44     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 402:	83 2d       	mov	r24, r3
 404:	82 60       	ori	r24, 0x02	; 2
 406:	38 2e       	mov	r3, r24
 408:	e3 2d       	mov	r30, r3
 40a:	e4 60       	ori	r30, 0x04	; 4
 40c:	3e 2e       	mov	r3, r30
 40e:	2a c0       	rjmp	.+84     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 410:	f3 2d       	mov	r31, r3
 412:	f8 60       	ori	r31, 0x08	; 8
 414:	1d c0       	rjmp	.+58     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 416:	37 fc       	sbrc	r3, 7
 418:	2d c0       	rjmp	.+90     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 41a:	20 ed       	ldi	r18, 0xD0	; 208
 41c:	28 0f       	add	r18, r24
 41e:	2a 30       	cpi	r18, 0x0A	; 10
 420:	40 f0       	brcs	.+16     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 422:	8e 32       	cpi	r24, 0x2E	; 46
 424:	b9 f4       	brne	.+46     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 426:	36 fc       	sbrc	r3, 6
 428:	75 c1       	rjmp	.+746    	; 0x714 <__LOCK_REGION_LENGTH__+0x314>
 42a:	23 2d       	mov	r18, r3
 42c:	20 64       	ori	r18, 0x40	; 64
 42e:	32 2e       	mov	r3, r18
 430:	19 c0       	rjmp	.+50     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 432:	36 fe       	sbrs	r3, 6
 434:	06 c0       	rjmp	.+12     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 436:	8a e0       	ldi	r24, 0x0A	; 10
 438:	98 9e       	mul	r9, r24
 43a:	20 0d       	add	r18, r0
 43c:	11 24       	eor	r1, r1
 43e:	92 2e       	mov	r9, r18
 440:	11 c0       	rjmp	.+34     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 442:	ea e0       	ldi	r30, 0x0A	; 10
 444:	2e 9e       	mul	r2, r30
 446:	20 0d       	add	r18, r0
 448:	11 24       	eor	r1, r1
 44a:	22 2e       	mov	r2, r18
 44c:	f3 2d       	mov	r31, r3
 44e:	f0 62       	ori	r31, 0x20	; 32
 450:	3f 2e       	mov	r3, r31
 452:	08 c0       	rjmp	.+16     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 454:	8c 36       	cpi	r24, 0x6C	; 108
 456:	21 f4       	brne	.+8      	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 458:	83 2d       	mov	r24, r3
 45a:	80 68       	ori	r24, 0x80	; 128
 45c:	38 2e       	mov	r3, r24
 45e:	02 c0       	rjmp	.+4      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 460:	88 36       	cpi	r24, 0x68	; 104
 462:	41 f4       	brne	.+16     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 464:	f7 01       	movw	r30, r14
 466:	93 fd       	sbrc	r25, 3
 468:	85 91       	lpm	r24, Z+
 46a:	93 ff       	sbrs	r25, 3
 46c:	81 91       	ld	r24, Z+
 46e:	7f 01       	movw	r14, r30
 470:	81 11       	cpse	r24, r1
 472:	b3 cf       	rjmp	.-154    	; 0x3da <vfprintf+0x82>
 474:	98 2f       	mov	r25, r24
 476:	9f 7d       	andi	r25, 0xDF	; 223
 478:	95 54       	subi	r25, 0x45	; 69
 47a:	93 30       	cpi	r25, 0x03	; 3
 47c:	28 f4       	brcc	.+10     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 47e:	0c 5f       	subi	r16, 0xFC	; 252
 480:	1f 4f       	sbci	r17, 0xFF	; 255
 482:	9f e3       	ldi	r25, 0x3F	; 63
 484:	99 83       	std	Y+1, r25	; 0x01
 486:	0d c0       	rjmp	.+26     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 488:	83 36       	cpi	r24, 0x63	; 99
 48a:	31 f0       	breq	.+12     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 48c:	83 37       	cpi	r24, 0x73	; 115
 48e:	71 f0       	breq	.+28     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 490:	83 35       	cpi	r24, 0x53	; 83
 492:	09 f0       	breq	.+2      	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 494:	55 c0       	rjmp	.+170    	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 496:	20 c0       	rjmp	.+64     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 498:	f8 01       	movw	r30, r16
 49a:	80 81       	ld	r24, Z
 49c:	89 83       	std	Y+1, r24	; 0x01
 49e:	0e 5f       	subi	r16, 0xFE	; 254
 4a0:	1f 4f       	sbci	r17, 0xFF	; 255
 4a2:	88 24       	eor	r8, r8
 4a4:	83 94       	inc	r8
 4a6:	91 2c       	mov	r9, r1
 4a8:	53 01       	movw	r10, r6
 4aa:	12 c0       	rjmp	.+36     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4ac:	28 01       	movw	r4, r16
 4ae:	f2 e0       	ldi	r31, 0x02	; 2
 4b0:	4f 0e       	add	r4, r31
 4b2:	51 1c       	adc	r5, r1
 4b4:	f8 01       	movw	r30, r16
 4b6:	a0 80       	ld	r10, Z
 4b8:	b1 80       	ldd	r11, Z+1	; 0x01
 4ba:	36 fe       	sbrs	r3, 6
 4bc:	03 c0       	rjmp	.+6      	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4be:	69 2d       	mov	r22, r9
 4c0:	70 e0       	ldi	r23, 0x00	; 0
 4c2:	02 c0       	rjmp	.+4      	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4c4:	6f ef       	ldi	r22, 0xFF	; 255
 4c6:	7f ef       	ldi	r23, 0xFF	; 255
 4c8:	c5 01       	movw	r24, r10
 4ca:	4e d1       	rcall	.+668    	; 0x768 <strnlen>
 4cc:	4c 01       	movw	r8, r24
 4ce:	82 01       	movw	r16, r4
 4d0:	f3 2d       	mov	r31, r3
 4d2:	ff 77       	andi	r31, 0x7F	; 127
 4d4:	3f 2e       	mov	r3, r31
 4d6:	15 c0       	rjmp	.+42     	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 4d8:	28 01       	movw	r4, r16
 4da:	22 e0       	ldi	r18, 0x02	; 2
 4dc:	42 0e       	add	r4, r18
 4de:	51 1c       	adc	r5, r1
 4e0:	f8 01       	movw	r30, r16
 4e2:	a0 80       	ld	r10, Z
 4e4:	b1 80       	ldd	r11, Z+1	; 0x01
 4e6:	36 fe       	sbrs	r3, 6
 4e8:	03 c0       	rjmp	.+6      	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 4ea:	69 2d       	mov	r22, r9
 4ec:	70 e0       	ldi	r23, 0x00	; 0
 4ee:	02 c0       	rjmp	.+4      	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4f0:	6f ef       	ldi	r22, 0xFF	; 255
 4f2:	7f ef       	ldi	r23, 0xFF	; 255
 4f4:	c5 01       	movw	r24, r10
 4f6:	2d d1       	rcall	.+602    	; 0x752 <strnlen_P>
 4f8:	4c 01       	movw	r8, r24
 4fa:	f3 2d       	mov	r31, r3
 4fc:	f0 68       	ori	r31, 0x80	; 128
 4fe:	3f 2e       	mov	r3, r31
 500:	82 01       	movw	r16, r4
 502:	33 fc       	sbrc	r3, 3
 504:	19 c0       	rjmp	.+50     	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
 506:	82 2d       	mov	r24, r2
 508:	90 e0       	ldi	r25, 0x00	; 0
 50a:	88 16       	cp	r8, r24
 50c:	99 06       	cpc	r9, r25
 50e:	a0 f4       	brcc	.+40     	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
 510:	b6 01       	movw	r22, r12
 512:	80 e2       	ldi	r24, 0x20	; 32
 514:	90 e0       	ldi	r25, 0x00	; 0
 516:	33 d1       	rcall	.+614    	; 0x77e <fputc>
 518:	2a 94       	dec	r2
 51a:	f5 cf       	rjmp	.-22     	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 51c:	f5 01       	movw	r30, r10
 51e:	37 fc       	sbrc	r3, 7
 520:	85 91       	lpm	r24, Z+
 522:	37 fe       	sbrs	r3, 7
 524:	81 91       	ld	r24, Z+
 526:	5f 01       	movw	r10, r30
 528:	b6 01       	movw	r22, r12
 52a:	90 e0       	ldi	r25, 0x00	; 0
 52c:	28 d1       	rcall	.+592    	; 0x77e <fputc>
 52e:	21 10       	cpse	r2, r1
 530:	2a 94       	dec	r2
 532:	21 e0       	ldi	r18, 0x01	; 1
 534:	82 1a       	sub	r8, r18
 536:	91 08       	sbc	r9, r1
 538:	81 14       	cp	r8, r1
 53a:	91 04       	cpc	r9, r1
 53c:	79 f7       	brne	.-34     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 53e:	e1 c0       	rjmp	.+450    	; 0x702 <__LOCK_REGION_LENGTH__+0x302>
 540:	84 36       	cpi	r24, 0x64	; 100
 542:	11 f0       	breq	.+4      	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
 544:	89 36       	cpi	r24, 0x69	; 105
 546:	39 f5       	brne	.+78     	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 548:	f8 01       	movw	r30, r16
 54a:	37 fe       	sbrs	r3, 7
 54c:	07 c0       	rjmp	.+14     	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 54e:	60 81       	ld	r22, Z
 550:	71 81       	ldd	r23, Z+1	; 0x01
 552:	82 81       	ldd	r24, Z+2	; 0x02
 554:	93 81       	ldd	r25, Z+3	; 0x03
 556:	0c 5f       	subi	r16, 0xFC	; 252
 558:	1f 4f       	sbci	r17, 0xFF	; 255
 55a:	08 c0       	rjmp	.+16     	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 55c:	60 81       	ld	r22, Z
 55e:	71 81       	ldd	r23, Z+1	; 0x01
 560:	07 2e       	mov	r0, r23
 562:	00 0c       	add	r0, r0
 564:	88 0b       	sbc	r24, r24
 566:	99 0b       	sbc	r25, r25
 568:	0e 5f       	subi	r16, 0xFE	; 254
 56a:	1f 4f       	sbci	r17, 0xFF	; 255
 56c:	f3 2d       	mov	r31, r3
 56e:	ff 76       	andi	r31, 0x6F	; 111
 570:	3f 2e       	mov	r3, r31
 572:	97 ff       	sbrs	r25, 7
 574:	09 c0       	rjmp	.+18     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 576:	90 95       	com	r25
 578:	80 95       	com	r24
 57a:	70 95       	com	r23
 57c:	61 95       	neg	r22
 57e:	7f 4f       	sbci	r23, 0xFF	; 255
 580:	8f 4f       	sbci	r24, 0xFF	; 255
 582:	9f 4f       	sbci	r25, 0xFF	; 255
 584:	f0 68       	ori	r31, 0x80	; 128
 586:	3f 2e       	mov	r3, r31
 588:	2a e0       	ldi	r18, 0x0A	; 10
 58a:	30 e0       	ldi	r19, 0x00	; 0
 58c:	a3 01       	movw	r20, r6
 58e:	33 d1       	rcall	.+614    	; 0x7f6 <__ultoa_invert>
 590:	88 2e       	mov	r8, r24
 592:	86 18       	sub	r8, r6
 594:	44 c0       	rjmp	.+136    	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 596:	85 37       	cpi	r24, 0x75	; 117
 598:	31 f4       	brne	.+12     	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
 59a:	23 2d       	mov	r18, r3
 59c:	2f 7e       	andi	r18, 0xEF	; 239
 59e:	b2 2e       	mov	r11, r18
 5a0:	2a e0       	ldi	r18, 0x0A	; 10
 5a2:	30 e0       	ldi	r19, 0x00	; 0
 5a4:	25 c0       	rjmp	.+74     	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 5a6:	93 2d       	mov	r25, r3
 5a8:	99 7f       	andi	r25, 0xF9	; 249
 5aa:	b9 2e       	mov	r11, r25
 5ac:	8f 36       	cpi	r24, 0x6F	; 111
 5ae:	c1 f0       	breq	.+48     	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5b0:	18 f4       	brcc	.+6      	; 0x5b8 <__LOCK_REGION_LENGTH__+0x1b8>
 5b2:	88 35       	cpi	r24, 0x58	; 88
 5b4:	79 f0       	breq	.+30     	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
 5b6:	ae c0       	rjmp	.+348    	; 0x714 <__LOCK_REGION_LENGTH__+0x314>
 5b8:	80 37       	cpi	r24, 0x70	; 112
 5ba:	19 f0       	breq	.+6      	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
 5bc:	88 37       	cpi	r24, 0x78	; 120
 5be:	21 f0       	breq	.+8      	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
 5c0:	a9 c0       	rjmp	.+338    	; 0x714 <__LOCK_REGION_LENGTH__+0x314>
 5c2:	e9 2f       	mov	r30, r25
 5c4:	e0 61       	ori	r30, 0x10	; 16
 5c6:	be 2e       	mov	r11, r30
 5c8:	b4 fe       	sbrs	r11, 4
 5ca:	0d c0       	rjmp	.+26     	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
 5cc:	fb 2d       	mov	r31, r11
 5ce:	f4 60       	ori	r31, 0x04	; 4
 5d0:	bf 2e       	mov	r11, r31
 5d2:	09 c0       	rjmp	.+18     	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
 5d4:	34 fe       	sbrs	r3, 4
 5d6:	0a c0       	rjmp	.+20     	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5d8:	29 2f       	mov	r18, r25
 5da:	26 60       	ori	r18, 0x06	; 6
 5dc:	b2 2e       	mov	r11, r18
 5de:	06 c0       	rjmp	.+12     	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5e0:	28 e0       	ldi	r18, 0x08	; 8
 5e2:	30 e0       	ldi	r19, 0x00	; 0
 5e4:	05 c0       	rjmp	.+10     	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 5e6:	20 e1       	ldi	r18, 0x10	; 16
 5e8:	30 e0       	ldi	r19, 0x00	; 0
 5ea:	02 c0       	rjmp	.+4      	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 5ec:	20 e1       	ldi	r18, 0x10	; 16
 5ee:	32 e0       	ldi	r19, 0x02	; 2
 5f0:	f8 01       	movw	r30, r16
 5f2:	b7 fe       	sbrs	r11, 7
 5f4:	07 c0       	rjmp	.+14     	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 5f6:	60 81       	ld	r22, Z
 5f8:	71 81       	ldd	r23, Z+1	; 0x01
 5fa:	82 81       	ldd	r24, Z+2	; 0x02
 5fc:	93 81       	ldd	r25, Z+3	; 0x03
 5fe:	0c 5f       	subi	r16, 0xFC	; 252
 600:	1f 4f       	sbci	r17, 0xFF	; 255
 602:	06 c0       	rjmp	.+12     	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 604:	60 81       	ld	r22, Z
 606:	71 81       	ldd	r23, Z+1	; 0x01
 608:	80 e0       	ldi	r24, 0x00	; 0
 60a:	90 e0       	ldi	r25, 0x00	; 0
 60c:	0e 5f       	subi	r16, 0xFE	; 254
 60e:	1f 4f       	sbci	r17, 0xFF	; 255
 610:	a3 01       	movw	r20, r6
 612:	f1 d0       	rcall	.+482    	; 0x7f6 <__ultoa_invert>
 614:	88 2e       	mov	r8, r24
 616:	86 18       	sub	r8, r6
 618:	fb 2d       	mov	r31, r11
 61a:	ff 77       	andi	r31, 0x7F	; 127
 61c:	3f 2e       	mov	r3, r31
 61e:	36 fe       	sbrs	r3, 6
 620:	0d c0       	rjmp	.+26     	; 0x63c <__LOCK_REGION_LENGTH__+0x23c>
 622:	23 2d       	mov	r18, r3
 624:	2e 7f       	andi	r18, 0xFE	; 254
 626:	a2 2e       	mov	r10, r18
 628:	89 14       	cp	r8, r9
 62a:	58 f4       	brcc	.+22     	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
 62c:	34 fe       	sbrs	r3, 4
 62e:	0b c0       	rjmp	.+22     	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 630:	32 fc       	sbrc	r3, 2
 632:	09 c0       	rjmp	.+18     	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 634:	83 2d       	mov	r24, r3
 636:	8e 7e       	andi	r24, 0xEE	; 238
 638:	a8 2e       	mov	r10, r24
 63a:	05 c0       	rjmp	.+10     	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 63c:	b8 2c       	mov	r11, r8
 63e:	a3 2c       	mov	r10, r3
 640:	03 c0       	rjmp	.+6      	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
 642:	b8 2c       	mov	r11, r8
 644:	01 c0       	rjmp	.+2      	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
 646:	b9 2c       	mov	r11, r9
 648:	a4 fe       	sbrs	r10, 4
 64a:	0f c0       	rjmp	.+30     	; 0x66a <__LOCK_REGION_LENGTH__+0x26a>
 64c:	fe 01       	movw	r30, r28
 64e:	e8 0d       	add	r30, r8
 650:	f1 1d       	adc	r31, r1
 652:	80 81       	ld	r24, Z
 654:	80 33       	cpi	r24, 0x30	; 48
 656:	21 f4       	brne	.+8      	; 0x660 <__LOCK_REGION_LENGTH__+0x260>
 658:	9a 2d       	mov	r25, r10
 65a:	99 7e       	andi	r25, 0xE9	; 233
 65c:	a9 2e       	mov	r10, r25
 65e:	09 c0       	rjmp	.+18     	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 660:	a2 fe       	sbrs	r10, 2
 662:	06 c0       	rjmp	.+12     	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
 664:	b3 94       	inc	r11
 666:	b3 94       	inc	r11
 668:	04 c0       	rjmp	.+8      	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 66a:	8a 2d       	mov	r24, r10
 66c:	86 78       	andi	r24, 0x86	; 134
 66e:	09 f0       	breq	.+2      	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 670:	b3 94       	inc	r11
 672:	a3 fc       	sbrc	r10, 3
 674:	10 c0       	rjmp	.+32     	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
 676:	a0 fe       	sbrs	r10, 0
 678:	06 c0       	rjmp	.+12     	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
 67a:	b2 14       	cp	r11, r2
 67c:	80 f4       	brcc	.+32     	; 0x69e <__LOCK_REGION_LENGTH__+0x29e>
 67e:	28 0c       	add	r2, r8
 680:	92 2c       	mov	r9, r2
 682:	9b 18       	sub	r9, r11
 684:	0d c0       	rjmp	.+26     	; 0x6a0 <__LOCK_REGION_LENGTH__+0x2a0>
 686:	b2 14       	cp	r11, r2
 688:	58 f4       	brcc	.+22     	; 0x6a0 <__LOCK_REGION_LENGTH__+0x2a0>
 68a:	b6 01       	movw	r22, r12
 68c:	80 e2       	ldi	r24, 0x20	; 32
 68e:	90 e0       	ldi	r25, 0x00	; 0
 690:	76 d0       	rcall	.+236    	; 0x77e <fputc>
 692:	b3 94       	inc	r11
 694:	f8 cf       	rjmp	.-16     	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
 696:	b2 14       	cp	r11, r2
 698:	18 f4       	brcc	.+6      	; 0x6a0 <__LOCK_REGION_LENGTH__+0x2a0>
 69a:	2b 18       	sub	r2, r11
 69c:	02 c0       	rjmp	.+4      	; 0x6a2 <__LOCK_REGION_LENGTH__+0x2a2>
 69e:	98 2c       	mov	r9, r8
 6a0:	21 2c       	mov	r2, r1
 6a2:	a4 fe       	sbrs	r10, 4
 6a4:	0f c0       	rjmp	.+30     	; 0x6c4 <__LOCK_REGION_LENGTH__+0x2c4>
 6a6:	b6 01       	movw	r22, r12
 6a8:	80 e3       	ldi	r24, 0x30	; 48
 6aa:	90 e0       	ldi	r25, 0x00	; 0
 6ac:	68 d0       	rcall	.+208    	; 0x77e <fputc>
 6ae:	a2 fe       	sbrs	r10, 2
 6b0:	16 c0       	rjmp	.+44     	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 6b2:	a1 fc       	sbrc	r10, 1
 6b4:	03 c0       	rjmp	.+6      	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
 6b6:	88 e7       	ldi	r24, 0x78	; 120
 6b8:	90 e0       	ldi	r25, 0x00	; 0
 6ba:	02 c0       	rjmp	.+4      	; 0x6c0 <__LOCK_REGION_LENGTH__+0x2c0>
 6bc:	88 e5       	ldi	r24, 0x58	; 88
 6be:	90 e0       	ldi	r25, 0x00	; 0
 6c0:	b6 01       	movw	r22, r12
 6c2:	0c c0       	rjmp	.+24     	; 0x6dc <__LOCK_REGION_LENGTH__+0x2dc>
 6c4:	8a 2d       	mov	r24, r10
 6c6:	86 78       	andi	r24, 0x86	; 134
 6c8:	51 f0       	breq	.+20     	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 6ca:	a1 fe       	sbrs	r10, 1
 6cc:	02 c0       	rjmp	.+4      	; 0x6d2 <__LOCK_REGION_LENGTH__+0x2d2>
 6ce:	8b e2       	ldi	r24, 0x2B	; 43
 6d0:	01 c0       	rjmp	.+2      	; 0x6d4 <__LOCK_REGION_LENGTH__+0x2d4>
 6d2:	80 e2       	ldi	r24, 0x20	; 32
 6d4:	a7 fc       	sbrc	r10, 7
 6d6:	8d e2       	ldi	r24, 0x2D	; 45
 6d8:	b6 01       	movw	r22, r12
 6da:	90 e0       	ldi	r25, 0x00	; 0
 6dc:	50 d0       	rcall	.+160    	; 0x77e <fputc>
 6de:	89 14       	cp	r8, r9
 6e0:	30 f4       	brcc	.+12     	; 0x6ee <__LOCK_REGION_LENGTH__+0x2ee>
 6e2:	b6 01       	movw	r22, r12
 6e4:	80 e3       	ldi	r24, 0x30	; 48
 6e6:	90 e0       	ldi	r25, 0x00	; 0
 6e8:	4a d0       	rcall	.+148    	; 0x77e <fputc>
 6ea:	9a 94       	dec	r9
 6ec:	f8 cf       	rjmp	.-16     	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 6ee:	8a 94       	dec	r8
 6f0:	f3 01       	movw	r30, r6
 6f2:	e8 0d       	add	r30, r8
 6f4:	f1 1d       	adc	r31, r1
 6f6:	80 81       	ld	r24, Z
 6f8:	b6 01       	movw	r22, r12
 6fa:	90 e0       	ldi	r25, 0x00	; 0
 6fc:	40 d0       	rcall	.+128    	; 0x77e <fputc>
 6fe:	81 10       	cpse	r8, r1
 700:	f6 cf       	rjmp	.-20     	; 0x6ee <__LOCK_REGION_LENGTH__+0x2ee>
 702:	22 20       	and	r2, r2
 704:	09 f4       	brne	.+2      	; 0x708 <__LOCK_REGION_LENGTH__+0x308>
 706:	4e ce       	rjmp	.-868    	; 0x3a4 <vfprintf+0x4c>
 708:	b6 01       	movw	r22, r12
 70a:	80 e2       	ldi	r24, 0x20	; 32
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	37 d0       	rcall	.+110    	; 0x77e <fputc>
 710:	2a 94       	dec	r2
 712:	f7 cf       	rjmp	.-18     	; 0x702 <__LOCK_REGION_LENGTH__+0x302>
 714:	f6 01       	movw	r30, r12
 716:	86 81       	ldd	r24, Z+6	; 0x06
 718:	97 81       	ldd	r25, Z+7	; 0x07
 71a:	02 c0       	rjmp	.+4      	; 0x720 <__LOCK_REGION_LENGTH__+0x320>
 71c:	8f ef       	ldi	r24, 0xFF	; 255
 71e:	9f ef       	ldi	r25, 0xFF	; 255
 720:	2b 96       	adiw	r28, 0x0b	; 11
 722:	0f b6       	in	r0, 0x3f	; 63
 724:	f8 94       	cli
 726:	de bf       	out	0x3e, r29	; 62
 728:	0f be       	out	0x3f, r0	; 63
 72a:	cd bf       	out	0x3d, r28	; 61
 72c:	df 91       	pop	r29
 72e:	cf 91       	pop	r28
 730:	1f 91       	pop	r17
 732:	0f 91       	pop	r16
 734:	ff 90       	pop	r15
 736:	ef 90       	pop	r14
 738:	df 90       	pop	r13
 73a:	cf 90       	pop	r12
 73c:	bf 90       	pop	r11
 73e:	af 90       	pop	r10
 740:	9f 90       	pop	r9
 742:	8f 90       	pop	r8
 744:	7f 90       	pop	r7
 746:	6f 90       	pop	r6
 748:	5f 90       	pop	r5
 74a:	4f 90       	pop	r4
 74c:	3f 90       	pop	r3
 74e:	2f 90       	pop	r2
 750:	08 95       	ret

00000752 <strnlen_P>:
 752:	fc 01       	movw	r30, r24
 754:	05 90       	lpm	r0, Z+
 756:	61 50       	subi	r22, 0x01	; 1
 758:	70 40       	sbci	r23, 0x00	; 0
 75a:	01 10       	cpse	r0, r1
 75c:	d8 f7       	brcc	.-10     	; 0x754 <strnlen_P+0x2>
 75e:	80 95       	com	r24
 760:	90 95       	com	r25
 762:	8e 0f       	add	r24, r30
 764:	9f 1f       	adc	r25, r31
 766:	08 95       	ret

00000768 <strnlen>:
 768:	fc 01       	movw	r30, r24
 76a:	61 50       	subi	r22, 0x01	; 1
 76c:	70 40       	sbci	r23, 0x00	; 0
 76e:	01 90       	ld	r0, Z+
 770:	01 10       	cpse	r0, r1
 772:	d8 f7       	brcc	.-10     	; 0x76a <strnlen+0x2>
 774:	80 95       	com	r24
 776:	90 95       	com	r25
 778:	8e 0f       	add	r24, r30
 77a:	9f 1f       	adc	r25, r31
 77c:	08 95       	ret

0000077e <fputc>:
 77e:	0f 93       	push	r16
 780:	1f 93       	push	r17
 782:	cf 93       	push	r28
 784:	df 93       	push	r29
 786:	fb 01       	movw	r30, r22
 788:	23 81       	ldd	r18, Z+3	; 0x03
 78a:	21 fd       	sbrc	r18, 1
 78c:	03 c0       	rjmp	.+6      	; 0x794 <fputc+0x16>
 78e:	8f ef       	ldi	r24, 0xFF	; 255
 790:	9f ef       	ldi	r25, 0xFF	; 255
 792:	2c c0       	rjmp	.+88     	; 0x7ec <fputc+0x6e>
 794:	22 ff       	sbrs	r18, 2
 796:	16 c0       	rjmp	.+44     	; 0x7c4 <fputc+0x46>
 798:	46 81       	ldd	r20, Z+6	; 0x06
 79a:	57 81       	ldd	r21, Z+7	; 0x07
 79c:	24 81       	ldd	r18, Z+4	; 0x04
 79e:	35 81       	ldd	r19, Z+5	; 0x05
 7a0:	42 17       	cp	r20, r18
 7a2:	53 07       	cpc	r21, r19
 7a4:	44 f4       	brge	.+16     	; 0x7b6 <fputc+0x38>
 7a6:	a0 81       	ld	r26, Z
 7a8:	b1 81       	ldd	r27, Z+1	; 0x01
 7aa:	9d 01       	movw	r18, r26
 7ac:	2f 5f       	subi	r18, 0xFF	; 255
 7ae:	3f 4f       	sbci	r19, 0xFF	; 255
 7b0:	31 83       	std	Z+1, r19	; 0x01
 7b2:	20 83       	st	Z, r18
 7b4:	8c 93       	st	X, r24
 7b6:	26 81       	ldd	r18, Z+6	; 0x06
 7b8:	37 81       	ldd	r19, Z+7	; 0x07
 7ba:	2f 5f       	subi	r18, 0xFF	; 255
 7bc:	3f 4f       	sbci	r19, 0xFF	; 255
 7be:	37 83       	std	Z+7, r19	; 0x07
 7c0:	26 83       	std	Z+6, r18	; 0x06
 7c2:	14 c0       	rjmp	.+40     	; 0x7ec <fputc+0x6e>
 7c4:	8b 01       	movw	r16, r22
 7c6:	ec 01       	movw	r28, r24
 7c8:	fb 01       	movw	r30, r22
 7ca:	00 84       	ldd	r0, Z+8	; 0x08
 7cc:	f1 85       	ldd	r31, Z+9	; 0x09
 7ce:	e0 2d       	mov	r30, r0
 7d0:	09 95       	icall
 7d2:	89 2b       	or	r24, r25
 7d4:	e1 f6       	brne	.-72     	; 0x78e <fputc+0x10>
 7d6:	d8 01       	movw	r26, r16
 7d8:	16 96       	adiw	r26, 0x06	; 6
 7da:	8d 91       	ld	r24, X+
 7dc:	9c 91       	ld	r25, X
 7de:	17 97       	sbiw	r26, 0x07	; 7
 7e0:	01 96       	adiw	r24, 0x01	; 1
 7e2:	17 96       	adiw	r26, 0x07	; 7
 7e4:	9c 93       	st	X, r25
 7e6:	8e 93       	st	-X, r24
 7e8:	16 97       	sbiw	r26, 0x06	; 6
 7ea:	ce 01       	movw	r24, r28
 7ec:	df 91       	pop	r29
 7ee:	cf 91       	pop	r28
 7f0:	1f 91       	pop	r17
 7f2:	0f 91       	pop	r16
 7f4:	08 95       	ret

000007f6 <__ultoa_invert>:
 7f6:	fa 01       	movw	r30, r20
 7f8:	aa 27       	eor	r26, r26
 7fa:	28 30       	cpi	r18, 0x08	; 8
 7fc:	51 f1       	breq	.+84     	; 0x852 <__ultoa_invert+0x5c>
 7fe:	20 31       	cpi	r18, 0x10	; 16
 800:	81 f1       	breq	.+96     	; 0x862 <__ultoa_invert+0x6c>
 802:	e8 94       	clt
 804:	6f 93       	push	r22
 806:	6e 7f       	andi	r22, 0xFE	; 254
 808:	6e 5f       	subi	r22, 0xFE	; 254
 80a:	7f 4f       	sbci	r23, 0xFF	; 255
 80c:	8f 4f       	sbci	r24, 0xFF	; 255
 80e:	9f 4f       	sbci	r25, 0xFF	; 255
 810:	af 4f       	sbci	r26, 0xFF	; 255
 812:	b1 e0       	ldi	r27, 0x01	; 1
 814:	3e d0       	rcall	.+124    	; 0x892 <__ultoa_invert+0x9c>
 816:	b4 e0       	ldi	r27, 0x04	; 4
 818:	3c d0       	rcall	.+120    	; 0x892 <__ultoa_invert+0x9c>
 81a:	67 0f       	add	r22, r23
 81c:	78 1f       	adc	r23, r24
 81e:	89 1f       	adc	r24, r25
 820:	9a 1f       	adc	r25, r26
 822:	a1 1d       	adc	r26, r1
 824:	68 0f       	add	r22, r24
 826:	79 1f       	adc	r23, r25
 828:	8a 1f       	adc	r24, r26
 82a:	91 1d       	adc	r25, r1
 82c:	a1 1d       	adc	r26, r1
 82e:	6a 0f       	add	r22, r26
 830:	71 1d       	adc	r23, r1
 832:	81 1d       	adc	r24, r1
 834:	91 1d       	adc	r25, r1
 836:	a1 1d       	adc	r26, r1
 838:	20 d0       	rcall	.+64     	; 0x87a <__ultoa_invert+0x84>
 83a:	09 f4       	brne	.+2      	; 0x83e <__ultoa_invert+0x48>
 83c:	68 94       	set
 83e:	3f 91       	pop	r19
 840:	2a e0       	ldi	r18, 0x0A	; 10
 842:	26 9f       	mul	r18, r22
 844:	11 24       	eor	r1, r1
 846:	30 19       	sub	r19, r0
 848:	30 5d       	subi	r19, 0xD0	; 208
 84a:	31 93       	st	Z+, r19
 84c:	de f6       	brtc	.-74     	; 0x804 <__ultoa_invert+0xe>
 84e:	cf 01       	movw	r24, r30
 850:	08 95       	ret
 852:	46 2f       	mov	r20, r22
 854:	47 70       	andi	r20, 0x07	; 7
 856:	40 5d       	subi	r20, 0xD0	; 208
 858:	41 93       	st	Z+, r20
 85a:	b3 e0       	ldi	r27, 0x03	; 3
 85c:	0f d0       	rcall	.+30     	; 0x87c <__ultoa_invert+0x86>
 85e:	c9 f7       	brne	.-14     	; 0x852 <__ultoa_invert+0x5c>
 860:	f6 cf       	rjmp	.-20     	; 0x84e <__ultoa_invert+0x58>
 862:	46 2f       	mov	r20, r22
 864:	4f 70       	andi	r20, 0x0F	; 15
 866:	40 5d       	subi	r20, 0xD0	; 208
 868:	4a 33       	cpi	r20, 0x3A	; 58
 86a:	18 f0       	brcs	.+6      	; 0x872 <__ultoa_invert+0x7c>
 86c:	49 5d       	subi	r20, 0xD9	; 217
 86e:	31 fd       	sbrc	r19, 1
 870:	40 52       	subi	r20, 0x20	; 32
 872:	41 93       	st	Z+, r20
 874:	02 d0       	rcall	.+4      	; 0x87a <__ultoa_invert+0x84>
 876:	a9 f7       	brne	.-22     	; 0x862 <__ultoa_invert+0x6c>
 878:	ea cf       	rjmp	.-44     	; 0x84e <__ultoa_invert+0x58>
 87a:	b4 e0       	ldi	r27, 0x04	; 4
 87c:	a6 95       	lsr	r26
 87e:	97 95       	ror	r25
 880:	87 95       	ror	r24
 882:	77 95       	ror	r23
 884:	67 95       	ror	r22
 886:	ba 95       	dec	r27
 888:	c9 f7       	brne	.-14     	; 0x87c <__ultoa_invert+0x86>
 88a:	00 97       	sbiw	r24, 0x00	; 0
 88c:	61 05       	cpc	r22, r1
 88e:	71 05       	cpc	r23, r1
 890:	08 95       	ret
 892:	9b 01       	movw	r18, r22
 894:	ac 01       	movw	r20, r24
 896:	0a 2e       	mov	r0, r26
 898:	06 94       	lsr	r0
 89a:	57 95       	ror	r21
 89c:	47 95       	ror	r20
 89e:	37 95       	ror	r19
 8a0:	27 95       	ror	r18
 8a2:	ba 95       	dec	r27
 8a4:	c9 f7       	brne	.-14     	; 0x898 <__ultoa_invert+0xa2>
 8a6:	62 0f       	add	r22, r18
 8a8:	73 1f       	adc	r23, r19
 8aa:	84 1f       	adc	r24, r20
 8ac:	95 1f       	adc	r25, r21
 8ae:	a0 1d       	adc	r26, r0
 8b0:	08 95       	ret

000008b2 <_exit>:
 8b2:	f8 94       	cli

000008b4 <__stop_program>:
 8b4:	ff cf       	rjmp	.-2      	; 0x8b4 <__stop_program>
