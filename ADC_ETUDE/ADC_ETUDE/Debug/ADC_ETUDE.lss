
ADC_ETUDE.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007a  00800100  00000c76  00000d0a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c76  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080017a  0080017a  00000d84  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d84  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000de0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  00000e20  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001ad9  00000000  00000000  00000f68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d1d  00000000  00000000  00002a41  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c60  00000000  00000000  0000375e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002d0  00000000  00000000  000043c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000070b  00000000  00000000  00004690  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000f61  00000000  00000000  00004d9b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000108  00000000  00000000  00005cfc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e6 e7       	ldi	r30, 0x76	; 118
  a0:	fc e0       	ldi	r31, 0x0C	; 12
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 37       	cpi	r26, 0x7A	; 122
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	aa e7       	ldi	r26, 0x7A	; 122
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 38       	cpi	r26, 0x80	; 128
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	6b d1       	rcall	.+726    	; 0x39a <main>
  c4:	d6 c5       	rjmp	.+2988   	; 0xc72 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <I2C_init>:

//#define START 0x08
//#define SLA_W (0x27<<1)

void I2C_init(unsigned int baud){
	TWBR = baud;
  c8:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
  cc:	08 95       	ret

000000ce <I2C_start>:
}

void I2C_start(void)
{
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
  ce:	84 ea       	ldi	r24, 0xA4	; 164
  d0:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while (!(TWCR & (1<<TWINT)));  // 시작 완료 대기
  d4:	e4 e7       	ldi	r30, 0x74	; 116
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	80 81       	ld	r24, Z
  da:	88 23       	and	r24, r24
  dc:	ec f7       	brge	.-6      	; 0xd8 <I2C_start+0xa>
}
  de:	08 95       	ret

000000e0 <I2C_transmit>:

void I2C_transmit(uint8_t data)
{
	TWDR = data;
  e0:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = (1<<TWINT) | (1<<TWEN);
  e4:	84 e8       	ldi	r24, 0x84	; 132
  e6:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while (!(TWCR & (1<<TWINT)));
  ea:	e4 e7       	ldi	r30, 0x74	; 116
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	80 81       	ld	r24, Z
  f0:	88 23       	and	r24, r24
  f2:	ec f7       	brge	.-6      	; 0xee <I2C_transmit+0xe>
}
  f4:	08 95       	ret

000000f6 <I2C_write_byte>:

void I2C_write_byte(uint8_t address, uint8_t data)
{
  f6:	cf 93       	push	r28
  f8:	df 93       	push	r29
  fa:	d8 2f       	mov	r29, r24
  fc:	c6 2f       	mov	r28, r22
	I2C_start();
  fe:	e7 df       	rcall	.-50     	; 0xce <I2C_start>
	I2C_transmit(address);
 100:	8d 2f       	mov	r24, r29
 102:	ee df       	rcall	.-36     	; 0xe0 <I2C_transmit>
	I2C_transmit(data);
 104:	8c 2f       	mov	r24, r28
 106:	ec df       	rcall	.-40     	; 0xe0 <I2C_transmit>
 108:	84 e9       	ldi	r24, 0x94	; 148
	I2C_stop();
}

void I2C_stop(void)
{
	TWCR = (1<<TWINT)|(1<<TWEN)| (1<<TWSTO);
 10a:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 10e:	df 91       	pop	r29
{
	I2C_start();
	I2C_transmit(address);
	I2C_transmit(data);
	I2C_stop();
}
 110:	cf 91       	pop	r28
 112:	08 95       	ret

00000114 <I2C_LCD_write_data>:
 114:	ef 92       	push	r14
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 116:	ff 92       	push	r15
 118:	0f 93       	push	r16
 11a:	1f 93       	push	r17
 11c:	cf 93       	push	r28
 11e:	df 93       	push	r29
 120:	00 d0       	rcall	.+0      	; 0x122 <I2C_LCD_write_data+0xe>
 122:	00 d0       	rcall	.+0      	; 0x124 <I2C_LCD_write_data+0x10>
 124:	cd b7       	in	r28, 0x3d	; 61
 126:	de b7       	in	r29, 0x3e	; 62
 128:	28 2f       	mov	r18, r24
 12a:	20 7f       	andi	r18, 0xF0	; 240
 12c:	30 e1       	ldi	r19, 0x10	; 16
 12e:	83 9f       	mul	r24, r19
 130:	c0 01       	movw	r24, r0
 132:	11 24       	eor	r1, r1
 134:	92 2f       	mov	r25, r18
 136:	9d 60       	ori	r25, 0x0D	; 13
 138:	99 83       	std	Y+1, r25	; 0x01
 13a:	29 60       	ori	r18, 0x09	; 9
 13c:	2a 83       	std	Y+2, r18	; 0x02
 13e:	98 2f       	mov	r25, r24
 140:	9d 60       	ori	r25, 0x0D	; 13
 142:	9b 83       	std	Y+3, r25	; 0x03
 144:	89 60       	ori	r24, 0x09	; 9
 146:	8c 83       	std	Y+4, r24	; 0x04
 148:	8e 01       	movw	r16, r28
 14a:	0f 5f       	subi	r16, 0xFF	; 255
 14c:	1f 4f       	sbci	r17, 0xFF	; 255
 14e:	7e 01       	movw	r14, r28
 150:	85 e0       	ldi	r24, 0x05	; 5
 152:	e8 0e       	add	r14, r24
 154:	f1 1c       	adc	r15, r1
 156:	f8 01       	movw	r30, r16
 158:	61 91       	ld	r22, Z+
 15a:	8f 01       	movw	r16, r30
 15c:	8e e4       	ldi	r24, 0x4E	; 78
 15e:	cb df       	rcall	.-106    	; 0xf6 <I2C_write_byte>
 160:	0e 15       	cp	r16, r14
 162:	1f 05       	cpc	r17, r15
 164:	c1 f7       	brne	.-16     	; 0x156 <I2C_LCD_write_data+0x42>
 166:	0f 90       	pop	r0
 168:	0f 90       	pop	r0
 16a:	0f 90       	pop	r0
 16c:	0f 90       	pop	r0
 16e:	df 91       	pop	r29
 170:	cf 91       	pop	r28
 172:	1f 91       	pop	r17
 174:	0f 91       	pop	r16
 176:	ff 90       	pop	r15
 178:	ef 90       	pop	r14
 17a:	08 95       	ret

0000017c <I2C_LCD_write_command>:
 17c:	ef 92       	push	r14
 17e:	ff 92       	push	r15
 180:	0f 93       	push	r16
 182:	1f 93       	push	r17
 184:	cf 93       	push	r28
 186:	df 93       	push	r29
 188:	00 d0       	rcall	.+0      	; 0x18a <I2C_LCD_write_command+0xe>
 18a:	00 d0       	rcall	.+0      	; 0x18c <I2C_LCD_write_command+0x10>
 18c:	cd b7       	in	r28, 0x3d	; 61
 18e:	de b7       	in	r29, 0x3e	; 62
 190:	28 2f       	mov	r18, r24
 192:	20 7f       	andi	r18, 0xF0	; 240
 194:	30 e1       	ldi	r19, 0x10	; 16
 196:	83 9f       	mul	r24, r19
 198:	c0 01       	movw	r24, r0
 19a:	11 24       	eor	r1, r1
 19c:	92 2f       	mov	r25, r18
 19e:	9c 60       	ori	r25, 0x0C	; 12
 1a0:	99 83       	std	Y+1, r25	; 0x01
 1a2:	28 60       	ori	r18, 0x08	; 8
 1a4:	2a 83       	std	Y+2, r18	; 0x02
 1a6:	98 2f       	mov	r25, r24
 1a8:	9c 60       	ori	r25, 0x0C	; 12
 1aa:	9b 83       	std	Y+3, r25	; 0x03
 1ac:	88 60       	ori	r24, 0x08	; 8
 1ae:	8c 83       	std	Y+4, r24	; 0x04
 1b0:	8e 01       	movw	r16, r28
 1b2:	0f 5f       	subi	r16, 0xFF	; 255
 1b4:	1f 4f       	sbci	r17, 0xFF	; 255
 1b6:	7e 01       	movw	r14, r28
 1b8:	85 e0       	ldi	r24, 0x05	; 5
 1ba:	e8 0e       	add	r14, r24
 1bc:	f1 1c       	adc	r15, r1
 1be:	f8 01       	movw	r30, r16
 1c0:	61 91       	ld	r22, Z+
 1c2:	8f 01       	movw	r16, r30
 1c4:	8e e4       	ldi	r24, 0x4E	; 78
 1c6:	97 df       	rcall	.-210    	; 0xf6 <I2C_write_byte>
 1c8:	0e 15       	cp	r16, r14
 1ca:	1f 05       	cpc	r17, r15
 1cc:	c1 f7       	brne	.-16     	; 0x1be <I2C_LCD_write_command+0x42>
 1ce:	0f 90       	pop	r0
 1d0:	0f 90       	pop	r0
 1d2:	0f 90       	pop	r0
 1d4:	0f 90       	pop	r0
 1d6:	df 91       	pop	r29
 1d8:	cf 91       	pop	r28
 1da:	1f 91       	pop	r17
 1dc:	0f 91       	pop	r16
 1de:	ff 90       	pop	r15
 1e0:	ef 90       	pop	r14
 1e2:	08 95       	ret

000001e4 <I2C_LCD_init>:
	_delay_ms(2);
}

void I2C_LCD_init(void)
{
	I2C_init(10000);
 1e4:	80 e1       	ldi	r24, 0x10	; 16
 1e6:	97 e2       	ldi	r25, 0x27	; 39
 1e8:	6f df       	rcall	.-290    	; 0xc8 <I2C_init>
 1ea:	2f ef       	ldi	r18, 0xFF	; 255
 1ec:	80 e7       	ldi	r24, 0x70	; 112
 1ee:	92 e0       	ldi	r25, 0x02	; 2
 1f0:	21 50       	subi	r18, 0x01	; 1
 1f2:	80 40       	sbci	r24, 0x00	; 0
 1f4:	90 40       	sbci	r25, 0x00	; 0
 1f6:	e1 f7       	brne	.-8      	; 0x1f0 <I2C_LCD_init+0xc>
 1f8:	00 c0       	rjmp	.+0      	; 0x1fa <I2C_LCD_init+0x16>
 1fa:	00 00       	nop
	_delay_ms(50);
	//Initialization of HD44780-based LCD (4-bit HW)
	I2C_LCD_write_command(0x33);
 1fc:	83 e3       	ldi	r24, 0x33	; 51
 1fe:	be df       	rcall	.-132    	; 0x17c <I2C_LCD_write_command>
	I2C_LCD_write_command(0x32);
 200:	82 e3       	ldi	r24, 0x32	; 50
 202:	bc df       	rcall	.-136    	; 0x17c <I2C_LCD_write_command>
	I2C_LCD_write_command(0x28);   //Function Set 4-bit mode
 204:	88 e2       	ldi	r24, 0x28	; 40
 206:	ba df       	rcall	.-140    	; 0x17c <I2C_LCD_write_command>
	I2C_LCD_write_command(0x0c);   //Display On/Off Control
 208:	8c e0       	ldi	r24, 0x0C	; 12
 20a:	b8 df       	rcall	.-144    	; 0x17c <I2C_LCD_write_command>
	I2C_LCD_write_command(0x06);   //Entry mode set
 20c:	86 e0       	ldi	r24, 0x06	; 6
 20e:	b6 df       	rcall	.-148    	; 0x17c <I2C_LCD_write_command>
 210:	81 e0       	ldi	r24, 0x01	; 1
	I2C_LCD_write_command(0x01);   //Clear Display
 212:	b4 df       	rcall	.-152    	; 0x17c <I2C_LCD_write_command>
 214:	8f e3       	ldi	r24, 0x3F	; 63
 216:	9c e9       	ldi	r25, 0x9C	; 156
 218:	01 97       	sbiw	r24, 0x01	; 1
 21a:	f1 f7       	brne	.-4      	; 0x218 <I2C_LCD_init+0x34>
 21c:	00 c0       	rjmp	.+0      	; 0x21e <I2C_LCD_init+0x3a>
 21e:	00 00       	nop
 220:	08 95       	ret

00000222 <I2C_LCD_write_string>:
 222:	0f 93       	push	r16
 224:	1f 93       	push	r17
	_delay_ms(10);
	
}

void I2C_LCD_write_string(char *string)
{
 226:	cf 93       	push	r28
 228:	fc 01       	movw	r30, r24
	uint8_t i;
	for(i=0; string[i]; i++)
 22a:	80 81       	ld	r24, Z
 22c:	88 23       	and	r24, r24
 22e:	51 f0       	breq	.+20     	; 0x244 <I2C_LCD_write_string+0x22>
 230:	8f 01       	movw	r16, r30
 232:	c0 e0       	ldi	r28, 0x00	; 0
	I2C_LCD_write_data(string[i]);
 234:	6f df       	rcall	.-290    	; 0x114 <I2C_LCD_write_data>
}

void I2C_LCD_write_string(char *string)
{
	uint8_t i;
	for(i=0; string[i]; i++)
 236:	cf 5f       	subi	r28, 0xFF	; 255
 238:	f8 01       	movw	r30, r16
 23a:	ec 0f       	add	r30, r28
 23c:	f1 1d       	adc	r31, r1
 23e:	80 81       	ld	r24, Z
 240:	81 11       	cpse	r24, r1
 242:	f8 cf       	rjmp	.-16     	; 0x234 <I2C_LCD_write_string+0x12>
	I2C_LCD_write_data(string[i]);
}
 244:	cf 91       	pop	r28
 246:	1f 91       	pop	r17
 248:	0f 91       	pop	r16
 24a:	08 95       	ret

0000024c <I2C_LCD_goto_XY>:
	row %= 2;
	
	uint8_t address = (0x40 * row) + col;
	uint8_t command = 0x80 + address;
	
	I2C_LCD_write_command(command);
 24c:	81 70       	andi	r24, 0x01	; 1
 24e:	6f 70       	andi	r22, 0x0F	; 15
 250:	90 e4       	ldi	r25, 0x40	; 64
 252:	89 9f       	mul	r24, r25
 254:	60 0d       	add	r22, r0
 256:	11 24       	eor	r1, r1
 258:	86 2f       	mov	r24, r22
 25a:	80 58       	subi	r24, 0x80	; 128
 25c:	8f cf       	rjmp	.-226    	; 0x17c <I2C_LCD_write_command>
 25e:	08 95       	ret

00000260 <I2C_LCD_write_string_XY>:
}

void I2C_LCD_write_string_XY(uint8_t row, uint8_t col, char *string)
{
 260:	cf 93       	push	r28
 262:	df 93       	push	r29
 264:	ea 01       	movw	r28, r20
	I2C_LCD_goto_XY(row, col);
 266:	f2 df       	rcall	.-28     	; 0x24c <I2C_LCD_goto_XY>
	I2C_LCD_write_string(string);
 268:	ce 01       	movw	r24, r28
 26a:	db df       	rcall	.-74     	; 0x222 <I2C_LCD_write_string>
 26c:	df 91       	pop	r29
 26e:	cf 91       	pop	r28
 270:	08 95       	ret

00000272 <ADC_init>:
FILE INPUT \
= FDEV_SETUP_STREAM(NULL, UART0_receive, _FDEV_SETUP_READ);
	
void ADC_init(unsigned char channel)
{
	ADMUX |= (1<<REFS0);
 272:	3e 9a       	sbi	0x07, 6	; 7
	
	ADCSRA |= 0x07;
 274:	96 b1       	in	r25, 0x06	; 6
 276:	97 60       	ori	r25, 0x07	; 7
 278:	96 b9       	out	0x06, r25	; 6
	
	ADCSRA |= (1<<ADEN);
 27a:	37 9a       	sbi	0x06, 7	; 6
	ADCSRA |= (1<<ADFR);
 27c:	35 9a       	sbi	0x06, 5	; 6
	
	ADMUX = ((ADMUX & 0xE0) | channel);
 27e:	97 b1       	in	r25, 0x07	; 7
 280:	90 7e       	andi	r25, 0xE0	; 224
 282:	89 2b       	or	r24, r25
 284:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1<<ADSC);
 286:	36 9a       	sbi	0x06, 6	; 6
 288:	08 95       	ret

0000028a <read_ADC>:
}

int read_ADC(void)
{
	while (!(ADCSRA & (1<<ADIF)));
 28a:	34 9b       	sbis	0x06, 4	; 6
 28c:	fe cf       	rjmp	.-4      	; 0x28a <read_ADC>
	
	return ADC;
 28e:	84 b1       	in	r24, 0x04	; 4
 290:	95 b1       	in	r25, 0x05	; 5
}
 292:	08 95       	ret

00000294 <light_on_Win_on>:
	uint8_t states1;
};

void light_on_Win_on(void)
{
	PORTC = 0x01;
 294:	81 e0       	ldi	r24, 0x01	; 1
 296:	85 bb       	out	0x15, r24	; 21
	printf("\r\nLight On\r\n");
 298:	8c e1       	ldi	r24, 0x1C	; 28
 29a:	91 e0       	ldi	r25, 0x01	; 1
 29c:	df d1       	rcall	.+958    	; 0x65c <puts>
	PORTE = 0x00;
 29e:	13 b8       	out	0x03, r1	; 3
	PORTB = 0x20;
 2a0:	80 e2       	ldi	r24, 0x20	; 32
 2a2:	88 bb       	out	0x18, r24	; 24
	printf("\r\nWindow Open\r\n");
 2a4:	88 e2       	ldi	r24, 0x28	; 40
 2a6:	91 e0       	ldi	r25, 0x01	; 1
 2a8:	d9 d1       	rcall	.+946    	; 0x65c <puts>
 2aa:	2f ef       	ldi	r18, 0xFF	; 255
 2ac:	83 ed       	ldi	r24, 0xD3	; 211
 2ae:	90 e3       	ldi	r25, 0x30	; 48
 2b0:	21 50       	subi	r18, 0x01	; 1
 2b2:	80 40       	sbci	r24, 0x00	; 0
 2b4:	90 40       	sbci	r25, 0x00	; 0
 2b6:	e1 f7       	brne	.-8      	; 0x2b0 <light_on_Win_on+0x1c>
 2b8:	00 c0       	rjmp	.+0      	; 0x2ba <light_on_Win_on+0x26>
 2ba:	00 00       	nop
	_delay_ms(1000);
	PORTB = 0x00;
 2bc:	18 ba       	out	0x18, r1	; 24
	PORTC = 0x00;
 2be:	15 ba       	out	0x15, r1	; 21
 2c0:	08 95       	ret

000002c2 <light_off_Win_on>:
}

void light_off_Win_on(void)
{
	PORTC = 0x00;
 2c2:	15 ba       	out	0x15, r1	; 21
	printf("\r\nLight Off\r\n");
 2c4:	87 e3       	ldi	r24, 0x37	; 55
 2c6:	91 e0       	ldi	r25, 0x01	; 1
 2c8:	c9 d1       	rcall	.+914    	; 0x65c <puts>
	PORTE = 0x00;
 2ca:	13 b8       	out	0x03, r1	; 3
	PORTB = 0x20;
 2cc:	80 e2       	ldi	r24, 0x20	; 32
 2ce:	88 bb       	out	0x18, r24	; 24
	printf("\r\nWindow Open\r\n");
 2d0:	88 e2       	ldi	r24, 0x28	; 40
 2d2:	91 e0       	ldi	r25, 0x01	; 1
 2d4:	c3 d1       	rcall	.+902    	; 0x65c <puts>
 2d6:	2f ef       	ldi	r18, 0xFF	; 255
 2d8:	83 ed       	ldi	r24, 0xD3	; 211
 2da:	90 e3       	ldi	r25, 0x30	; 48
 2dc:	21 50       	subi	r18, 0x01	; 1
 2de:	80 40       	sbci	r24, 0x00	; 0
 2e0:	90 40       	sbci	r25, 0x00	; 0
 2e2:	e1 f7       	brne	.-8      	; 0x2dc <light_off_Win_on+0x1a>
 2e4:	00 c0       	rjmp	.+0      	; 0x2e6 <light_off_Win_on+0x24>
 2e6:	00 00       	nop
	_delay_ms(1000);
	PORTB = 0x00;
 2e8:	18 ba       	out	0x18, r1	; 24
	PORTC = 0x00;
 2ea:	15 ba       	out	0x15, r1	; 21
 2ec:	08 95       	ret

000002ee <light_on_Win_off>:
}

void light_on_Win_off(void)
{
	PORTC = 0x01;
 2ee:	81 e0       	ldi	r24, 0x01	; 1
 2f0:	85 bb       	out	0x15, r24	; 21
	printf("\r\nLight On\r\n");
 2f2:	8c e1       	ldi	r24, 0x1C	; 28
 2f4:	91 e0       	ldi	r25, 0x01	; 1
 2f6:	b2 d1       	rcall	.+868    	; 0x65c <puts>
	PORTB = 0x00;
 2f8:	18 ba       	out	0x18, r1	; 24
	PORTE = 0x08;
 2fa:	88 e0       	ldi	r24, 0x08	; 8
 2fc:	83 b9       	out	0x03, r24	; 3
	printf("\r\nWindow Close\r\n");
 2fe:	84 e4       	ldi	r24, 0x44	; 68
 300:	91 e0       	ldi	r25, 0x01	; 1
 302:	ac d1       	rcall	.+856    	; 0x65c <puts>
 304:	2f ef       	ldi	r18, 0xFF	; 255
 306:	83 ed       	ldi	r24, 0xD3	; 211
 308:	90 e3       	ldi	r25, 0x30	; 48
 30a:	21 50       	subi	r18, 0x01	; 1
 30c:	80 40       	sbci	r24, 0x00	; 0
 30e:	90 40       	sbci	r25, 0x00	; 0
 310:	e1 f7       	brne	.-8      	; 0x30a <light_on_Win_off+0x1c>
 312:	00 c0       	rjmp	.+0      	; 0x314 <light_on_Win_off+0x26>
 314:	00 00       	nop
	_delay_ms(1000);
	PORTB = 0x00;
 316:	18 ba       	out	0x18, r1	; 24
 318:	08 95       	ret

0000031a <light_off_Win_off>:
	
}

void light_off_Win_off(void)
{
	PORTC = 0x00;
 31a:	15 ba       	out	0x15, r1	; 21
	printf("\r\nLight Off\r\n");
 31c:	87 e3       	ldi	r24, 0x37	; 55
 31e:	91 e0       	ldi	r25, 0x01	; 1
 320:	9d d1       	rcall	.+826    	; 0x65c <puts>
	PORTB = 0x00;
 322:	18 ba       	out	0x18, r1	; 24
	PORTE = 0x08;
 324:	88 e0       	ldi	r24, 0x08	; 8
 326:	83 b9       	out	0x03, r24	; 3
	printf("\r\nWindow Close\r\n");
 328:	84 e4       	ldi	r24, 0x44	; 68
 32a:	91 e0       	ldi	r25, 0x01	; 1
 32c:	97 d1       	rcall	.+814    	; 0x65c <puts>
 32e:	2f ef       	ldi	r18, 0xFF	; 255
 330:	83 ed       	ldi	r24, 0xD3	; 211
 332:	90 e3       	ldi	r25, 0x30	; 48
 334:	21 50       	subi	r18, 0x01	; 1
 336:	80 40       	sbci	r24, 0x00	; 0
 338:	90 40       	sbci	r25, 0x00	; 0
 33a:	e1 f7       	brne	.-8      	; 0x334 <light_off_Win_off+0x1a>
 33c:	00 c0       	rjmp	.+0      	; 0x33e <light_off_Win_off+0x24>
 33e:	00 00       	nop
	_delay_ms(1000);
	PORTB = 0x00;
 340:	18 ba       	out	0x18, r1	; 24
	PORTC = 0x00;
 342:	15 ba       	out	0x15, r1	; 21
 344:	08 95       	ret

00000346 <light_on_win_stop>:
	
}

void light_on_win_stop(void)
{
	PORTC = 0x01;
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	85 bb       	out	0x15, r24	; 21
	printf("\r\nLight On\r\n");
 34a:	8c e1       	ldi	r24, 0x1C	; 28
 34c:	91 e0       	ldi	r25, 0x01	; 1
 34e:	86 d1       	rcall	.+780    	; 0x65c <puts>
	PORTB = 0x00;
 350:	18 ba       	out	0x18, r1	; 24
	PORTE = 0x00;
 352:	13 b8       	out	0x03, r1	; 3
	printf("\r\nWindow Stop\r\n");
 354:	84 e5       	ldi	r24, 0x54	; 84
 356:	91 e0       	ldi	r25, 0x01	; 1
 358:	81 d1       	rcall	.+770    	; 0x65c <puts>
 35a:	2f ef       	ldi	r18, 0xFF	; 255
 35c:	83 ed       	ldi	r24, 0xD3	; 211
 35e:	90 e3       	ldi	r25, 0x30	; 48
 360:	21 50       	subi	r18, 0x01	; 1
 362:	80 40       	sbci	r24, 0x00	; 0
 364:	90 40       	sbci	r25, 0x00	; 0
 366:	e1 f7       	brne	.-8      	; 0x360 <light_on_win_stop+0x1a>
 368:	00 c0       	rjmp	.+0      	; 0x36a <light_on_win_stop+0x24>
 36a:	00 00       	nop
	_delay_ms(1000);
	PORTB = 0x00;
 36c:	18 ba       	out	0x18, r1	; 24
 36e:	08 95       	ret

00000370 <light_off_win_stop>:
}

void light_off_win_stop(void)
{
	PORTC = 0x00;
 370:	15 ba       	out	0x15, r1	; 21
	printf("\r\nLight Off\r\n");
 372:	87 e3       	ldi	r24, 0x37	; 55
 374:	91 e0       	ldi	r25, 0x01	; 1
 376:	72 d1       	rcall	.+740    	; 0x65c <puts>
	PORTB = 0x00;
 378:	18 ba       	out	0x18, r1	; 24
	PORTE = 0x00;
 37a:	13 b8       	out	0x03, r1	; 3
	printf("\r\nWindow Stop\r\n");
 37c:	84 e5       	ldi	r24, 0x54	; 84
 37e:	91 e0       	ldi	r25, 0x01	; 1
 380:	6d d1       	rcall	.+730    	; 0x65c <puts>
 382:	2f ef       	ldi	r18, 0xFF	; 255
 384:	83 ed       	ldi	r24, 0xD3	; 211
 386:	90 e3       	ldi	r25, 0x30	; 48
 388:	21 50       	subi	r18, 0x01	; 1
 38a:	80 40       	sbci	r24, 0x00	; 0
 38c:	90 40       	sbci	r25, 0x00	; 0
 38e:	e1 f7       	brne	.-8      	; 0x388 <light_off_win_stop+0x18>
 390:	00 c0       	rjmp	.+0      	; 0x392 <light_off_win_stop+0x22>
 392:	00 00       	nop
	_delay_ms(1000);
	PORTB = 0x00;
 394:	18 ba       	out	0x18, r1	; 24
	PORTC = 0x00;
 396:	15 ba       	out	0x15, r1	; 21
 398:	08 95       	ret

0000039a <main>:
}

int main(void)
{
 39a:	cf 93       	push	r28
 39c:	df 93       	push	r29
 39e:	cd b7       	in	r28, 0x3d	; 61
 3a0:	de b7       	in	r29, 0x3e	; 62
 3a2:	c9 57       	subi	r28, 0x79	; 121
 3a4:	d1 09       	sbc	r29, r1
 3a6:	0f b6       	in	r0, 0x3f	; 63
 3a8:	f8 94       	cli
 3aa:	de bf       	out	0x3e, r29	; 62
 3ac:	0f be       	out	0x3f, r0	; 63
 3ae:	cd bf       	out	0x3d, r28	; 61
	char buff2[40];
	char buff3[40];
	
	struct state_light NOW_LIGHTSTS;
	
	stdout = &OUTPUT;
 3b0:	ea e7       	ldi	r30, 0x7A	; 122
 3b2:	f1 e0       	ldi	r31, 0x01	; 1
 3b4:	8e e0       	ldi	r24, 0x0E	; 14
 3b6:	91 e0       	ldi	r25, 0x01	; 1
 3b8:	93 83       	std	Z+3, r25	; 0x03
 3ba:	82 83       	std	Z+2, r24	; 0x02
	stdin = &INPUT;
 3bc:	80 e0       	ldi	r24, 0x00	; 0
 3be:	91 e0       	ldi	r25, 0x01	; 1
 3c0:	91 83       	std	Z+1, r25	; 0x01
 3c2:	80 83       	st	Z, r24
	
	UART0_init();
 3c4:	36 d1       	rcall	.+620    	; 0x632 <UART0_init>
	ADC_init(0);
 3c6:	80 e0       	ldi	r24, 0x00	; 0
	I2C_LCD_init();
 3c8:	54 df       	rcall	.-344    	; 0x272 <ADC_init>
 3ca:	0c df       	rcall	.-488    	; 0x1e4 <I2C_LCD_init>
	
	NOW_LIGHTSTS.states1 = LightONWinSTOP;
	
	DDRC = 0x01;
 3cc:	81 e0       	ldi	r24, 0x01	; 1
 3ce:	84 bb       	out	0x14, r24	; 20
	DDRB = 0xff;
 3d0:	8f ef       	ldi	r24, 0xFF	; 255
 3d2:	87 bb       	out	0x17, r24	; 23
	DDRE = 0xff;
 3d4:	82 b9       	out	0x02, r24	; 2
	
	PORTC = 0x00;
 3d6:	15 ba       	out	0x15, r1	; 21
	PORTB = 0x00;
 3d8:	18 ba       	out	0x18, r1	; 24
	PORTE = 0x00;
 3da:	13 b8       	out	0x03, r1	; 3
	
	UART0_init();
	ADC_init(0);
	I2C_LCD_init();
	
	NOW_LIGHTSTS.states1 = LightONWinSTOP;
 3dc:	25 e0       	ldi	r18, 0x05	; 5
 3de:	ea 96       	adiw	r28, 0x3a	; 58
 3e0:	2f af       	std	Y+63, r18	; 0x3f
 3e2:	ea 97       	sbiw	r28, 0x3a	; 58
		_delay_ms(2);
		
		//printf("CDS Value : %d\r\nVA Resist Value : %d\r\nTemp Value : %d\r\n",CDS_val, VA_val,Temp_val);
		
		_delay_ms(5);
		sprintf(buff1, "C V:%d",CDS_val);
 3e4:	0f 2e       	mov	r0, r31
 3e6:	f3 e6       	ldi	r31, 0x63	; 99
 3e8:	6f 2e       	mov	r6, r31
 3ea:	f1 e0       	ldi	r31, 0x01	; 1
 3ec:	7f 2e       	mov	r7, r31
 3ee:	f0 2d       	mov	r31, r0
 3f0:	ce 01       	movw	r24, r28
 3f2:	01 96       	adiw	r24, 0x01	; 1
 3f4:	4c 01       	movw	r8, r24
		_delay_ms(5);
		I2C_LCD_write_string_XY(0,0,buff1);
		_delay_ms(5);
		sprintf(buff2, "VR V:%d",VA_val);
 3f6:	0f 2e       	mov	r0, r31
 3f8:	fa e6       	ldi	r31, 0x6A	; 106
 3fa:	4f 2e       	mov	r4, r31
 3fc:	f1 e0       	ldi	r31, 0x01	; 1
 3fe:	5f 2e       	mov	r5, r31
 400:	f0 2d       	mov	r31, r0
 402:	5e 01       	movw	r10, r28
 404:	99 e2       	ldi	r25, 0x29	; 41
 406:	a9 0e       	add	r10, r25
 408:	b1 1c       	adc	r11, r1
		I2C_LCD_write_string_XY(1,0,buff2);
		_delay_ms(5);
		sprintf(buff3, "T V:%d",Temp_val);
 40a:	6e 01       	movw	r12, r28
 40c:	21 e5       	ldi	r18, 0x51	; 81
 40e:	c2 0e       	add	r12, r18
 410:	d1 1c       	adc	r13, r1
	PORTE = 0x00;
	
	while (1) 
    {
		
		switch(NOW_LIGHTSTS.states1)
 412:	ea 96       	adiw	r28, 0x3a	; 58
 414:	8f ad       	ldd	r24, Y+63	; 0x3f
 416:	ea 97       	sbiw	r28, 0x3a	; 58
 418:	83 30       	cpi	r24, 0x03	; 3
 41a:	d1 f0       	breq	.+52     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 41c:	28 f4       	brcc	.+10     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 41e:	81 30       	cpi	r24, 0x01	; 1
 420:	61 f0       	breq	.+24     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 422:	82 30       	cpi	r24, 0x02	; 2
 424:	19 f5       	brne	.+70     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 426:	0f c0       	rjmp	.+30     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 428:	ea 96       	adiw	r28, 0x3a	; 58
 42a:	9f ad       	ldd	r25, Y+63	; 0x3f
 42c:	ea 97       	sbiw	r28, 0x3a	; 58
 42e:	95 30       	cpi	r25, 0x05	; 5
 430:	b1 f0       	breq	.+44     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 432:	80 f0       	brcs	.+32     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 434:	96 30       	cpi	r25, 0x06	; 6
 436:	d1 f4       	brne	.+52     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
		{
			case LightONWinON:
			light_on_Win_on();
 438:	14 c0       	rjmp	.+40     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 43a:	2c df       	rcall	.-424    	; 0x294 <light_on_Win_on>
 43c:	21 e0       	ldi	r18, 0x01	; 1
 43e:	ea 96       	adiw	r28, 0x3a	; 58
 440:	2f af       	std	Y+63, r18	; 0x3f
			break;
 442:	ea 97       	sbiw	r28, 0x3a	; 58
			case LightOFFWinON:
			light_off_Win_on();
 444:	13 c0       	rjmp	.+38     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 446:	3d df       	rcall	.-390    	; 0x2c2 <light_off_Win_on>
 448:	82 e0       	ldi	r24, 0x02	; 2
 44a:	ea 96       	adiw	r28, 0x3a	; 58
			case LightONWinOFF:
			light_on_Win_off();
 44c:	8f af       	std	Y+63, r24	; 0x3f
 44e:	ea 97       	sbiw	r28, 0x3a	; 58
			break;
			case LightOFFWinOFF:
			light_off_Win_off();
 450:	4e df       	rcall	.-356    	; 0x2ee <light_on_Win_off>
 452:	0c c0       	rjmp	.+24     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 454:	62 df       	rcall	.-316    	; 0x31a <light_off_Win_off>
 456:	94 e0       	ldi	r25, 0x04	; 4
 458:	ea 96       	adiw	r28, 0x3a	; 58
			case LightONWinSTOP:
			light_on_win_stop();
 45a:	9f af       	std	Y+63, r25	; 0x3f
			break;
 45c:	ea 97       	sbiw	r28, 0x3a	; 58
			case LightOFFWinSTOP:
			light_off_win_stop();
 45e:	73 df       	rcall	.-282    	; 0x346 <light_on_win_stop>
 460:	05 c0       	rjmp	.+10     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 462:	86 df       	rcall	.-244    	; 0x370 <light_off_win_stop>
 464:	26 e0       	ldi	r18, 0x06	; 6
 466:	ea 96       	adiw	r28, 0x3a	; 58
			break;
			default:
			break;
		}
		
		ADC_init(0);
 468:	2f af       	std	Y+63, r18	; 0x3f
 46a:	ea 97       	sbiw	r28, 0x3a	; 58
 46c:	80 e0       	ldi	r24, 0x00	; 0
 46e:	01 df       	rcall	.-510    	; 0x272 <ADC_init>
 470:	8f e3       	ldi	r24, 0x3F	; 63
 472:	9f e1       	ldi	r25, 0x1F	; 31
 474:	01 97       	sbiw	r24, 0x01	; 1
 476:	f1 f7       	brne	.-4      	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
		_delay_ms(2);
		CDS_val = read_ADC();
 478:	00 c0       	rjmp	.+0      	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 47a:	00 00       	nop
 47c:	06 df       	rcall	.-500    	; 0x28a <read_ADC>
 47e:	8c 01       	movw	r16, r24
 480:	8f e3       	ldi	r24, 0x3F	; 63
 482:	9f e1       	ldi	r25, 0x1F	; 31
 484:	01 97       	sbiw	r24, 0x01	; 1
 486:	f1 f7       	brne	.-4      	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
		_delay_ms(2);
		
		ADC_init(3);
 488:	00 c0       	rjmp	.+0      	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 48a:	00 00       	nop
 48c:	83 e0       	ldi	r24, 0x03	; 3
 48e:	f1 de       	rcall	.-542    	; 0x272 <ADC_init>
 490:	8f e3       	ldi	r24, 0x3F	; 63
 492:	9f e1       	ldi	r25, 0x1F	; 31
 494:	01 97       	sbiw	r24, 0x01	; 1
 496:	f1 f7       	brne	.-4      	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
		_delay_ms(2);
		VA_val = read_ADC();
 498:	00 c0       	rjmp	.+0      	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 49a:	00 00       	nop
 49c:	f6 de       	rcall	.-532    	; 0x28a <read_ADC>
 49e:	7c 01       	movw	r14, r24
 4a0:	8f e3       	ldi	r24, 0x3F	; 63
 4a2:	9f e1       	ldi	r25, 0x1F	; 31
 4a4:	01 97       	sbiw	r24, 0x01	; 1
 4a6:	f1 f7       	brne	.-4      	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
		_delay_ms(2);
		
		ADC_init(1);
 4a8:	00 c0       	rjmp	.+0      	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 4aa:	00 00       	nop
 4ac:	81 e0       	ldi	r24, 0x01	; 1
 4ae:	e1 de       	rcall	.-574    	; 0x272 <ADC_init>
 4b0:	8f e3       	ldi	r24, 0x3F	; 63
 4b2:	9f e1       	ldi	r25, 0x1F	; 31
 4b4:	01 97       	sbiw	r24, 0x01	; 1
 4b6:	f1 f7       	brne	.-4      	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 4b8:	00 c0       	rjmp	.+0      	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
		_delay_ms(2);
		Temp_val = read_ADC();
 4ba:	00 00       	nop
 4bc:	e6 de       	rcall	.-564    	; 0x28a <read_ADC>
 4be:	38 2e       	mov	r3, r24
 4c0:	29 2e       	mov	r2, r25
 4c2:	8f e3       	ldi	r24, 0x3F	; 63
 4c4:	9f e1       	ldi	r25, 0x1F	; 31
 4c6:	01 97       	sbiw	r24, 0x01	; 1
 4c8:	f1 f7       	brne	.-4      	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4ca:	00 c0       	rjmp	.+0      	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 4cc:	00 00       	nop
 4ce:	8f e1       	ldi	r24, 0x1F	; 31
 4d0:	9e e4       	ldi	r25, 0x4E	; 78
 4d2:	01 97       	sbiw	r24, 0x01	; 1
 4d4:	f1 f7       	brne	.-4      	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
 4d6:	00 c0       	rjmp	.+0      	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
		_delay_ms(2);
		
		//printf("CDS Value : %d\r\nVA Resist Value : %d\r\nTemp Value : %d\r\n",CDS_val, VA_val,Temp_val);
		
		_delay_ms(5);
		sprintf(buff1, "C V:%d",CDS_val);
 4d8:	00 00       	nop
 4da:	1f 93       	push	r17
 4dc:	0f 93       	push	r16
 4de:	7f 92       	push	r7
 4e0:	6f 92       	push	r6
 4e2:	9f 92       	push	r9
 4e4:	8f 92       	push	r8
 4e6:	ea d0       	rcall	.+468    	; 0x6bc <sprintf>
 4e8:	8f e1       	ldi	r24, 0x1F	; 31
 4ea:	9e e4       	ldi	r25, 0x4E	; 78
 4ec:	01 97       	sbiw	r24, 0x01	; 1
 4ee:	f1 f7       	brne	.-4      	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
 4f0:	00 c0       	rjmp	.+0      	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
		_delay_ms(5);
		I2C_LCD_write_string_XY(0,0,buff1);
 4f2:	00 00       	nop
 4f4:	a4 01       	movw	r20, r8
 4f6:	60 e0       	ldi	r22, 0x00	; 0
 4f8:	80 e0       	ldi	r24, 0x00	; 0
 4fa:	b2 de       	rcall	.-668    	; 0x260 <I2C_LCD_write_string_XY>
 4fc:	8f e1       	ldi	r24, 0x1F	; 31
 4fe:	9e e4       	ldi	r25, 0x4E	; 78
 500:	01 97       	sbiw	r24, 0x01	; 1
 502:	f1 f7       	brne	.-4      	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 504:	00 c0       	rjmp	.+0      	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
		_delay_ms(5);
		sprintf(buff2, "VR V:%d",VA_val);
 506:	00 00       	nop
 508:	ff 92       	push	r15
 50a:	ef 92       	push	r14
 50c:	5f 92       	push	r5
 50e:	4f 92       	push	r4
 510:	bf 92       	push	r11
 512:	af 92       	push	r10
 514:	d3 d0       	rcall	.+422    	; 0x6bc <sprintf>
		I2C_LCD_write_string_XY(1,0,buff2);
 516:	a5 01       	movw	r20, r10
 518:	60 e0       	ldi	r22, 0x00	; 0
 51a:	81 e0       	ldi	r24, 0x01	; 1
 51c:	a1 de       	rcall	.-702    	; 0x260 <I2C_LCD_write_string_XY>
 51e:	8f e1       	ldi	r24, 0x1F	; 31
 520:	9e e4       	ldi	r25, 0x4E	; 78
 522:	01 97       	sbiw	r24, 0x01	; 1
 524:	f1 f7       	brne	.-4      	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 526:	00 c0       	rjmp	.+0      	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 528:	00 00       	nop
		_delay_ms(5);
		sprintf(buff3, "T V:%d",Temp_val);
 52a:	2f 92       	push	r2
 52c:	3f 92       	push	r3
 52e:	82 e7       	ldi	r24, 0x72	; 114
 530:	91 e0       	ldi	r25, 0x01	; 1
 532:	9f 93       	push	r25
 534:	8f 93       	push	r24
 536:	df 92       	push	r13
 538:	cf 92       	push	r12
 53a:	c0 d0       	rcall	.+384    	; 0x6bc <sprintf>
 53c:	a6 01       	movw	r20, r12
		I2C_LCD_write_string_XY(0, 9,buff3);
 53e:	69 e0       	ldi	r22, 0x09	; 9
 540:	80 e0       	ldi	r24, 0x00	; 0
 542:	8e de       	rcall	.-740    	; 0x260 <I2C_LCD_write_string_XY>
 544:	8f e1       	ldi	r24, 0x1F	; 31
 546:	9e e4       	ldi	r25, 0x4E	; 78
 548:	01 97       	sbiw	r24, 0x01	; 1
 54a:	f1 f7       	brne	.-4      	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
 54c:	00 c0       	rjmp	.+0      	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 54e:	00 00       	nop
 550:	0f b6       	in	r0, 0x3f	; 63
 552:	f8 94       	cli
		_delay_ms(5);
		
		if ((CDS_val <= 501)&&(VA_val<= 300))
 554:	de bf       	out	0x3e, r29	; 62
 556:	0f be       	out	0x3f, r0	; 63
 558:	cd bf       	out	0x3d, r28	; 61
 55a:	06 3f       	cpi	r16, 0xF6	; 246
 55c:	91 e0       	ldi	r25, 0x01	; 1
 55e:	19 07       	cpc	r17, r25
 560:	0c f0       	brlt	.+2      	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 562:	5d c0       	rjmp	.+186    	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 564:	2d e2       	ldi	r18, 0x2D	; 45
 566:	e2 16       	cp	r14, r18
 568:	21 e0       	ldi	r18, 0x01	; 1
 56a:	f2 06       	cpc	r15, r18
 56c:	9c f4       	brge	.+38     	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 56e:	8f e1       	ldi	r24, 0x1F	; 31
 570:	9e e4       	ldi	r25, 0x4E	; 78
 572:	01 97       	sbiw	r24, 0x01	; 1
 574:	f1 f7       	brne	.-4      	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 576:	00 c0       	rjmp	.+0      	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 578:	00 00       	nop
 57a:	5f cf       	rjmp	.-322    	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 57c:	9d e2       	ldi	r25, 0x2D	; 45
 57e:	e9 16       	cp	r14, r25
		{
			NOW_LIGHTSTS.states1 = LightONWinON;
			_delay_ms(5);
		}
		else if ((CDS_val >= 500)&&(VA_val<=300))
 580:	91 e0       	ldi	r25, 0x01	; 1
 582:	f9 06       	cpc	r15, r25
 584:	cc f4       	brge	.+50     	; 0x5b8 <__LOCK_REGION_LENGTH__+0x1b8>
 586:	8f e1       	ldi	r24, 0x1F	; 31
 588:	9e e4       	ldi	r25, 0x4E	; 78
 58a:	01 97       	sbiw	r24, 0x01	; 1
 58c:	f1 f7       	brne	.-4      	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 58e:	00 c0       	rjmp	.+0      	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 590:	00 00       	nop
 592:	59 cf       	rjmp	.-334    	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 594:	c7 01       	movw	r24, r14
 596:	8d 52       	subi	r24, 0x2D	; 45
		{
			NOW_LIGHTSTS.states1 = LightOFFWinON;
			_delay_ms(5);
		}
		else if ((CDS_val <= 501)&&((VA_val>=301)&&(VA_val<=499)))
 598:	91 40       	sbci	r25, 0x01	; 1
 59a:	87 3c       	cpi	r24, 0xC7	; 199
 59c:	91 05       	cpc	r25, r1
 59e:	08 f0       	brcs	.+2      	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 5a0:	43 c0       	rjmp	.+134    	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 5a2:	8f e1       	ldi	r24, 0x1F	; 31
 5a4:	9e e4       	ldi	r25, 0x4E	; 78
 5a6:	01 97       	sbiw	r24, 0x01	; 1
 5a8:	f1 f7       	brne	.-4      	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
 5aa:	00 c0       	rjmp	.+0      	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 5ac:	00 00       	nop
 5ae:	95 e0       	ldi	r25, 0x05	; 5
 5b0:	ea 96       	adiw	r28, 0x3a	; 58
		{
			NOW_LIGHTSTS.states1 = LightONWinSTOP;
 5b2:	9f af       	std	Y+63, r25	; 0x3f
 5b4:	ea 97       	sbiw	r28, 0x3a	; 58
 5b6:	53 cf       	rjmp	.-346    	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 5b8:	05 3f       	cpi	r16, 0xF5	; 245
 5ba:	21 e0       	ldi	r18, 0x01	; 1
			_delay_ms(5);
		}
		else if ((CDS_val >= 501)&&((VA_val>=301)&&(VA_val<=499)))
 5bc:	12 07       	cpc	r17, r18
 5be:	6c f0       	brlt	.+26     	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5c0:	c7 01       	movw	r24, r14
 5c2:	8d 52       	subi	r24, 0x2D	; 45
 5c4:	91 40       	sbci	r25, 0x01	; 1
 5c6:	87 3c       	cpi	r24, 0xC7	; 199
 5c8:	91 05       	cpc	r25, r1
 5ca:	c0 f4       	brcc	.+48     	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5cc:	8f e1       	ldi	r24, 0x1F	; 31
 5ce:	9e e4       	ldi	r25, 0x4E	; 78
 5d0:	01 97       	sbiw	r24, 0x01	; 1
 5d2:	f1 f7       	brne	.-4      	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5d4:	00 c0       	rjmp	.+0      	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5d6:	00 00       	nop
 5d8:	44 cf       	rjmp	.-376    	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 5da:	93 ef       	ldi	r25, 0xF3	; 243
 5dc:	e9 16       	cp	r14, r25
		{
			NOW_LIGHTSTS.states1 = LightOFFWinSTOP;
			_delay_ms(5);
		}
		else if ((CDS_val <= 500)&&(VA_val>=499))
 5de:	91 e0       	ldi	r25, 0x01	; 1
 5e0:	f9 06       	cpc	r15, r25
 5e2:	0c f4       	brge	.+2      	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
 5e4:	16 cf       	rjmp	.-468    	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 5e6:	8f e1       	ldi	r24, 0x1F	; 31
 5e8:	9e e4       	ldi	r25, 0x4E	; 78
 5ea:	01 97       	sbiw	r24, 0x01	; 1
 5ec:	f1 f7       	brne	.-4      	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5ee:	00 c0       	rjmp	.+0      	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 5f0:	00 00       	nop
 5f2:	93 e0       	ldi	r25, 0x03	; 3
 5f4:	ea 96       	adiw	r28, 0x3a	; 58
		{
			NOW_LIGHTSTS.states1 = LightONWinOFF;
 5f6:	9f af       	std	Y+63, r25	; 0x3f
 5f8:	ea 97       	sbiw	r28, 0x3a	; 58
 5fa:	2a cf       	rjmp	.-428    	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 5fc:	04 3f       	cpi	r16, 0xF4	; 244
 5fe:	11 40       	sbci	r17, 0x01	; 1
			_delay_ms(5);
		}
		else if ((CDS_val >= 500)&&(VA_val>=499))
 600:	0c f4       	brge	.+2      	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 602:	07 cf       	rjmp	.-498    	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 604:	83 ef       	ldi	r24, 0xF3	; 243
 606:	e8 16       	cp	r14, r24
 608:	81 e0       	ldi	r24, 0x01	; 1
 60a:	f8 06       	cpc	r15, r24
 60c:	0c f4       	brge	.+2      	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 60e:	01 cf       	rjmp	.-510    	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 610:	8f e1       	ldi	r24, 0x1F	; 31
 612:	9e e4       	ldi	r25, 0x4E	; 78
 614:	01 97       	sbiw	r24, 0x01	; 1
 616:	f1 f7       	brne	.-4      	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 618:	00 c0       	rjmp	.+0      	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
 61a:	00 00       	nop
 61c:	1b cf       	rjmp	.-458    	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 61e:	04 3f       	cpi	r16, 0xF4	; 244
 620:	91 e0       	ldi	r25, 0x01	; 1
		if ((CDS_val <= 501)&&(VA_val<= 300))
		{
			NOW_LIGHTSTS.states1 = LightONWinON;
			_delay_ms(5);
		}
		else if ((CDS_val >= 500)&&(VA_val<=300))
 622:	19 07       	cpc	r17, r25
 624:	4c f2       	brlt	.-110    	; 0x5b8 <__LOCK_REGION_LENGTH__+0x1b8>
 626:	aa cf       	rjmp	.-172    	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 628:	05 3f       	cpi	r16, 0xF5	; 245
 62a:	21 e0       	ldi	r18, 0x01	; 1
		else if ((CDS_val <= 501)&&((VA_val>=301)&&(VA_val<=499)))
		{
			NOW_LIGHTSTS.states1 = LightONWinSTOP;
			_delay_ms(5);
		}
		else if ((CDS_val >= 501)&&((VA_val>=301)&&(VA_val<=499)))
 62c:	12 07       	cpc	r17, r18
 62e:	34 f7       	brge	.-52     	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 630:	d4 cf       	rjmp	.-88     	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>

00000632 <UART0_init>:
 */ 
#include <avr/io.h>

void UART0_init(void)
{
	UBRR0H = 0x00;			// 9600 보율로 설정
 632:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = 207;
 636:	8f ec       	ldi	r24, 0xCF	; 207
 638:	89 b9       	out	0x09, r24	; 9
	
	UCSR0A |= (1<<U2X0);			// 2배속 모드
 63a:	59 9a       	sbi	0x0b, 1	; 11
	// 비동기, 8비트 데이터, 패리티 없음, 1비트 정지 비트 모드
	UCSR0C |= 0x06;
 63c:	e5 e9       	ldi	r30, 0x95	; 149
 63e:	f0 e0       	ldi	r31, 0x00	; 0
 640:	80 81       	ld	r24, Z
 642:	86 60       	ori	r24, 0x06	; 6
 644:	80 83       	st	Z, r24
	
	UCSR0B |= (1<<RXEN0);		// 송수신 가능
 646:	54 9a       	sbi	0x0a, 4	; 10
	UCSR0B |= (1<<TXEN0);
 648:	53 9a       	sbi	0x0a, 3	; 10
 64a:	08 95       	ret

0000064c <UART0_transmit>:
}

void UART0_transmit(char data)
{
	while( !(UCSR0A & (1 << UDRE0)) );	// 송신 가능 대기
 64c:	5d 9b       	sbis	0x0b, 5	; 11
 64e:	fe cf       	rjmp	.-4      	; 0x64c <UART0_transmit>
	UDR0 = data;				// 데이터 전송
 650:	8c b9       	out	0x0c, r24	; 12
 652:	08 95       	ret

00000654 <UART0_receive>:
}

unsigned char UART0_receive(void)
{
	while( !(UCSR0A & (1<<RXC0)) );	// 데이터 수신 대기
 654:	5f 9b       	sbis	0x0b, 7	; 11
 656:	fe cf       	rjmp	.-4      	; 0x654 <UART0_receive>
	return UDR0;
 658:	8c b1       	in	r24, 0x0c	; 12
}
 65a:	08 95       	ret

0000065c <puts>:
 65c:	0f 93       	push	r16
 65e:	1f 93       	push	r17
 660:	cf 93       	push	r28
 662:	df 93       	push	r29
 664:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <__data_end+0x2>
 668:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <__data_end+0x3>
 66c:	23 81       	ldd	r18, Z+3	; 0x03
 66e:	21 ff       	sbrs	r18, 1
 670:	1b c0       	rjmp	.+54     	; 0x6a8 <puts+0x4c>
 672:	8c 01       	movw	r16, r24
 674:	d0 e0       	ldi	r29, 0x00	; 0
 676:	c0 e0       	ldi	r28, 0x00	; 0
 678:	f8 01       	movw	r30, r16
 67a:	81 91       	ld	r24, Z+
 67c:	8f 01       	movw	r16, r30
 67e:	60 91 7c 01 	lds	r22, 0x017C	; 0x80017c <__data_end+0x2>
 682:	70 91 7d 01 	lds	r23, 0x017D	; 0x80017d <__data_end+0x3>
 686:	db 01       	movw	r26, r22
 688:	18 96       	adiw	r26, 0x08	; 8
 68a:	ed 91       	ld	r30, X+
 68c:	fc 91       	ld	r31, X
 68e:	19 97       	sbiw	r26, 0x09	; 9
 690:	88 23       	and	r24, r24
 692:	31 f0       	breq	.+12     	; 0x6a0 <puts+0x44>
 694:	09 95       	icall
 696:	89 2b       	or	r24, r25
 698:	79 f3       	breq	.-34     	; 0x678 <puts+0x1c>
 69a:	df ef       	ldi	r29, 0xFF	; 255
 69c:	cf ef       	ldi	r28, 0xFF	; 255
 69e:	ec cf       	rjmp	.-40     	; 0x678 <puts+0x1c>
 6a0:	8a e0       	ldi	r24, 0x0A	; 10
 6a2:	09 95       	icall
 6a4:	89 2b       	or	r24, r25
 6a6:	19 f0       	breq	.+6      	; 0x6ae <puts+0x52>
 6a8:	8f ef       	ldi	r24, 0xFF	; 255
 6aa:	9f ef       	ldi	r25, 0xFF	; 255
 6ac:	02 c0       	rjmp	.+4      	; 0x6b2 <puts+0x56>
 6ae:	8d 2f       	mov	r24, r29
 6b0:	9c 2f       	mov	r25, r28
 6b2:	df 91       	pop	r29
 6b4:	cf 91       	pop	r28
 6b6:	1f 91       	pop	r17
 6b8:	0f 91       	pop	r16
 6ba:	08 95       	ret

000006bc <sprintf>:
 6bc:	0f 93       	push	r16
 6be:	1f 93       	push	r17
 6c0:	cf 93       	push	r28
 6c2:	df 93       	push	r29
 6c4:	cd b7       	in	r28, 0x3d	; 61
 6c6:	de b7       	in	r29, 0x3e	; 62
 6c8:	2e 97       	sbiw	r28, 0x0e	; 14
 6ca:	0f b6       	in	r0, 0x3f	; 63
 6cc:	f8 94       	cli
 6ce:	de bf       	out	0x3e, r29	; 62
 6d0:	0f be       	out	0x3f, r0	; 63
 6d2:	cd bf       	out	0x3d, r28	; 61
 6d4:	0d 89       	ldd	r16, Y+21	; 0x15
 6d6:	1e 89       	ldd	r17, Y+22	; 0x16
 6d8:	86 e0       	ldi	r24, 0x06	; 6
 6da:	8c 83       	std	Y+4, r24	; 0x04
 6dc:	1a 83       	std	Y+2, r17	; 0x02
 6de:	09 83       	std	Y+1, r16	; 0x01
 6e0:	8f ef       	ldi	r24, 0xFF	; 255
 6e2:	9f e7       	ldi	r25, 0x7F	; 127
 6e4:	9e 83       	std	Y+6, r25	; 0x06
 6e6:	8d 83       	std	Y+5, r24	; 0x05
 6e8:	ae 01       	movw	r20, r28
 6ea:	47 5e       	subi	r20, 0xE7	; 231
 6ec:	5f 4f       	sbci	r21, 0xFF	; 255
 6ee:	6f 89       	ldd	r22, Y+23	; 0x17
 6f0:	78 8d       	ldd	r23, Y+24	; 0x18
 6f2:	ce 01       	movw	r24, r28
 6f4:	01 96       	adiw	r24, 0x01	; 1
 6f6:	10 d0       	rcall	.+32     	; 0x718 <vfprintf>
 6f8:	ef 81       	ldd	r30, Y+7	; 0x07
 6fa:	f8 85       	ldd	r31, Y+8	; 0x08
 6fc:	e0 0f       	add	r30, r16
 6fe:	f1 1f       	adc	r31, r17
 700:	10 82       	st	Z, r1
 702:	2e 96       	adiw	r28, 0x0e	; 14
 704:	0f b6       	in	r0, 0x3f	; 63
 706:	f8 94       	cli
 708:	de bf       	out	0x3e, r29	; 62
 70a:	0f be       	out	0x3f, r0	; 63
 70c:	cd bf       	out	0x3d, r28	; 61
 70e:	df 91       	pop	r29
 710:	cf 91       	pop	r28
 712:	1f 91       	pop	r17
 714:	0f 91       	pop	r16
 716:	08 95       	ret

00000718 <vfprintf>:
 718:	2f 92       	push	r2
 71a:	3f 92       	push	r3
 71c:	4f 92       	push	r4
 71e:	5f 92       	push	r5
 720:	6f 92       	push	r6
 722:	7f 92       	push	r7
 724:	8f 92       	push	r8
 726:	9f 92       	push	r9
 728:	af 92       	push	r10
 72a:	bf 92       	push	r11
 72c:	cf 92       	push	r12
 72e:	df 92       	push	r13
 730:	ef 92       	push	r14
 732:	ff 92       	push	r15
 734:	0f 93       	push	r16
 736:	1f 93       	push	r17
 738:	cf 93       	push	r28
 73a:	df 93       	push	r29
 73c:	cd b7       	in	r28, 0x3d	; 61
 73e:	de b7       	in	r29, 0x3e	; 62
 740:	2b 97       	sbiw	r28, 0x0b	; 11
 742:	0f b6       	in	r0, 0x3f	; 63
 744:	f8 94       	cli
 746:	de bf       	out	0x3e, r29	; 62
 748:	0f be       	out	0x3f, r0	; 63
 74a:	cd bf       	out	0x3d, r28	; 61
 74c:	6c 01       	movw	r12, r24
 74e:	7b 01       	movw	r14, r22
 750:	8a 01       	movw	r16, r20
 752:	fc 01       	movw	r30, r24
 754:	17 82       	std	Z+7, r1	; 0x07
 756:	16 82       	std	Z+6, r1	; 0x06
 758:	83 81       	ldd	r24, Z+3	; 0x03
 75a:	81 ff       	sbrs	r24, 1
 75c:	bf c1       	rjmp	.+894    	; 0xadc <vfprintf+0x3c4>
 75e:	ce 01       	movw	r24, r28
 760:	01 96       	adiw	r24, 0x01	; 1
 762:	3c 01       	movw	r6, r24
 764:	f6 01       	movw	r30, r12
 766:	93 81       	ldd	r25, Z+3	; 0x03
 768:	f7 01       	movw	r30, r14
 76a:	93 fd       	sbrc	r25, 3
 76c:	85 91       	lpm	r24, Z+
 76e:	93 ff       	sbrs	r25, 3
 770:	81 91       	ld	r24, Z+
 772:	7f 01       	movw	r14, r30
 774:	88 23       	and	r24, r24
 776:	09 f4       	brne	.+2      	; 0x77a <vfprintf+0x62>
 778:	ad c1       	rjmp	.+858    	; 0xad4 <vfprintf+0x3bc>
 77a:	85 32       	cpi	r24, 0x25	; 37
 77c:	39 f4       	brne	.+14     	; 0x78c <vfprintf+0x74>
 77e:	93 fd       	sbrc	r25, 3
 780:	85 91       	lpm	r24, Z+
 782:	93 ff       	sbrs	r25, 3
 784:	81 91       	ld	r24, Z+
 786:	7f 01       	movw	r14, r30
 788:	85 32       	cpi	r24, 0x25	; 37
 78a:	21 f4       	brne	.+8      	; 0x794 <vfprintf+0x7c>
 78c:	b6 01       	movw	r22, r12
 78e:	90 e0       	ldi	r25, 0x00	; 0
 790:	d6 d1       	rcall	.+940    	; 0xb3e <fputc>
 792:	e8 cf       	rjmp	.-48     	; 0x764 <vfprintf+0x4c>
 794:	91 2c       	mov	r9, r1
 796:	21 2c       	mov	r2, r1
 798:	31 2c       	mov	r3, r1
 79a:	ff e1       	ldi	r31, 0x1F	; 31
 79c:	f3 15       	cp	r31, r3
 79e:	d8 f0       	brcs	.+54     	; 0x7d6 <vfprintf+0xbe>
 7a0:	8b 32       	cpi	r24, 0x2B	; 43
 7a2:	79 f0       	breq	.+30     	; 0x7c2 <vfprintf+0xaa>
 7a4:	38 f4       	brcc	.+14     	; 0x7b4 <vfprintf+0x9c>
 7a6:	80 32       	cpi	r24, 0x20	; 32
 7a8:	79 f0       	breq	.+30     	; 0x7c8 <vfprintf+0xb0>
 7aa:	83 32       	cpi	r24, 0x23	; 35
 7ac:	a1 f4       	brne	.+40     	; 0x7d6 <vfprintf+0xbe>
 7ae:	23 2d       	mov	r18, r3
 7b0:	20 61       	ori	r18, 0x10	; 16
 7b2:	1d c0       	rjmp	.+58     	; 0x7ee <vfprintf+0xd6>
 7b4:	8d 32       	cpi	r24, 0x2D	; 45
 7b6:	61 f0       	breq	.+24     	; 0x7d0 <vfprintf+0xb8>
 7b8:	80 33       	cpi	r24, 0x30	; 48
 7ba:	69 f4       	brne	.+26     	; 0x7d6 <vfprintf+0xbe>
 7bc:	23 2d       	mov	r18, r3
 7be:	21 60       	ori	r18, 0x01	; 1
 7c0:	16 c0       	rjmp	.+44     	; 0x7ee <vfprintf+0xd6>
 7c2:	83 2d       	mov	r24, r3
 7c4:	82 60       	ori	r24, 0x02	; 2
 7c6:	38 2e       	mov	r3, r24
 7c8:	e3 2d       	mov	r30, r3
 7ca:	e4 60       	ori	r30, 0x04	; 4
 7cc:	3e 2e       	mov	r3, r30
 7ce:	2a c0       	rjmp	.+84     	; 0x824 <vfprintf+0x10c>
 7d0:	f3 2d       	mov	r31, r3
 7d2:	f8 60       	ori	r31, 0x08	; 8
 7d4:	1d c0       	rjmp	.+58     	; 0x810 <vfprintf+0xf8>
 7d6:	37 fc       	sbrc	r3, 7
 7d8:	2d c0       	rjmp	.+90     	; 0x834 <vfprintf+0x11c>
 7da:	20 ed       	ldi	r18, 0xD0	; 208
 7dc:	28 0f       	add	r18, r24
 7de:	2a 30       	cpi	r18, 0x0A	; 10
 7e0:	40 f0       	brcs	.+16     	; 0x7f2 <vfprintf+0xda>
 7e2:	8e 32       	cpi	r24, 0x2E	; 46
 7e4:	b9 f4       	brne	.+46     	; 0x814 <vfprintf+0xfc>
 7e6:	36 fc       	sbrc	r3, 6
 7e8:	75 c1       	rjmp	.+746    	; 0xad4 <vfprintf+0x3bc>
 7ea:	23 2d       	mov	r18, r3
 7ec:	20 64       	ori	r18, 0x40	; 64
 7ee:	32 2e       	mov	r3, r18
 7f0:	19 c0       	rjmp	.+50     	; 0x824 <vfprintf+0x10c>
 7f2:	36 fe       	sbrs	r3, 6
 7f4:	06 c0       	rjmp	.+12     	; 0x802 <vfprintf+0xea>
 7f6:	8a e0       	ldi	r24, 0x0A	; 10
 7f8:	98 9e       	mul	r9, r24
 7fa:	20 0d       	add	r18, r0
 7fc:	11 24       	eor	r1, r1
 7fe:	92 2e       	mov	r9, r18
 800:	11 c0       	rjmp	.+34     	; 0x824 <vfprintf+0x10c>
 802:	ea e0       	ldi	r30, 0x0A	; 10
 804:	2e 9e       	mul	r2, r30
 806:	20 0d       	add	r18, r0
 808:	11 24       	eor	r1, r1
 80a:	22 2e       	mov	r2, r18
 80c:	f3 2d       	mov	r31, r3
 80e:	f0 62       	ori	r31, 0x20	; 32
 810:	3f 2e       	mov	r3, r31
 812:	08 c0       	rjmp	.+16     	; 0x824 <vfprintf+0x10c>
 814:	8c 36       	cpi	r24, 0x6C	; 108
 816:	21 f4       	brne	.+8      	; 0x820 <vfprintf+0x108>
 818:	83 2d       	mov	r24, r3
 81a:	80 68       	ori	r24, 0x80	; 128
 81c:	38 2e       	mov	r3, r24
 81e:	02 c0       	rjmp	.+4      	; 0x824 <vfprintf+0x10c>
 820:	88 36       	cpi	r24, 0x68	; 104
 822:	41 f4       	brne	.+16     	; 0x834 <vfprintf+0x11c>
 824:	f7 01       	movw	r30, r14
 826:	93 fd       	sbrc	r25, 3
 828:	85 91       	lpm	r24, Z+
 82a:	93 ff       	sbrs	r25, 3
 82c:	81 91       	ld	r24, Z+
 82e:	7f 01       	movw	r14, r30
 830:	81 11       	cpse	r24, r1
 832:	b3 cf       	rjmp	.-154    	; 0x79a <vfprintf+0x82>
 834:	98 2f       	mov	r25, r24
 836:	9f 7d       	andi	r25, 0xDF	; 223
 838:	95 54       	subi	r25, 0x45	; 69
 83a:	93 30       	cpi	r25, 0x03	; 3
 83c:	28 f4       	brcc	.+10     	; 0x848 <vfprintf+0x130>
 83e:	0c 5f       	subi	r16, 0xFC	; 252
 840:	1f 4f       	sbci	r17, 0xFF	; 255
 842:	9f e3       	ldi	r25, 0x3F	; 63
 844:	99 83       	std	Y+1, r25	; 0x01
 846:	0d c0       	rjmp	.+26     	; 0x862 <vfprintf+0x14a>
 848:	83 36       	cpi	r24, 0x63	; 99
 84a:	31 f0       	breq	.+12     	; 0x858 <vfprintf+0x140>
 84c:	83 37       	cpi	r24, 0x73	; 115
 84e:	71 f0       	breq	.+28     	; 0x86c <vfprintf+0x154>
 850:	83 35       	cpi	r24, 0x53	; 83
 852:	09 f0       	breq	.+2      	; 0x856 <vfprintf+0x13e>
 854:	55 c0       	rjmp	.+170    	; 0x900 <vfprintf+0x1e8>
 856:	20 c0       	rjmp	.+64     	; 0x898 <vfprintf+0x180>
 858:	f8 01       	movw	r30, r16
 85a:	80 81       	ld	r24, Z
 85c:	89 83       	std	Y+1, r24	; 0x01
 85e:	0e 5f       	subi	r16, 0xFE	; 254
 860:	1f 4f       	sbci	r17, 0xFF	; 255
 862:	88 24       	eor	r8, r8
 864:	83 94       	inc	r8
 866:	91 2c       	mov	r9, r1
 868:	53 01       	movw	r10, r6
 86a:	12 c0       	rjmp	.+36     	; 0x890 <vfprintf+0x178>
 86c:	28 01       	movw	r4, r16
 86e:	f2 e0       	ldi	r31, 0x02	; 2
 870:	4f 0e       	add	r4, r31
 872:	51 1c       	adc	r5, r1
 874:	f8 01       	movw	r30, r16
 876:	a0 80       	ld	r10, Z
 878:	b1 80       	ldd	r11, Z+1	; 0x01
 87a:	36 fe       	sbrs	r3, 6
 87c:	03 c0       	rjmp	.+6      	; 0x884 <vfprintf+0x16c>
 87e:	69 2d       	mov	r22, r9
 880:	70 e0       	ldi	r23, 0x00	; 0
 882:	02 c0       	rjmp	.+4      	; 0x888 <vfprintf+0x170>
 884:	6f ef       	ldi	r22, 0xFF	; 255
 886:	7f ef       	ldi	r23, 0xFF	; 255
 888:	c5 01       	movw	r24, r10
 88a:	4e d1       	rcall	.+668    	; 0xb28 <strnlen>
 88c:	4c 01       	movw	r8, r24
 88e:	82 01       	movw	r16, r4
 890:	f3 2d       	mov	r31, r3
 892:	ff 77       	andi	r31, 0x7F	; 127
 894:	3f 2e       	mov	r3, r31
 896:	15 c0       	rjmp	.+42     	; 0x8c2 <vfprintf+0x1aa>
 898:	28 01       	movw	r4, r16
 89a:	22 e0       	ldi	r18, 0x02	; 2
 89c:	42 0e       	add	r4, r18
 89e:	51 1c       	adc	r5, r1
 8a0:	f8 01       	movw	r30, r16
 8a2:	a0 80       	ld	r10, Z
 8a4:	b1 80       	ldd	r11, Z+1	; 0x01
 8a6:	36 fe       	sbrs	r3, 6
 8a8:	03 c0       	rjmp	.+6      	; 0x8b0 <vfprintf+0x198>
 8aa:	69 2d       	mov	r22, r9
 8ac:	70 e0       	ldi	r23, 0x00	; 0
 8ae:	02 c0       	rjmp	.+4      	; 0x8b4 <vfprintf+0x19c>
 8b0:	6f ef       	ldi	r22, 0xFF	; 255
 8b2:	7f ef       	ldi	r23, 0xFF	; 255
 8b4:	c5 01       	movw	r24, r10
 8b6:	2d d1       	rcall	.+602    	; 0xb12 <strnlen_P>
 8b8:	4c 01       	movw	r8, r24
 8ba:	f3 2d       	mov	r31, r3
 8bc:	f0 68       	ori	r31, 0x80	; 128
 8be:	3f 2e       	mov	r3, r31
 8c0:	82 01       	movw	r16, r4
 8c2:	33 fc       	sbrc	r3, 3
 8c4:	19 c0       	rjmp	.+50     	; 0x8f8 <vfprintf+0x1e0>
 8c6:	82 2d       	mov	r24, r2
 8c8:	90 e0       	ldi	r25, 0x00	; 0
 8ca:	88 16       	cp	r8, r24
 8cc:	99 06       	cpc	r9, r25
 8ce:	a0 f4       	brcc	.+40     	; 0x8f8 <vfprintf+0x1e0>
 8d0:	b6 01       	movw	r22, r12
 8d2:	80 e2       	ldi	r24, 0x20	; 32
 8d4:	90 e0       	ldi	r25, 0x00	; 0
 8d6:	33 d1       	rcall	.+614    	; 0xb3e <fputc>
 8d8:	2a 94       	dec	r2
 8da:	f5 cf       	rjmp	.-22     	; 0x8c6 <vfprintf+0x1ae>
 8dc:	f5 01       	movw	r30, r10
 8de:	37 fc       	sbrc	r3, 7
 8e0:	85 91       	lpm	r24, Z+
 8e2:	37 fe       	sbrs	r3, 7
 8e4:	81 91       	ld	r24, Z+
 8e6:	5f 01       	movw	r10, r30
 8e8:	b6 01       	movw	r22, r12
 8ea:	90 e0       	ldi	r25, 0x00	; 0
 8ec:	28 d1       	rcall	.+592    	; 0xb3e <fputc>
 8ee:	21 10       	cpse	r2, r1
 8f0:	2a 94       	dec	r2
 8f2:	21 e0       	ldi	r18, 0x01	; 1
 8f4:	82 1a       	sub	r8, r18
 8f6:	91 08       	sbc	r9, r1
 8f8:	81 14       	cp	r8, r1
 8fa:	91 04       	cpc	r9, r1
 8fc:	79 f7       	brne	.-34     	; 0x8dc <vfprintf+0x1c4>
 8fe:	e1 c0       	rjmp	.+450    	; 0xac2 <vfprintf+0x3aa>
 900:	84 36       	cpi	r24, 0x64	; 100
 902:	11 f0       	breq	.+4      	; 0x908 <vfprintf+0x1f0>
 904:	89 36       	cpi	r24, 0x69	; 105
 906:	39 f5       	brne	.+78     	; 0x956 <vfprintf+0x23e>
 908:	f8 01       	movw	r30, r16
 90a:	37 fe       	sbrs	r3, 7
 90c:	07 c0       	rjmp	.+14     	; 0x91c <vfprintf+0x204>
 90e:	60 81       	ld	r22, Z
 910:	71 81       	ldd	r23, Z+1	; 0x01
 912:	82 81       	ldd	r24, Z+2	; 0x02
 914:	93 81       	ldd	r25, Z+3	; 0x03
 916:	0c 5f       	subi	r16, 0xFC	; 252
 918:	1f 4f       	sbci	r17, 0xFF	; 255
 91a:	08 c0       	rjmp	.+16     	; 0x92c <vfprintf+0x214>
 91c:	60 81       	ld	r22, Z
 91e:	71 81       	ldd	r23, Z+1	; 0x01
 920:	07 2e       	mov	r0, r23
 922:	00 0c       	add	r0, r0
 924:	88 0b       	sbc	r24, r24
 926:	99 0b       	sbc	r25, r25
 928:	0e 5f       	subi	r16, 0xFE	; 254
 92a:	1f 4f       	sbci	r17, 0xFF	; 255
 92c:	f3 2d       	mov	r31, r3
 92e:	ff 76       	andi	r31, 0x6F	; 111
 930:	3f 2e       	mov	r3, r31
 932:	97 ff       	sbrs	r25, 7
 934:	09 c0       	rjmp	.+18     	; 0x948 <vfprintf+0x230>
 936:	90 95       	com	r25
 938:	80 95       	com	r24
 93a:	70 95       	com	r23
 93c:	61 95       	neg	r22
 93e:	7f 4f       	sbci	r23, 0xFF	; 255
 940:	8f 4f       	sbci	r24, 0xFF	; 255
 942:	9f 4f       	sbci	r25, 0xFF	; 255
 944:	f0 68       	ori	r31, 0x80	; 128
 946:	3f 2e       	mov	r3, r31
 948:	2a e0       	ldi	r18, 0x0A	; 10
 94a:	30 e0       	ldi	r19, 0x00	; 0
 94c:	a3 01       	movw	r20, r6
 94e:	33 d1       	rcall	.+614    	; 0xbb6 <__ultoa_invert>
 950:	88 2e       	mov	r8, r24
 952:	86 18       	sub	r8, r6
 954:	44 c0       	rjmp	.+136    	; 0x9de <vfprintf+0x2c6>
 956:	85 37       	cpi	r24, 0x75	; 117
 958:	31 f4       	brne	.+12     	; 0x966 <vfprintf+0x24e>
 95a:	23 2d       	mov	r18, r3
 95c:	2f 7e       	andi	r18, 0xEF	; 239
 95e:	b2 2e       	mov	r11, r18
 960:	2a e0       	ldi	r18, 0x0A	; 10
 962:	30 e0       	ldi	r19, 0x00	; 0
 964:	25 c0       	rjmp	.+74     	; 0x9b0 <vfprintf+0x298>
 966:	93 2d       	mov	r25, r3
 968:	99 7f       	andi	r25, 0xF9	; 249
 96a:	b9 2e       	mov	r11, r25
 96c:	8f 36       	cpi	r24, 0x6F	; 111
 96e:	c1 f0       	breq	.+48     	; 0x9a0 <vfprintf+0x288>
 970:	18 f4       	brcc	.+6      	; 0x978 <vfprintf+0x260>
 972:	88 35       	cpi	r24, 0x58	; 88
 974:	79 f0       	breq	.+30     	; 0x994 <vfprintf+0x27c>
 976:	ae c0       	rjmp	.+348    	; 0xad4 <vfprintf+0x3bc>
 978:	80 37       	cpi	r24, 0x70	; 112
 97a:	19 f0       	breq	.+6      	; 0x982 <vfprintf+0x26a>
 97c:	88 37       	cpi	r24, 0x78	; 120
 97e:	21 f0       	breq	.+8      	; 0x988 <vfprintf+0x270>
 980:	a9 c0       	rjmp	.+338    	; 0xad4 <vfprintf+0x3bc>
 982:	e9 2f       	mov	r30, r25
 984:	e0 61       	ori	r30, 0x10	; 16
 986:	be 2e       	mov	r11, r30
 988:	b4 fe       	sbrs	r11, 4
 98a:	0d c0       	rjmp	.+26     	; 0x9a6 <vfprintf+0x28e>
 98c:	fb 2d       	mov	r31, r11
 98e:	f4 60       	ori	r31, 0x04	; 4
 990:	bf 2e       	mov	r11, r31
 992:	09 c0       	rjmp	.+18     	; 0x9a6 <vfprintf+0x28e>
 994:	34 fe       	sbrs	r3, 4
 996:	0a c0       	rjmp	.+20     	; 0x9ac <vfprintf+0x294>
 998:	29 2f       	mov	r18, r25
 99a:	26 60       	ori	r18, 0x06	; 6
 99c:	b2 2e       	mov	r11, r18
 99e:	06 c0       	rjmp	.+12     	; 0x9ac <vfprintf+0x294>
 9a0:	28 e0       	ldi	r18, 0x08	; 8
 9a2:	30 e0       	ldi	r19, 0x00	; 0
 9a4:	05 c0       	rjmp	.+10     	; 0x9b0 <vfprintf+0x298>
 9a6:	20 e1       	ldi	r18, 0x10	; 16
 9a8:	30 e0       	ldi	r19, 0x00	; 0
 9aa:	02 c0       	rjmp	.+4      	; 0x9b0 <vfprintf+0x298>
 9ac:	20 e1       	ldi	r18, 0x10	; 16
 9ae:	32 e0       	ldi	r19, 0x02	; 2
 9b0:	f8 01       	movw	r30, r16
 9b2:	b7 fe       	sbrs	r11, 7
 9b4:	07 c0       	rjmp	.+14     	; 0x9c4 <vfprintf+0x2ac>
 9b6:	60 81       	ld	r22, Z
 9b8:	71 81       	ldd	r23, Z+1	; 0x01
 9ba:	82 81       	ldd	r24, Z+2	; 0x02
 9bc:	93 81       	ldd	r25, Z+3	; 0x03
 9be:	0c 5f       	subi	r16, 0xFC	; 252
 9c0:	1f 4f       	sbci	r17, 0xFF	; 255
 9c2:	06 c0       	rjmp	.+12     	; 0x9d0 <vfprintf+0x2b8>
 9c4:	60 81       	ld	r22, Z
 9c6:	71 81       	ldd	r23, Z+1	; 0x01
 9c8:	80 e0       	ldi	r24, 0x00	; 0
 9ca:	90 e0       	ldi	r25, 0x00	; 0
 9cc:	0e 5f       	subi	r16, 0xFE	; 254
 9ce:	1f 4f       	sbci	r17, 0xFF	; 255
 9d0:	a3 01       	movw	r20, r6
 9d2:	f1 d0       	rcall	.+482    	; 0xbb6 <__ultoa_invert>
 9d4:	88 2e       	mov	r8, r24
 9d6:	86 18       	sub	r8, r6
 9d8:	fb 2d       	mov	r31, r11
 9da:	ff 77       	andi	r31, 0x7F	; 127
 9dc:	3f 2e       	mov	r3, r31
 9de:	36 fe       	sbrs	r3, 6
 9e0:	0d c0       	rjmp	.+26     	; 0x9fc <vfprintf+0x2e4>
 9e2:	23 2d       	mov	r18, r3
 9e4:	2e 7f       	andi	r18, 0xFE	; 254
 9e6:	a2 2e       	mov	r10, r18
 9e8:	89 14       	cp	r8, r9
 9ea:	58 f4       	brcc	.+22     	; 0xa02 <vfprintf+0x2ea>
 9ec:	34 fe       	sbrs	r3, 4
 9ee:	0b c0       	rjmp	.+22     	; 0xa06 <vfprintf+0x2ee>
 9f0:	32 fc       	sbrc	r3, 2
 9f2:	09 c0       	rjmp	.+18     	; 0xa06 <vfprintf+0x2ee>
 9f4:	83 2d       	mov	r24, r3
 9f6:	8e 7e       	andi	r24, 0xEE	; 238
 9f8:	a8 2e       	mov	r10, r24
 9fa:	05 c0       	rjmp	.+10     	; 0xa06 <vfprintf+0x2ee>
 9fc:	b8 2c       	mov	r11, r8
 9fe:	a3 2c       	mov	r10, r3
 a00:	03 c0       	rjmp	.+6      	; 0xa08 <vfprintf+0x2f0>
 a02:	b8 2c       	mov	r11, r8
 a04:	01 c0       	rjmp	.+2      	; 0xa08 <vfprintf+0x2f0>
 a06:	b9 2c       	mov	r11, r9
 a08:	a4 fe       	sbrs	r10, 4
 a0a:	0f c0       	rjmp	.+30     	; 0xa2a <vfprintf+0x312>
 a0c:	fe 01       	movw	r30, r28
 a0e:	e8 0d       	add	r30, r8
 a10:	f1 1d       	adc	r31, r1
 a12:	80 81       	ld	r24, Z
 a14:	80 33       	cpi	r24, 0x30	; 48
 a16:	21 f4       	brne	.+8      	; 0xa20 <vfprintf+0x308>
 a18:	9a 2d       	mov	r25, r10
 a1a:	99 7e       	andi	r25, 0xE9	; 233
 a1c:	a9 2e       	mov	r10, r25
 a1e:	09 c0       	rjmp	.+18     	; 0xa32 <vfprintf+0x31a>
 a20:	a2 fe       	sbrs	r10, 2
 a22:	06 c0       	rjmp	.+12     	; 0xa30 <vfprintf+0x318>
 a24:	b3 94       	inc	r11
 a26:	b3 94       	inc	r11
 a28:	04 c0       	rjmp	.+8      	; 0xa32 <vfprintf+0x31a>
 a2a:	8a 2d       	mov	r24, r10
 a2c:	86 78       	andi	r24, 0x86	; 134
 a2e:	09 f0       	breq	.+2      	; 0xa32 <vfprintf+0x31a>
 a30:	b3 94       	inc	r11
 a32:	a3 fc       	sbrc	r10, 3
 a34:	10 c0       	rjmp	.+32     	; 0xa56 <vfprintf+0x33e>
 a36:	a0 fe       	sbrs	r10, 0
 a38:	06 c0       	rjmp	.+12     	; 0xa46 <vfprintf+0x32e>
 a3a:	b2 14       	cp	r11, r2
 a3c:	80 f4       	brcc	.+32     	; 0xa5e <vfprintf+0x346>
 a3e:	28 0c       	add	r2, r8
 a40:	92 2c       	mov	r9, r2
 a42:	9b 18       	sub	r9, r11
 a44:	0d c0       	rjmp	.+26     	; 0xa60 <vfprintf+0x348>
 a46:	b2 14       	cp	r11, r2
 a48:	58 f4       	brcc	.+22     	; 0xa60 <vfprintf+0x348>
 a4a:	b6 01       	movw	r22, r12
 a4c:	80 e2       	ldi	r24, 0x20	; 32
 a4e:	90 e0       	ldi	r25, 0x00	; 0
 a50:	76 d0       	rcall	.+236    	; 0xb3e <fputc>
 a52:	b3 94       	inc	r11
 a54:	f8 cf       	rjmp	.-16     	; 0xa46 <vfprintf+0x32e>
 a56:	b2 14       	cp	r11, r2
 a58:	18 f4       	brcc	.+6      	; 0xa60 <vfprintf+0x348>
 a5a:	2b 18       	sub	r2, r11
 a5c:	02 c0       	rjmp	.+4      	; 0xa62 <vfprintf+0x34a>
 a5e:	98 2c       	mov	r9, r8
 a60:	21 2c       	mov	r2, r1
 a62:	a4 fe       	sbrs	r10, 4
 a64:	0f c0       	rjmp	.+30     	; 0xa84 <vfprintf+0x36c>
 a66:	b6 01       	movw	r22, r12
 a68:	80 e3       	ldi	r24, 0x30	; 48
 a6a:	90 e0       	ldi	r25, 0x00	; 0
 a6c:	68 d0       	rcall	.+208    	; 0xb3e <fputc>
 a6e:	a2 fe       	sbrs	r10, 2
 a70:	16 c0       	rjmp	.+44     	; 0xa9e <vfprintf+0x386>
 a72:	a1 fc       	sbrc	r10, 1
 a74:	03 c0       	rjmp	.+6      	; 0xa7c <vfprintf+0x364>
 a76:	88 e7       	ldi	r24, 0x78	; 120
 a78:	90 e0       	ldi	r25, 0x00	; 0
 a7a:	02 c0       	rjmp	.+4      	; 0xa80 <vfprintf+0x368>
 a7c:	88 e5       	ldi	r24, 0x58	; 88
 a7e:	90 e0       	ldi	r25, 0x00	; 0
 a80:	b6 01       	movw	r22, r12
 a82:	0c c0       	rjmp	.+24     	; 0xa9c <vfprintf+0x384>
 a84:	8a 2d       	mov	r24, r10
 a86:	86 78       	andi	r24, 0x86	; 134
 a88:	51 f0       	breq	.+20     	; 0xa9e <vfprintf+0x386>
 a8a:	a1 fe       	sbrs	r10, 1
 a8c:	02 c0       	rjmp	.+4      	; 0xa92 <vfprintf+0x37a>
 a8e:	8b e2       	ldi	r24, 0x2B	; 43
 a90:	01 c0       	rjmp	.+2      	; 0xa94 <vfprintf+0x37c>
 a92:	80 e2       	ldi	r24, 0x20	; 32
 a94:	a7 fc       	sbrc	r10, 7
 a96:	8d e2       	ldi	r24, 0x2D	; 45
 a98:	b6 01       	movw	r22, r12
 a9a:	90 e0       	ldi	r25, 0x00	; 0
 a9c:	50 d0       	rcall	.+160    	; 0xb3e <fputc>
 a9e:	89 14       	cp	r8, r9
 aa0:	30 f4       	brcc	.+12     	; 0xaae <vfprintf+0x396>
 aa2:	b6 01       	movw	r22, r12
 aa4:	80 e3       	ldi	r24, 0x30	; 48
 aa6:	90 e0       	ldi	r25, 0x00	; 0
 aa8:	4a d0       	rcall	.+148    	; 0xb3e <fputc>
 aaa:	9a 94       	dec	r9
 aac:	f8 cf       	rjmp	.-16     	; 0xa9e <vfprintf+0x386>
 aae:	8a 94       	dec	r8
 ab0:	f3 01       	movw	r30, r6
 ab2:	e8 0d       	add	r30, r8
 ab4:	f1 1d       	adc	r31, r1
 ab6:	80 81       	ld	r24, Z
 ab8:	b6 01       	movw	r22, r12
 aba:	90 e0       	ldi	r25, 0x00	; 0
 abc:	40 d0       	rcall	.+128    	; 0xb3e <fputc>
 abe:	81 10       	cpse	r8, r1
 ac0:	f6 cf       	rjmp	.-20     	; 0xaae <vfprintf+0x396>
 ac2:	22 20       	and	r2, r2
 ac4:	09 f4       	brne	.+2      	; 0xac8 <vfprintf+0x3b0>
 ac6:	4e ce       	rjmp	.-868    	; 0x764 <vfprintf+0x4c>
 ac8:	b6 01       	movw	r22, r12
 aca:	80 e2       	ldi	r24, 0x20	; 32
 acc:	90 e0       	ldi	r25, 0x00	; 0
 ace:	37 d0       	rcall	.+110    	; 0xb3e <fputc>
 ad0:	2a 94       	dec	r2
 ad2:	f7 cf       	rjmp	.-18     	; 0xac2 <vfprintf+0x3aa>
 ad4:	f6 01       	movw	r30, r12
 ad6:	86 81       	ldd	r24, Z+6	; 0x06
 ad8:	97 81       	ldd	r25, Z+7	; 0x07
 ada:	02 c0       	rjmp	.+4      	; 0xae0 <vfprintf+0x3c8>
 adc:	8f ef       	ldi	r24, 0xFF	; 255
 ade:	9f ef       	ldi	r25, 0xFF	; 255
 ae0:	2b 96       	adiw	r28, 0x0b	; 11
 ae2:	0f b6       	in	r0, 0x3f	; 63
 ae4:	f8 94       	cli
 ae6:	de bf       	out	0x3e, r29	; 62
 ae8:	0f be       	out	0x3f, r0	; 63
 aea:	cd bf       	out	0x3d, r28	; 61
 aec:	df 91       	pop	r29
 aee:	cf 91       	pop	r28
 af0:	1f 91       	pop	r17
 af2:	0f 91       	pop	r16
 af4:	ff 90       	pop	r15
 af6:	ef 90       	pop	r14
 af8:	df 90       	pop	r13
 afa:	cf 90       	pop	r12
 afc:	bf 90       	pop	r11
 afe:	af 90       	pop	r10
 b00:	9f 90       	pop	r9
 b02:	8f 90       	pop	r8
 b04:	7f 90       	pop	r7
 b06:	6f 90       	pop	r6
 b08:	5f 90       	pop	r5
 b0a:	4f 90       	pop	r4
 b0c:	3f 90       	pop	r3
 b0e:	2f 90       	pop	r2
 b10:	08 95       	ret

00000b12 <strnlen_P>:
 b12:	fc 01       	movw	r30, r24
 b14:	05 90       	lpm	r0, Z+
 b16:	61 50       	subi	r22, 0x01	; 1
 b18:	70 40       	sbci	r23, 0x00	; 0
 b1a:	01 10       	cpse	r0, r1
 b1c:	d8 f7       	brcc	.-10     	; 0xb14 <strnlen_P+0x2>
 b1e:	80 95       	com	r24
 b20:	90 95       	com	r25
 b22:	8e 0f       	add	r24, r30
 b24:	9f 1f       	adc	r25, r31
 b26:	08 95       	ret

00000b28 <strnlen>:
 b28:	fc 01       	movw	r30, r24
 b2a:	61 50       	subi	r22, 0x01	; 1
 b2c:	70 40       	sbci	r23, 0x00	; 0
 b2e:	01 90       	ld	r0, Z+
 b30:	01 10       	cpse	r0, r1
 b32:	d8 f7       	brcc	.-10     	; 0xb2a <strnlen+0x2>
 b34:	80 95       	com	r24
 b36:	90 95       	com	r25
 b38:	8e 0f       	add	r24, r30
 b3a:	9f 1f       	adc	r25, r31
 b3c:	08 95       	ret

00000b3e <fputc>:
 b3e:	0f 93       	push	r16
 b40:	1f 93       	push	r17
 b42:	cf 93       	push	r28
 b44:	df 93       	push	r29
 b46:	fb 01       	movw	r30, r22
 b48:	23 81       	ldd	r18, Z+3	; 0x03
 b4a:	21 fd       	sbrc	r18, 1
 b4c:	03 c0       	rjmp	.+6      	; 0xb54 <fputc+0x16>
 b4e:	8f ef       	ldi	r24, 0xFF	; 255
 b50:	9f ef       	ldi	r25, 0xFF	; 255
 b52:	2c c0       	rjmp	.+88     	; 0xbac <fputc+0x6e>
 b54:	22 ff       	sbrs	r18, 2
 b56:	16 c0       	rjmp	.+44     	; 0xb84 <fputc+0x46>
 b58:	46 81       	ldd	r20, Z+6	; 0x06
 b5a:	57 81       	ldd	r21, Z+7	; 0x07
 b5c:	24 81       	ldd	r18, Z+4	; 0x04
 b5e:	35 81       	ldd	r19, Z+5	; 0x05
 b60:	42 17       	cp	r20, r18
 b62:	53 07       	cpc	r21, r19
 b64:	44 f4       	brge	.+16     	; 0xb76 <fputc+0x38>
 b66:	a0 81       	ld	r26, Z
 b68:	b1 81       	ldd	r27, Z+1	; 0x01
 b6a:	9d 01       	movw	r18, r26
 b6c:	2f 5f       	subi	r18, 0xFF	; 255
 b6e:	3f 4f       	sbci	r19, 0xFF	; 255
 b70:	31 83       	std	Z+1, r19	; 0x01
 b72:	20 83       	st	Z, r18
 b74:	8c 93       	st	X, r24
 b76:	26 81       	ldd	r18, Z+6	; 0x06
 b78:	37 81       	ldd	r19, Z+7	; 0x07
 b7a:	2f 5f       	subi	r18, 0xFF	; 255
 b7c:	3f 4f       	sbci	r19, 0xFF	; 255
 b7e:	37 83       	std	Z+7, r19	; 0x07
 b80:	26 83       	std	Z+6, r18	; 0x06
 b82:	14 c0       	rjmp	.+40     	; 0xbac <fputc+0x6e>
 b84:	8b 01       	movw	r16, r22
 b86:	ec 01       	movw	r28, r24
 b88:	fb 01       	movw	r30, r22
 b8a:	00 84       	ldd	r0, Z+8	; 0x08
 b8c:	f1 85       	ldd	r31, Z+9	; 0x09
 b8e:	e0 2d       	mov	r30, r0
 b90:	09 95       	icall
 b92:	89 2b       	or	r24, r25
 b94:	e1 f6       	brne	.-72     	; 0xb4e <fputc+0x10>
 b96:	d8 01       	movw	r26, r16
 b98:	16 96       	adiw	r26, 0x06	; 6
 b9a:	8d 91       	ld	r24, X+
 b9c:	9c 91       	ld	r25, X
 b9e:	17 97       	sbiw	r26, 0x07	; 7
 ba0:	01 96       	adiw	r24, 0x01	; 1
 ba2:	17 96       	adiw	r26, 0x07	; 7
 ba4:	9c 93       	st	X, r25
 ba6:	8e 93       	st	-X, r24
 ba8:	16 97       	sbiw	r26, 0x06	; 6
 baa:	ce 01       	movw	r24, r28
 bac:	df 91       	pop	r29
 bae:	cf 91       	pop	r28
 bb0:	1f 91       	pop	r17
 bb2:	0f 91       	pop	r16
 bb4:	08 95       	ret

00000bb6 <__ultoa_invert>:
 bb6:	fa 01       	movw	r30, r20
 bb8:	aa 27       	eor	r26, r26
 bba:	28 30       	cpi	r18, 0x08	; 8
 bbc:	51 f1       	breq	.+84     	; 0xc12 <__ultoa_invert+0x5c>
 bbe:	20 31       	cpi	r18, 0x10	; 16
 bc0:	81 f1       	breq	.+96     	; 0xc22 <__ultoa_invert+0x6c>
 bc2:	e8 94       	clt
 bc4:	6f 93       	push	r22
 bc6:	6e 7f       	andi	r22, 0xFE	; 254
 bc8:	6e 5f       	subi	r22, 0xFE	; 254
 bca:	7f 4f       	sbci	r23, 0xFF	; 255
 bcc:	8f 4f       	sbci	r24, 0xFF	; 255
 bce:	9f 4f       	sbci	r25, 0xFF	; 255
 bd0:	af 4f       	sbci	r26, 0xFF	; 255
 bd2:	b1 e0       	ldi	r27, 0x01	; 1
 bd4:	3e d0       	rcall	.+124    	; 0xc52 <__ultoa_invert+0x9c>
 bd6:	b4 e0       	ldi	r27, 0x04	; 4
 bd8:	3c d0       	rcall	.+120    	; 0xc52 <__ultoa_invert+0x9c>
 bda:	67 0f       	add	r22, r23
 bdc:	78 1f       	adc	r23, r24
 bde:	89 1f       	adc	r24, r25
 be0:	9a 1f       	adc	r25, r26
 be2:	a1 1d       	adc	r26, r1
 be4:	68 0f       	add	r22, r24
 be6:	79 1f       	adc	r23, r25
 be8:	8a 1f       	adc	r24, r26
 bea:	91 1d       	adc	r25, r1
 bec:	a1 1d       	adc	r26, r1
 bee:	6a 0f       	add	r22, r26
 bf0:	71 1d       	adc	r23, r1
 bf2:	81 1d       	adc	r24, r1
 bf4:	91 1d       	adc	r25, r1
 bf6:	a1 1d       	adc	r26, r1
 bf8:	20 d0       	rcall	.+64     	; 0xc3a <__ultoa_invert+0x84>
 bfa:	09 f4       	brne	.+2      	; 0xbfe <__ultoa_invert+0x48>
 bfc:	68 94       	set
 bfe:	3f 91       	pop	r19
 c00:	2a e0       	ldi	r18, 0x0A	; 10
 c02:	26 9f       	mul	r18, r22
 c04:	11 24       	eor	r1, r1
 c06:	30 19       	sub	r19, r0
 c08:	30 5d       	subi	r19, 0xD0	; 208
 c0a:	31 93       	st	Z+, r19
 c0c:	de f6       	brtc	.-74     	; 0xbc4 <__ultoa_invert+0xe>
 c0e:	cf 01       	movw	r24, r30
 c10:	08 95       	ret
 c12:	46 2f       	mov	r20, r22
 c14:	47 70       	andi	r20, 0x07	; 7
 c16:	40 5d       	subi	r20, 0xD0	; 208
 c18:	41 93       	st	Z+, r20
 c1a:	b3 e0       	ldi	r27, 0x03	; 3
 c1c:	0f d0       	rcall	.+30     	; 0xc3c <__ultoa_invert+0x86>
 c1e:	c9 f7       	brne	.-14     	; 0xc12 <__ultoa_invert+0x5c>
 c20:	f6 cf       	rjmp	.-20     	; 0xc0e <__ultoa_invert+0x58>
 c22:	46 2f       	mov	r20, r22
 c24:	4f 70       	andi	r20, 0x0F	; 15
 c26:	40 5d       	subi	r20, 0xD0	; 208
 c28:	4a 33       	cpi	r20, 0x3A	; 58
 c2a:	18 f0       	brcs	.+6      	; 0xc32 <__ultoa_invert+0x7c>
 c2c:	49 5d       	subi	r20, 0xD9	; 217
 c2e:	31 fd       	sbrc	r19, 1
 c30:	40 52       	subi	r20, 0x20	; 32
 c32:	41 93       	st	Z+, r20
 c34:	02 d0       	rcall	.+4      	; 0xc3a <__ultoa_invert+0x84>
 c36:	a9 f7       	brne	.-22     	; 0xc22 <__ultoa_invert+0x6c>
 c38:	ea cf       	rjmp	.-44     	; 0xc0e <__ultoa_invert+0x58>
 c3a:	b4 e0       	ldi	r27, 0x04	; 4
 c3c:	a6 95       	lsr	r26
 c3e:	97 95       	ror	r25
 c40:	87 95       	ror	r24
 c42:	77 95       	ror	r23
 c44:	67 95       	ror	r22
 c46:	ba 95       	dec	r27
 c48:	c9 f7       	brne	.-14     	; 0xc3c <__ultoa_invert+0x86>
 c4a:	00 97       	sbiw	r24, 0x00	; 0
 c4c:	61 05       	cpc	r22, r1
 c4e:	71 05       	cpc	r23, r1
 c50:	08 95       	ret
 c52:	9b 01       	movw	r18, r22
 c54:	ac 01       	movw	r20, r24
 c56:	0a 2e       	mov	r0, r26
 c58:	06 94       	lsr	r0
 c5a:	57 95       	ror	r21
 c5c:	47 95       	ror	r20
 c5e:	37 95       	ror	r19
 c60:	27 95       	ror	r18
 c62:	ba 95       	dec	r27
 c64:	c9 f7       	brne	.-14     	; 0xc58 <__ultoa_invert+0xa2>
 c66:	62 0f       	add	r22, r18
 c68:	73 1f       	adc	r23, r19
 c6a:	84 1f       	adc	r24, r20
 c6c:	95 1f       	adc	r25, r21
 c6e:	a0 1d       	adc	r26, r0
 c70:	08 95       	ret

00000c72 <_exit>:
 c72:	f8 94       	cli

00000c74 <__stop_program>:
 c74:	ff cf       	rjmp	.-2      	; 0xc74 <__stop_program>
